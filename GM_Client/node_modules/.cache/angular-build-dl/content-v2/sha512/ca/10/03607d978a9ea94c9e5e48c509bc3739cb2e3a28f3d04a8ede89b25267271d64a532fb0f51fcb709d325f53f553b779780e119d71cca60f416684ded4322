{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Login-logout/logincomponent.ts","webpack:///src/app/Login-logout/logincomponent.html","webpack:///src/app/TokenAuth/auth.guard.ts","webpack:///src/app/TokenAuth/auth.service.ts","webpack:///src/app/app-routing.model.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/alerta-permissao/alerta-permissao.component.ts","webpack:///src/app/components/alerta-permissao/alerta-permissao.component.html","webpack:///src/app/components/asp-net-user-edit/asp-net-user-edit.component.ts","webpack:///src/app/components/asp-net-user-edit/asp-net-user-edit.component.html","webpack:///src/app/components/asp-net-user-list/asp-net-user-list.component.ts","webpack:///src/app/components/asp-net-user-list/asp-net-user-list.component.html","webpack:///src/app/components/edit-permissao/edit-permissao.component.ts","webpack:///src/app/components/edit-permissao/edit-permissao.component.html","webpack:///src/app/components/equipamento-add/equip-add.component.ts","webpack:///src/app/components/equipamento-add/equip-add.component.html","webpack:///src/app/components/equipamento-edit/equip-edit.component.ts","webpack:///src/app/components/equipamento-edit/equip-edit.component.html","webpack:///src/app/components/equipamento-list/equip-list.component.ts","webpack:///src/app/components/equipamento-list/equip-list.component.html","webpack:///src/app/components/grupomaquina-list/grupomaquina-list.component.ts","webpack:///src/app/components/grupomaquina-list/grupomaquina-list.component.html","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/intervencao-add-user-home-page/intervencao-add-user-home-page.component.ts","webpack:///src/app/components/intervencao-add-user-home-page/intervencao-add-user-home-page.component.html","webpack:///src/app/components/intervencao-curativa-add/intervencao-curativa-add.component.ts","webpack:///src/app/components/intervencao-curativa-add/intervencao-curativa-add.component.html","webpack:///src/app/components/intervencao-preventiva-add/intervencao-preventiva-add.component.ts","webpack:///src/app/components/intervencao-preventiva-add/intervencao-preventiva-add.component.html","webpack:///src/app/components/list-permissao/list-permissao.component.ts","webpack:///src/app/components/list-permissao/list-permissao.component.html","webpack:///src/app/components/manutencao-preventiva-programada/manutencao-preventiva-programada.component.ts","webpack:///src/app/components/manutencao-preventiva-programada/manutencao-preventiva-programada.component.html","webpack:///src/app/components/manutencao-prog-home-page/manutencao-prog-home-page.component.ts","webpack:///src/app/components/manutencao-prog-home-page/manutencao-prog-home-page.component.html","webpack:///src/app/components/pedido-mcurativa-add/pedido-mcurativa-add.component.ts","webpack:///src/app/components/pedido-mcurativa-add/pedido-mcurativa-add.component.html","webpack:///src/app/components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component.ts","webpack:///src/app/components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component.html","webpack:///src/app/components/pedido-mpreventiva-add/pedido-mpreventiva-add.component.ts","webpack:///src/app/components/pedido-mpreventiva-add/pedido-mpreventiva-add.component.html","webpack:///src/app/components/pedido-preventiva-list/pedido-preventiva-list.component.ts","webpack:///src/app/components/pedido-preventiva-list/pedido-preventiva-list.component.html","webpack:///src/app/components/register-add/register-add.component.ts","webpack:///src/app/components/register-add/register-add.component.html","webpack:///src/app/shared/AspNetUsers/aspNetUsers.service.ts","webpack:///src/app/shared/Constantes/userRoles.ts","webpack:///src/app/shared/aspNetRoles/aspNetRoles.service.ts","webpack:///src/app/shared/aspNetUsers/aspNetUsers.service.ts","webpack:///src/app/shared/environments/environments.ts","webpack:///src/app/shared/equipamento/equipamento.service.ts","webpack:///src/app/shared/gruposmaquina/grupomaquina.service.ts","webpack:///src/app/shared/pedidoMcurativa-teste/pedidoMcurativa.service.ts","webpack:///src/app/shared/pedidoMpreventiva/pedidoMpreventiva.service.ts","webpack:///src/app/shared/register/register.service.ts","webpack:///src/app/shared/tipoUtilizador/tipoUtilizador.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","LoginComponent","actRoute","fb","authService","router","ngZone","aspNetUsersService","isLoading","form","group","username","required","password","authStatusSub","getAuthStatusListener","subscribe","authStatus","val","value","invalid","login","window","location","reload","selector","templateUrl","AuthGuard","dialog","dict","Admin","Convidado","Utilizador","route","state","currentUserRole","getCurrentUserRoleId","hasAccess","console","log","url","path","forEach","localStorage","getItem","isAuth","getIsAuth","navigate","open","AuthService","http","isAuthenticated","authStatusListener","TokenAPI","httpOptions","headers","Authorization","withCredentials","asObservable","Username","Password","options","data","post","response","token","access_token","expiresInDuration","expires_in","setAuthTimer","next","now","Date","expirationDate","getTime","saveAuthData","userName","roleId","setTimeout","refresh","err","message","clearTimeout","tokenTimer","clearAuthData","duration","authInformation","getAuthData","expiresIn","setItem","toISOString","removeItem","error","errorMessage","ErrorEvent","status","routes","component","canActivate","AppRoutingModule","forRoot","imports","providers","AppComponent","title","autoAuthUser","styleUrls","AppModule","declarations","entryComponents","bootstrap","AlertaPermissaoComponent","AspNetUserEditComponent","tiposUtilizadorService","tipoUtilizadorList","snapshot","paramMap","get","GetOneUser","updateUtilizadorForm","UserName","Nome","NumeroUtilizador","IDTipo","updateForm","loadTiposUtilizador","GetTiposUtilizador","UpdateAspNetUser","res","run","navigateByUrl","submitForm","AspNetUserListComponent","aspNetUserService","tipoUtilizadorService","aspNetUsersList","loadAspNetUsers","GetAspNetUsers","EditPermissaoComponent","aspNetRolesService","arrayPermissao","Name","roleName","oldRoleName","updatePermissaoForm","Email","UpdateAspNetRole","EquipAddComponent","equipamentoService","grupoMaquinaService","EquipArr","gruposMaquinaList","addEquipamento","loadGrupoMaquinas","equipForm","IDGrupoM","NumeroSerie","Descr","Marca","Tipo","DataCompra","CodigoInterno","EstadoEqui","DataFimAtividade","GetGruposMaquina","CreateEquip","EquipEditComponent","equipService","GetOneEquip","updateEquipForm","IDEquipamento","UpdateEquipamento","EquipListComponent","EquipList","loadEquip","GetEquipamentos","GrupoMaquinaListComponent","GrupoMaquinaList","HeaderComponent","user","userIsAuthenticated","userPermission","getUserName","authListenerSubs","unsubscribe","logout","IntervencaoAddUserHomePageComponent","pedidoServ","estadoIntervencaoList","IDPedido","loadEstadosIntervencao","descricao","estado","datainicio","datafim","valid","values","getRawValue","body","Observacoes","PedidoManutPreventivaID","IDEstadoIntervencao","DataInicioIntervencao","DataFimIntervencao","postIntervencao","GetEstadosIntervencao","onSubmit","IntervencaoCurativaAddComponent","idPedido","Descricao","IntervencaoPreventivaAddComponent","ListPermissaoComponent","aspNetRolesList","loadAspNetRoles","ManutencaoPreventivaProgramadaComponent","pedidoService","equipamentosFiltrados","equipamentosList","addPedido","loadEquipamentos","gmID","selectedOption","length","j","push","a","i","TipoDescr","SeccaoTrabalho","GetEquipamentosObser","pedidoForm","DataLimiteManutencaoPrev","UtilizadorIDUser","postPedidoPerGrupoMaquinas","postPedido","listJustgroupmachine","submitFormWithID","ManutencaoProgHomePageComponent","intervencoes","intervencoesFiltradas","pedidosEsperaUser","pedidosUserSub","getPedidosUser","getPedidosUserUpdateListener","pedidosuser","equip","ID","PedidoMcurativaAddComponent","PedidoMcurativaListTesteComponent","pedidosService","pedidos","pageSizeOptions","totalPedidos","pedidosPerPage","currentPage","selectedOptionGrupo","selectedOptionDateInicio","selectedOptionDateFim","getPedidos","pedidosSub","getPedidoUpdateListener","pedidoData","CountPedidos","getIntervencoes","intervencoesSub","getIntervencaoUpdateListener","myArray","pedidoPrint","datepipe","dataPedidoFormatada","transform","DataPedido","printable","properties","field","displayName","type","header","ngOnInit","endDate","beginDate","diffMs","diffMinutos","Math","round","hours","rhours","floor","minutes","rminutes","pageData","pageIndex","pageSize","DeleteIntervencao","maxI","reduce","prev","current","printPedidos","procuraAvancada","limparFiltros","PedidoMpreventivaAddComponent","PedidoPreventivaListComponent","pedidosImprimir","model","dataLimiteFormatada","RegisterComponent","registerService","addRegister","ConfirmPassword","CreateRegisto","BACKEND_URL","apiUrl","AspNetUsersService","baseurl","pipe","errorHandl","put","JSON","stringify","providedIn","UserRoles","AspNetRolesService","email","environment","production","EquipamentoService","GrupoMaquinaService","PedidosService","httpClient","pedidosUpdated","intervencoesUpdated","selectOptionGrupo","queryParms","pedidoCurativaData","PedidoManutCurativaList","map","pedidoCurativo","pedidoCurativoCount","pedidosCurativa","countPedidos","transformedintervencoes","x","transformedIntervencao","toPromise","PedidosPreventivosService","pedidosUser","usersList","pedidosUserUpdated","idGrupoMaquina","pedidoPreventivoData","PedidoManutPreventivoList","pedidoPreventivo","FichaManutencaoID","pedidoPreventivoCount","pedidosPreventiva","transformedpedidos","transformedPedido","RegisterService","TipoUtilizadorService","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Injectable, NgZone } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { TokenParams } from \"../TokenAuth/TokenParamsModel\";\r\nimport { AuthService } from \"../TokenAuth/auth.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  HttpClientModule,\r\n  HttpClient,\r\n  HttpHeaders,\r\n} from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n//import { AspNetUsersLoadComponent} from './asp-net-users-load/asp-net-users-load.component';\r\nimport { AspNetUsers } from \"../shared/aspNetUsers/aspNetUsers.model\";\r\nimport { AspNetUsersService } from \"../shared/aspNetUsers/aspNetUsers.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n//import * as moment from \"moment\";\r\n\r\n@Component({\r\n  selector: \"my-login\",\r\n  templateUrl: \"./logincomponent.html\",\r\n})\r\nexport class LoginComponent {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n  form: FormGroup;\r\n  tokenParam: TokenParams;\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((authStatus) => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n  constructor(\r\n    private actRoute: ActivatedRoute,   \r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    public aspNetUsersService: AspNetUsersService\r\n  ) {\r\n    this.form = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const val = this.form.value;\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.login(val.username, val.password);\r\n    \r\n\r\n /*    setTimeout(() => {\r\n      this.refresh();\r\n    },3000);  */\r\n  }\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"container wrapper wrapper2\">\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"form\">\r\n      <br />\r\n      <fieldset>\r\n        <br />\r\n        <legend>Autenticação de utilizador</legend>\r\n        <div class=\"form-field\">\r\n          <td>Email</td>\r\n          <input name=\"username\" formControlName=\"username\"/>\r\n        </div>\r\n        <div class=\"form-field\">\r\n          <td>Password</td>\r\n          <input name=\"password\" formControlName=\"password\" type=\"password\" />\r\n        </div>\r\n      </fieldset>\r\n      <br />\r\n      <div class=\"form-buttons\">\r\n        <button class=\"btn btn-primary\" (click)=\"login()\">Login</button>\r\n        &nbsp; &nbsp;\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UserRoles } from \"./../shared/Constantes/userRoles\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { AlertaPermissaoComponent } from \"../components/alerta-permissao/alerta-permissao.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  /*\r\n      Admin = 1,\r\n    Utilizador = 2, funcionario de manutencao\r\n    Convidado = 3, apenas acesso para listar equipamentos e pedir assistencia\r\n  */\r\n\r\n  //mudar o nome: UserRoleMapping\r\n  dict = [\r\n    [\"list-permissao\", UserRoles.Admin],\r\n    [\"edit-permissao\", UserRoles.Admin],\r\n    [\"edit-permissao/:id\", UserRoles.Admin],\r\n    [\"asp-net-user-list\", UserRoles.Admin],\r\n    [\"asp-net-user-edit/:id\", UserRoles.Admin],\r\n    [\"add-register\", UserRoles.Admin],\r\n    [\"pedido-mcurativa-list-teste\", UserRoles.Admin],\r\n    [\"pedido-mcurativa-list-teste\", UserRoles.Convidado],\r\n    [\"pedido-mcurativa-list-teste\", UserRoles.Utilizador],\r\n    [\"pedido-mcurativa-add\", UserRoles.Admin],\r\n    [\"pedido-mcurativa-add\", UserRoles.Convidado],\r\n    [\"pedido-mcurativa-add\", UserRoles.Utilizador],\r\n    [\"intervencao-curativa-add\", UserRoles.Admin],\r\n    [\"intervencao-curativa-add\", UserRoles.Utilizador],\r\n    [\"intervencao-preventiva-add\", UserRoles.Admin],\r\n    [\"intervencao-preventiva-add\", UserRoles.Utilizador],\r\n    [\"pedido-mpreventiva-add\", UserRoles.Admin],\r\n    [\"pedido-mpreventiva-add\", UserRoles.Utilizador],\r\n    [\"pedido-mpreventiva-add\", UserRoles.Convidado],\r\n    [\"pedido-preventiva-list\", UserRoles.Admin],\r\n    [\"pedido-preventiva-list\", UserRoles.Utilizador],\r\n    [\"pedido-preventiva-list\", UserRoles.Convidado],\r\n    [\"grupomaquina-list\", UserRoles.Admin],\r\n    [\"grupomaquina-list\", UserRoles.Utilizador],\r\n    [\"grupomaquina-list\", UserRoles.Convidado],\r\n    [\"edit-equip/:id\", UserRoles.Admin],\r\n    [\"edit-equip\", UserRoles.Admin],\r\n    [\"equip-list\", UserRoles.Admin],\r\n    [\"equip-list\", UserRoles.Convidado],\r\n    [\"equip-list\", UserRoles.Utilizador],\r\n    [\"add-equip\", UserRoles.Admin],\r\n    [\"manutencao-preventiva-programada\", UserRoles.Admin],\r\n    [\"manutencao-prog-home-page\", UserRoles.Utilizador],\r\n    [\"manutencao-prog-home-page\", UserRoles.Admin],\r\n    [\"alerta-permissao\", UserRoles.Admin],\r\n    [\"alerta-permissao\", UserRoles.Utilizador],\r\n    [\"alerta-permissao\", UserRoles.Convidado],\r\n  ];\r\n\r\n  //http://localhost:4200/edit-equip/195\r\n\r\n  /*\r\n   path: \"my-login\"\r\n  */\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    var currentUserRole = this.authService.getCurrentUserRoleId();\r\n    var hasAccess = false;\r\n\r\n    console.log(route.url[0].path);\r\n    this.dict.forEach(function (value) {\r\n      if (value[0] === route.url[0].path) {\r\n        //value[1] == currentUserRole\r\n        if (value[1] == localStorage.getItem(\"roleId\")) {\r\n          hasAccess = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate([\"/my-login\"]);\r\n    }\r\n    if (!hasAccess) {\r\n      this.dialog.open(AlertaPermissaoComponent);\r\n    }\r\n    return isAuth && hasAccess;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClientModule,\r\n  HttpClient,\r\n  HttpHeaders,\r\n} from \"@angular/common/http\";\r\nimport { TokenParams } from \"./TokenParamsModel\";\r\n\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n// Http Headers\r\n/*   httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n */\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { UserRoles } from '../shared/Constantes/userRoles';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private username: string;\r\n  private roleId: UserRoles;\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  //private TokenAPI = \"http://localhost:44334/Token\";\r\n\r\n  private TokenAPI = \"http://192.168.0.49:8005/Token\";\r\n  \r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  getUserName() {\r\n    return this.username;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  //Método de login\r\n  login(Username: string, Password: string) {\r\n\r\n    let headers = new HttpHeaders({\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    });\r\n    let options = { headers: headers };\r\n    var data =\r\n      \"grant_type=password&username=\" + Username + \"&password=\" + Password;\r\n\r\n    return this.http.post<TokenParams>(this.TokenAPI, data, options).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        const token = response.access_token;\r\n\r\n        if (token) {\r\n          const expiresInDuration = response.expires_in;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.authStatusListener.next(true);\r\n          this.isAuthenticated = true;\r\n          const now = new Date();\r\n          const expirationDate = new Date(\r\n            now.getTime() + expiresInDuration * 1000\r\n          );\r\n          console.log(\"expirationDate\", expirationDate);\r\n          // localStorage.setItem(\"token\", response.access_token);\r\n          this.saveAuthData(\r\n            response.access_token,\r\n            expirationDate,\r\n            response.userName,\r\n            response.roleId \r\n          );\r\n          this.router.navigate([\"/\"]);\r\n          setTimeout(() => {\r\n            this.refresh();\r\n          },1000);  \r\n        \r\n        }\r\n      },\r\n      (err) => {\r\n        this.authStatusListener.next(false);\r\n        console.log(err.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  logout() {\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    console.log(\"Passei no logout\");\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    console.log(\"Setting timer: \" + duration);\r\n    this.tokenTimer = setTimeout(() => {\r\n      //this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.username = authInformation.username;\r\n      this.roleId = UserRoles[authInformation.roleId];\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n    const username = localStorage.getItem(\"username\");\r\n    const roleId = localStorage.getItem(\"roleId\");\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      username: username,\r\n      roleId: roleId\r\n    };\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userName: string, roleId:string) {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\r\n    localStorage.setItem(\"username\", userName);\r\n    localStorage.setItem(\"roleId\", roleId);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"roleId\");\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getCurrentUserRoleId()\r\n  {\r\n    return this.roleId;\r\n\r\n  }\r\n\r\n  //Refresh à janela.\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  //erros de pedidos ao servidor.\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { NgModule, Component } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { AuthGuard } from \"../app/TokenAuth/auth.guard\";\r\n\r\nimport { EquipListComponent } from \"./components/equipamento-list/equip-list.component\";\r\nimport { GrupoMaquinaListComponent } from \"./components/grupomaquina-list/grupomaquina-list.component\";\r\nimport { EquipAddComponent } from \"./components/equipamento-add/equip-add.component\";\r\nimport { EquipEditComponent } from \"./components/equipamento-edit/equip-edit.component\";\r\nimport { RegisterComponent } from \"./components/register-add/register-add.component\";\r\nimport { LoginComponent } from \"./Login-logout/logincomponent\";\r\nimport { AspNetUserListComponent } from \"./components/asp-net-user-list/asp-net-user-list.component\";\r\nimport { AspNetUserEditComponent } from \"./components/asp-net-user-edit/asp-net-user-edit.component\";\r\nimport { PedidoMcurativaListTesteComponent } from \"./components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component\";\r\nimport { PedidoMcurativaAddComponent } from \"./components/pedido-mcurativa-add/pedido-mcurativa-add.component\";\r\nimport { IntervencaoCurativaAddComponent } from \"./components/intervencao-curativa-add/intervencao-curativa-add.component\";\r\nimport { PedidoPreventivaListComponent } from \"./components/pedido-preventiva-list/pedido-preventiva-list.component\";\r\nimport { PedidoMpreventivaAddComponent } from \"./components/pedido-mpreventiva-add/pedido-mpreventiva-add.component\";\r\nimport { IntervencaoPreventivaAddComponent } from \"./components/intervencao-preventiva-add/intervencao-preventiva-add.component\";\r\nimport { ManutencaoPreventivaProgramadaComponent} from \"./components/manutencao-preventiva-programada/manutencao-preventiva-programada.component\";\r\nimport {ManutencaoProgHomePageComponent } from \"./components/manutencao-prog-home-page/manutencao-prog-home-page.component\";\r\nimport {ListPermissaoComponent} from \"./components/list-permissao/list-permissao.component\";\r\nimport {EditPermissaoComponent } from \"./components/edit-permissao/edit-permissao.component\";\r\nimport{AlertaPermissaoComponent} from \"./components/alerta-permissao/alerta-permissao.component\";\r\n\r\nimport { audit } from 'rxjs/operators';\r\nconst routes: Routes = [\r\n  {\r\n    path: \"edit-equip/:id\",\r\n    component: EquipEditComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n\r\n  {\r\n    path: \"equip-list\",\r\n    component: EquipListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: \"add-equip\", component: EquipAddComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: \"grupomaquina-list\",\r\n    component: GrupoMaquinaListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"add-register\",\r\n    component: RegisterComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: \"my-login\", component: LoginComponent },\r\n  {\r\n    path: \"asp-net-user-list\",\r\n    component: AspNetUserListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"asp-net-user-edit/:id\",\r\n    component: AspNetUserEditComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-mcurativa-list-teste\",\r\n    component: PedidoMcurativaListTesteComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-mcurativa-add\",\r\n    component: PedidoMcurativaAddComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"intervencao-curativa-add\",\r\n    component: IntervencaoCurativaAddComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"intervencao-preventiva-add\",\r\n    component: IntervencaoPreventivaAddComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-mpreventiva-add\",\r\n    component : PedidoMpreventivaAddComponent,\r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-preventiva-list\",\r\n    component: PedidoPreventivaListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path:\"manutencao-preventiva-programada\", \r\n    component: ManutencaoPreventivaProgramadaComponent,\r\n    canActivate:[AuthGuard],\r\n  }, \r\n  {\r\n    path:\"manutencao-prog-home-page\",\r\n    component: ManutencaoProgHomePageComponent,\r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path:\"list-permissao\",\r\n    component:ListPermissaoComponent, \r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path:\"edit-permissao/:id\",\r\n    component: EditPermissaoComponent,\r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path:\"alerta-permissao\", component: AlertaPermissaoComponent,\r\n    canActivate:[AuthGuard],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport {AuthService} from '../app/TokenAuth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    // private errorService: ErrorService\n  ) {}\n\n  title = 'GestaoManutencao';\n\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n    // this.errorSub = this.errorService.getErrorListener().subscribe(\n    //   message => this.hasError = message !== null\n    // );\n  }\n}\n","<app-header></app-header>\n<main>\n  \n  <router-outlet></router-outlet>   \n  \n  \n</main>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormBuilder, FormsModule, FormGroup } from \"@angular/forms\";\nimport { AppRoutingModule } from \"./app-routing.model\";\nimport { AppComponent } from \"./app.component\";\n\n/* Http client module */\nimport { HttpClientModule } from \"@angular/common/http\";\n\n/* Service */\n\n\n/* Forms module */\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport {\n  NgxMatDatetimePickerModule,\n  NgxMatTimepickerModule,\n  NgxMatNativeDateModule,\n} from \"@angular-material-components/datetime-picker\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport {MatMenuModule} from '@angular/material/menu';\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport {  MatListModule } from  '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\n\n/* Components */\nimport { EquipListComponent } from \"./components/equipamento-list/equip-list.component\";\nimport { EquipAddComponent } from \"./components/equipamento-add/equip-add.component\";\nimport { GrupoMaquinaListComponent } from \"./components/grupomaquina-list/grupomaquina-list.component\";\nimport { EquipEditComponent } from \"./components/equipamento-edit/equip-edit.component\";\nimport { RegisterComponent } from \"./components/register-add/register-add.component\";\nimport { AuthService } from \"./TokenAuth/auth.service\";\nimport { LoginComponent } from \"./Login-logout/logincomponent\";\nimport { AspNetUserListComponent } from \"./components/asp-net-user-list/asp-net-user-list.component\";\nimport { AspNetUserEditComponent } from \"./components/asp-net-user-edit/asp-net-user-edit.component\";\nimport { PedidoMcurativaListTesteComponent } from \"./components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component\";\nimport { PedidoMcurativaAddComponent } from \"./components/pedido-mcurativa-add/pedido-mcurativa-add.component\";\nimport { IntervencaoCurativaAddComponent } from \"./components/intervencao-curativa-add/intervencao-curativa-add.component\";\nimport { PedidoPreventivaListComponent } from './components/pedido-preventiva-list/pedido-preventiva-list.component';\nimport { PedidoMpreventivaAddComponent } from './components/pedido-mpreventiva-add/pedido-mpreventiva-add.component';\nimport { EquipamentoService } from \"./shared/equipamento/equipamento.service\";\nimport { GrupoMaquinaService } from \"./shared/gruposmaquina/grupomaquina.service\";\nimport { AspNetUsersService } from \"./shared/aspNetUsers/aspNetUsers.service\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport { IntervencaoPreventivaAddComponent } from './components/intervencao-preventiva-add/intervencao-preventiva-add.component';\nimport { ManutencaoPreventivaProgramadaComponent } from './components/manutencao-preventiva-programada/manutencao-preventiva-programada.component';\nimport { ManutencaoProgHomePageComponent } from './components/manutencao-prog-home-page/manutencao-prog-home-page.component';\nimport { IntervencaoAddUserHomePageComponent } from './components/intervencao-add-user-home-page/intervencao-add-user-home-page.component';\nimport { EditPermissaoComponent } from './components/edit-permissao/edit-permissao.component';\nimport { ListPermissaoComponent } from './components/list-permissao/list-permissao.component';\nimport { AlertaPermissaoComponent } from './components/alerta-permissao/alerta-permissao.component';\n\n//import { AspNetUsersLoadComponent } from './asp-net-users-load/asp-net-users-load.component';\n//import { TipoUtilizadorListComponent } from './components/tipo-utilizador-list/tipo-utilizador-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EquipListComponent,\n    EquipAddComponent,\n    GrupoMaquinaListComponent,\n    EquipEditComponent,\n    RegisterComponent,\n    LoginComponent,\n    AspNetUserListComponent,\n    AspNetUserEditComponent,\n    PedidoMcurativaListTesteComponent,\n    PedidoMcurativaAddComponent,\n    IntervencaoCurativaAddComponent,\n    HeaderComponent,\n    PedidoPreventivaListComponent,\n    PedidoMpreventivaAddComponent,\n    IntervencaoPreventivaAddComponent,\n    ManutencaoPreventivaProgramadaComponent,\n    ManutencaoProgHomePageComponent,\n    IntervencaoAddUserHomePageComponent,\n    EditPermissaoComponent,\n    ListPermissaoComponent,\n    AlertaPermissaoComponent,\n \n  ],\n  entryComponents: [IntervencaoCurativaAddComponent, IntervencaoPreventivaAddComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatProgressSpinnerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatNativeDateModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule, \n    MatMenuModule, \n    MatSidenavModule\n  ],\n\n  providers: [AuthService] /*Aqui ficar AuthService ou RegisterService */,\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@Component({\n  selector: 'app-alerta-permissao',\n  templateUrl: './alerta-permissao.component.html',\n  styleUrls: ['./alerta-permissao.component.css']\n})\nexport class AlertaPermissaoComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n  ) {\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Sem permissão para aceder a esta página</h4>\n<br>\n<p style=\"text-align:center\">Caso o problema persista, contacte o administrador</p>\n\n<button \nmat-button\nclass=\"close-icon\"\n[mat-dialog-close]=\"true\"\n\n>\nFechar\n</button>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TipoUtilizadorService } from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { AspNetUsersService } from '../../shared/AspNetUsers/aspNetUsers.service';\n\n\n@Component({\n  selector: 'app-asp-net-user-edit',\n  templateUrl: './asp-net-user-edit.component.html',\n  styleUrls: ['./asp-net-user-edit.component.css']\n})\nexport class AspNetUserEditComponent implements OnInit {\n\n  updateUtilizadorForm: FormGroup;\n  tipoUtilizadorList: any = [];\n\n  ngOnInit(){\n    this.updateForm();\n    this.loadTiposUtilizador();\n  }\n  \n  constructor(\n     private actRoute: ActivatedRoute,    \n     public tiposUtilizadorService: TipoUtilizadorService,\n     public aspNetUsersService: AspNetUsersService,\n     public fb: FormBuilder,\n     private ngZone: NgZone,\n     private router: Router\n  )\n   { \n\n    var id = this.actRoute.snapshot.paramMap.get('id');\n    this.aspNetUsersService.GetOneUser(id).subscribe((data) => {\n      this.updateUtilizadorForm = this.fb.group({\n        UserName: [data.UserName],\n        Nome: [data.Nome],\n        NumeroUtilizador: [data.NumeroUtilizador],\n        IDTipo: [data.IDTipo],       \n      })\n      console.log(data);\n    })\n  }\n\n  updateForm(){\n    this.updateUtilizadorForm = this.fb.group({\n    UserName: [''],\n    Nome : [''],\n    NumeroUtilizador : [0],\n    IDTipo : [0]\n    })   \n \n  }\n\n  loadTiposUtilizador() {\n    return this.tiposUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n    this.tipoUtilizadorList = data;})\n}\n\nsubmitForm(){ \n  var id = this.actRoute.snapshot.paramMap.get('id');\n  this.aspNetUsersService.UpdateAspNetUser(id, this.updateUtilizadorForm.value).subscribe(res => {\n    this.ngZone.run(() => this.router.navigateByUrl('/asp-net-user-list'))\n  })\n}\n\n\n}\n\n\n  \n\n\n\n\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h3>Alterar ficha de utilizador</h3>\n            <form [formGroup]=\"updateUtilizadorForm\" (ngSubmit)=\"submitForm()\" novalidate>\n                <label>Email</label>\n                <div class=\"form-group\">         \n                    <input type=\"text\" formControlName=\"UserName\" class=\"form-control\" disabled>\n                </div>\n                <div class=\"form-group\">\n                    <label>Nome</label>\n                    <input type=\"text\" formControlName=\"Nome\" class=\"form-control\">\n                </div>\n\n                <label>Tipo de utilizador</label>\n                <br>\n                <select class=\"form-group\" formControlName=\"IDTipo\">\n                    <option *ngFor=\"let item of tipoUtilizadorList\" [value]=\"item.IDTipo\">{{item.TipoDescr}}</option>                  \n                </select>\n                \n                <div class=\"form-group\">\n                    <label>Nº Utilizador</label>\n                    <input type=\"text\" formControlName=\"NumeroUtilizador\" class=\"form-control\" >\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n            </form>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n//import { UtilizadorService } from '../../shared/utilizador/utilizador.service';\nimport { TipoUtilizadorService } from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { AspNetUsersService } from '../../shared/aspNetUsers/aspNetUsers.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n \n\n@Component({\n  selector: 'app-asp-net-user-list',\n  templateUrl: './asp-net-user-list.component.html',\n  styleUrls: ['./asp-net-user-list.component.css']\n})\nexport class AspNetUserListComponent implements OnInit {\n\n  aspNetUsersList: any = [];\n  tipoUtilizadorList: any = [];\n\n  constructor(\n    private aspNetUserService : AspNetUsersService,\n    private tipoUtilizadorService : TipoUtilizadorService,\n    private actRoute: ActivatedRoute\n  ) { }\n\n\n  ngOnInit() {\n    this.loadAspNetUsers();\n    this.loadTiposUtilizador();\n  }\n\n  //load utilizadores da DB \n  loadAspNetUsers() {\n    return this.aspNetUserService.GetAspNetUsers().subscribe((data: {}) => {\n      this.aspNetUsersList = data;\n    })\n  }\n\n  //load tipos de utilizador da DB\n  loadTiposUtilizador() {\n    return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n    this.tipoUtilizadorList = data;\n   \n })\n\n}\n\n\n\n}\n\n\n\n\n\n","<div class=\"container wrapper\">\n  <div class=\"row\">\n    <!-- Utilizadores table -->\n    <br />\n    \n    \n    <div class=\"col-md-12\">\n      <div class=\"inner\">\n        <br />\n        <h3>Resumo dos utilizadores</h3>\n       \n        <button type=\"button\"  class=\"btn btn-success btn-sm move-right\"  style=\"float: left\"\n        [routerLink]=\"['/list-permissao']\">Gerir permissões</button>  \n\n          <button\n            type=\"button\"\n            class=\"btn btn-success btn-sm move-right\"\n            style=\"float:right;\"\n            [routerLink]=\"['/add-register']\"\n          >\n            Novo registo\n          </button>\n\n        <br>\n        <br />\n        <table class=\"table table-bordered\" style=\"text-align:center\">\n          <thead>\n            <tr>\n              \n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Nome</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\" width=\"165\">Nº de funcionário</th>\n              <th scope=\"col\">Cargo</th>\n\n            </tr>\n          </thead>\n          <tbody>\n            <tr></tr>\n            <tr *ngFor=\"let utilizador of aspNetUsersList; let i = index\">\n              <th scope=\"row\">{{i+1}}</th>\n              <td>{{ utilizador.Nome }}</td>\n              <td>{{ utilizador.UserName }}</td>\n              <td width=\"165\">{{ utilizador.NumeroUtilizador }}</td>\n              <ng-container *ngFor=\"let tu of tipoUtilizadorList\">\n                <td *ngIf=\"tu.IDTipo == utilizador.IDTipo\">\n                  {{ tu.TipoDescr }}\n                </td>\n              </ng-container>\n              <td width=\"30\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success btn-sm move-right\"\n                  [routerLink]=\"['/asp-net-user-edit/', utilizador.UserName]\"\n                >\n                  Editar\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      \n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AspNetRolesService } from '../../shared/aspNetRoles/aspNetRoles.service';\n\n\n@Component({\n  selector: 'app-edit-permissao',\n  templateUrl: './edit-permissao.component.html',\n  styleUrls: ['./edit-permissao.component.css']\n})\nexport class EditPermissaoComponent implements OnInit {\n\n  updatePermissaoForm: FormGroup;\n\n  arrayPermissao  = [\n    {Name: \"Admin\" },\n    {Name: \"Utilizador\" },\n    {Name:  \"Convidado\"}\n    ]\n\n    roleName = \"\";\n    userName = \"\";\n    oldRoleName =\"\";\n  \n\n  ngOnInit(){\n    this.updateForm();\n  }\n  \n  constructor(\n     private actRoute: ActivatedRoute,    \n     public aspNetRolesService: AspNetRolesService,\n     public fb: FormBuilder,\n     private ngZone: NgZone,\n     private router: Router\n  )\n   { \n\n    console.log(\"edit component antes de chamar o getOneUser\");\n    var id = this.actRoute.snapshot.paramMap.get('id');\n    this.aspNetRolesService.GetOneUser(id).subscribe((data) => {\n      this.updatePermissaoForm = this.fb.group({\n        Email: [data.Email],\n        Name:[data.Name],\n        Nome:[data.Nome],    \n        \n        \n      })\n      this.userName = data.Email;\n      this.oldRoleName = data.Name;\n      this.roleName = data.Name;\n      console.log(data);\n    })\n  }\n\n  updateForm(){\n    this.updatePermissaoForm = this.fb.group({\n    Email: [''],\n    Name : [''],\n    Nome : ['']\n    })   \n \n  }\n\n\nsubmitForm(){ \n/* var id = this.actRoute.snapshot.paramMap.get('Email');\n  var rolename = this.actRoute.snapshot.paramMap.get('Name');\n  console.log(id, \"id ---, \", rolename, \" role\" ); */\n  console.log(\"UsernameNGMODEL: \", this.userName); \n  console.log(\"RoleNameNGMODEL: \", this.roleName); \n\n  this.aspNetRolesService.UpdateAspNetRole(this.userName, this.roleName, this.oldRoleName, this.updatePermissaoForm.value).subscribe(res => {\n    this.ngZone.run(() => this.router.navigateByUrl('/list-permissao'))\n  }) \n}\n\n\n}\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <br />\n            <h3>Alterar permissão do utilizador</h3>\n            <form [formGroup]=\"updatePermissaoForm\" (ngSubmit)=\"submitForm()\" novalidate>\n                <label>Nome</label>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"Nome\" class=\"form-control\" disabled />\n                </div>\n                <div class=\"form-group\">\n                    <label>Email</label>\n                    <input type=\"text\" [(ngModel)]=\"userName\" formControlName=\"Email\" class=\"form-control\" disabled />\n                </div>\n\n                <label>Tipo de utilizador</label>\n                <br />\n                <select class=\"form-group\" [(ngModel)]=\"roleName\" formControlName=\"Name\">\n                    <option *ngFor=\"let item of arrayPermissao\" [value]=\"item.Name\">{{\n            item.Name\n          }}</option>\n                </select>\n\n                <br />\n                <br />\n\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { EquipamentoService } from '../../shared/equipamento/equipamento.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-equip',\r\n  templateUrl: './equip-add.component.html',\r\n  styleUrls: ['./equip-add.component.css']\r\n})\r\n\r\nexport class EquipAddComponent implements OnInit {\r\n  equipForm: FormGroup;\r\n  EquipArr: any = [];\r\n  gruposMaquinaList: any = [];\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.addEquipamento(),\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private ngZone: NgZone,\r\n    private router: Router,\r\n    public equipamentoService: EquipamentoService, \r\n    public grupoMaquinaService: GrupoMaquinaService,\r\n    private actRoute: ActivatedRoute\r\n  ){ }\r\n\r\n  addEquipamento() {\r\n    this.equipForm = this.fb.group({\r\n      IDGrupoM : [0],\r\n      NumeroSerie : [''],\r\n      Descr: [''],\r\n      Marca: [''],\r\n      Tipo:[''],\r\n      DataCompra: [''],\r\n      CodigoInterno: [''],\r\n      EstadoEqui: [0],\r\n      DataFimAtividade:['']   \r\n    })\r\n  }\r\n\r\n  loadGrupoMaquinas() {\r\n    return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n      this.gruposMaquinaList = data;\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    this.equipamentoService.CreateEquip(this.equipForm.value).subscribe(res => {\r\n      console.log('Equipamento adicionado!')\r\n      this.ngZone.run(() => this.router.navigateByUrl('/equip-list'))\r\n    });\r\n  }\r\n}","<div class=\"container wrapper wrapper2\">\r\n    <div class=\"row\">\r\n\r\n        <!-- Form -->\r\n        <div class=\"col-md-12\">\r\n            <br>\r\n            <h4>Adicionar equipamento</h4>\r\n            <br>\r\n            <div class=\"td\">Grupo de Máquina</div>\r\n            <form [formGroup]=\"equipForm\" (ngSubmit)=\"submitForm()\" novalidate>   \r\n                <select class=\"form-group\" formControlName=\"IDGrupoM\">\r\n                    <label>Grupo de máquina</label> \r\n                    <option value=\"0\">Selecione</option>   \r\n                    <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\" style=\"width:500px\">{{item.Descr}}</option>                  \r\n                </select>\r\n                <div class=\"form-group\">\r\n                    <label>Número série</label>\r\n                    <input type=\"text\" formControlName=\"NumeroSerie\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Descrição</label>\r\n                    <input type=\"text\" formControlName=\"Descr\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Marca</label>\r\n                    <input type=\"text\" formControlName=\"Marca\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Tipo</label>\r\n                    <input type=\"text\" formControlName=\"Tipo\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Data de compra</label>\r\n                    <input type=\"Date\" formControlName=\"DataCompra\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Codigo interno</label>\r\n                    <input type=\"text\" formControlName=\"CodigoInterno\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Estado do equipamento</label>\r\n                    <input type=\"text\" formControlName=\"EstadoEqui\" class=\"form-control\" style=\"width:50px\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                <br>\r\n                <br>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { EquipamentoService } from '../../shared/equipamento/equipamento.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-equip',\r\n  templateUrl: './equip-edit.component.html',\r\n  styleUrls: ['./equip-edit.component.css']\r\n})\r\n\r\nexport class EquipEditComponent implements OnInit {\r\n\r\n  \r\n  gruposMaquinaList: any = [];\r\n  updateEquipForm: FormGroup;\r\n  \r\n  ngOnInit() {\r\n    this.updateForm();\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    private actRoute: ActivatedRoute,    \r\n    public equipService: EquipamentoService,\r\n    public fb: FormBuilder,\r\n    private ngZone: NgZone,\r\n    private router: Router, \r\n    public grupoMaquinaService : GrupoMaquinaService\r\n  ) { \r\n    var id = this.actRoute.snapshot.paramMap.get('id');\r\n    this.equipService.GetOneEquip(id).subscribe((data) => {\r\n      this.updateEquipForm = this.fb.group({\r\n        IDEquipamento: [data.IDEquipamento],\r\n        IDGrupoM: [data.IDGrupoM],\r\n        NumeroSerie: [data.NumeroSerie],\r\n        Descr: [data.Descr],\r\n        Marca: [data.Marca],\r\n        Tipo: [data.Tipo],\r\n        DataCompra: [data.DataCompra],\r\n        CodigoInterno: [data.CodigoInterno],\r\n        EstadoEqui: [data.EstadoEqui],\r\n        DataFimAtividade: [data.DataFimAtividade]\r\n      })\r\n    })\r\n  }\r\n\r\n  updateForm(){\r\n    this.updateEquipForm = this.fb.group({\r\n    IDEquipamento: [0],\r\n    IDGrupoM : [0],\r\n    NumeroSerie : [''],\r\n    Descr: [''],\r\n    Marca: [''],\r\n    Tipo: [''],\r\n    DataCompra: [Date],\r\n    CodigoInterno: [''],\r\n    EstadoEqui: [0],\r\n    DataFimAtividade: [Date]\r\n    })    \r\n  }\r\n\r\n  loadGrupoMaquinas() {\r\n    return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n      this.gruposMaquinaList = data;\r\n    })\r\n  }\r\n\r\n  submitForm(){ \r\n    var id = this.actRoute.snapshot.paramMap.get('id');\r\n    this.equipService.UpdateEquipamento(id, this.updateEquipForm.value).subscribe(res => {\r\n      this.ngZone.run(() => this.router.navigateByUrl('/equip-list'))\r\n    })\r\n  }\r\n}","<div class=\"container wrapper wrapper2\">\r\n    <div class=\"row\">\r\n\r\n        <!-- Form -->\r\n        <div class=\"col-md-12\">\r\n            <br>\r\n            <h3>Alterar informação de equipamento</h3>\r\n            <form [formGroup]=\"updateEquipForm\" (ngSubmit)=\"submitForm()\" novalidate>\r\n                <div class=\"form-group\">    \r\n                    <input type=\"hidden\" formControlName=\"IDEquipamento\" class=\"form-control\">\r\n                </div>\r\n                <label>Grupo de máquina</label>\r\n                <br>\r\n                <select class=\"form-group\" formControlName=\"IDGrupoM\">\r\n                   \r\n                    <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{item.Descr}}</option>                  \r\n                </select>\r\n                <div class=\"form-group\">\r\n                    <label>NumeroSerie</label>\r\n                    <input type=\"text\" formControlName=\"NumeroSerie\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Descrição</label>\r\n                    <input type=\"text\" formControlName=\"Descr\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Marca</label>\r\n                    <input type=\"text\" formControlName=\"Marca\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Tipo</label>\r\n                    <input type=\"text\" formControlName=\"Tipo\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Data compra</label>\r\n                    <input type=\"date\" formControlName=\"DataCompra\" class=\"form-control\">\r\n                </div><div class=\"form-group\">\r\n                    <label>Codigo interno</label>\r\n                    <input type=\"text\" formControlName=\"CodigoInterno\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Estado equipamento</label>\r\n                    <input type=\"text\" formControlName=\"EstadoEqui\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Data fim atividade</label>\r\n                    <input type=\"date\" formControlName=\"DataFimAtividade\" class=\"form-control\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, EventEmitter, Input } from '@angular/core';\r\nimport { EquipamentoService } from '../../shared/equipamento/equipamento.service';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\nimport { Equipamento } from 'src/app/shared/equipamento/equipamentomodel';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n \r\n\r\n\r\n@Component({\r\n  selector: 'app-equip-list',\r\n  templateUrl: './equip-list.component.html',\r\n  styleUrls: ['./equip-list.component.css']\r\n})\r\nexport class EquipListComponent implements OnInit {\r\n\r\n  \r\n  EquipList : Equipamento[] = []; //criar um array de objecto equipamentos.\r\n  //EquipList: any = [];\r\n  gruposMaquinaList: any = [];\r\n\r\n  equipToPedidos(){\r\n    this.EquipList;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadEquip();\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    public equipamentoService: EquipamentoService,\r\n    public grupoMaquinaService: GrupoMaquinaService,\r\n    private actRoute: ActivatedRoute\r\n  ){ }\r\n\r\n   // lista equipamentos \r\n   loadEquip() {\r\n    return this.equipamentoService.GetEquipamentos().subscribe((data: Equipamento[]) => {\r\n      this.EquipList = data;\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  //load dos grupos de máquinas.\r\n  loadGrupoMaquinas() {\r\n       return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n       this.gruposMaquinaList = data;\r\n      \r\n    })\r\n  }\r\n}","\r\n<div class=\"container wrapper\">\r\n    <div class=\"row\">\r\n\r\n        \r\n        <!-- Equipamentos table -->\r\n        <div class=\"col-md-12\">\r\n\r\n            <div class=\"inner\">\r\n                <div id=\"main\">\r\n                    <br>\r\n                    <h3>Equipamentos</h3> <button type=\"button\" class=\"btn btn-success btn-sm move-right\" style=\"position: absolute; right: 0;\"\r\n                    [routerLink]=\"['/add-equip']\">Novo equipamento</button>\r\n                    \r\n                  </div> \r\n                  <br>\r\n                <table class=\"table table-bordered\" style=\"text-align:center;\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Grupo de máquina</th>\r\n                            <th scope=\"col\">Codigo interno</th>\r\n                            <th scope=\"col\">Descrição</th>\r\n                            <th scope=\"col\">Marca</th>\r\n                            <th scope=\"col\">Número de Série</th>\r\n                            \r\n                            <th scope=\"col\">Tipo</th>\r\n                            <th scope=\"col\">Data de compra</th>\r\n                            \r\n                            <th scope=\"col\">Estado do equipamento</th>\r\n                            <th scope=\"col\">Data fim atividade</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                        <tr *ngFor=\"let equipamentos of EquipList;let i = index\">\r\n                            <th scope=\"row\">{{i+1}}</th>\r\n                            <ng-container *ngFor=\"let gm of gruposMaquinaList\">\r\n                                <td *ngIf=\"gm.IDGrupoMaquinas==equipamentos.IDGrupoM\">{{gm.Descr}}</td>\r\n                            </ng-container>\r\n                            <td>{{equipamentos.CodigoInterno}}</td>  \r\n                            <td>{{equipamentos.Descr}}</td>\r\n                            <td>{{equipamentos.Marca}}</td>\r\n                            <td>{{equipamentos.NumeroSerie}}</td>\r\n                            \r\n                            \r\n                            <td>{{equipamentos.Tipo}}</td>\r\n                            <td>{{equipamentos.DataCompra | date:'yyyy'}}</td>\r\n                            \r\n                            <td *ngIf=\"equipamentos.EstadoEqui==1\" >Ativo</td>\r\n                            <td *ngIf=\"equipamentos.EstadoEqui==0\" >Desativo</td>\r\n                            <td>{{equipamentos.DataFimAtividade | date:'yyyy'}}</td>\r\n                            <td>\r\n                               <button type=\"button\" class=\"btn btn-success btn-sm rounded-0\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Editar\" [routerLink]=\"['/edit-equip/', equipamentos.IDEquipamento]\"></button>\r\n                            </td>\r\n\r\n                           \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\n\r\n@Component({\r\n  selector: 'app-grupomaquina-list',\r\n  templateUrl: './grupomaquina-list.component.html',\r\n  styleUrls: ['./grupomaquina-list.component.css']\r\n})\r\nexport class GrupoMaquinaListComponent implements OnInit {\r\n\r\n  GrupoMaquinaList: any = [];\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    public grupoMaquinaService: GrupoMaquinaService\r\n  ){ }\r\n\r\n   // lista grupos de máquinas\r\n   loadGrupoMaquinas() {\r\n    return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n      this.GrupoMaquinaList = data;\r\n    })\r\n    \r\n  }\r\n\r\n\r\n}","<div class=\"container wrapper\">\r\n    <div class=\"row\">\r\n\r\n        <!-- GruposMaquinas table -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"inner\">\r\n                <br>\r\n                <h3>Grupos de equipamentos</h3>\r\n                <br>\r\n                <table class=\"table table-bordered\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <!--<th scope=\"col\" width=\"40\">#</th>-->\r\n                            <th scope=\"col\" width=\"150\">Código interno</th>\r\n                            <th scope=\"col\" >Descrição</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let grupomaquinas of GrupoMaquinaList\">\r\n                            <!--<th scope=\"row\" width=\"40\">{{grupomaquinas.IDGrupoMaquinas}}</th>-->\r\n                            <td width=\"150\">{{grupomaquinas.CodigoInterno}}</td>\r\n                            <td >{{grupomaquinas.Descr}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, NgZone, OnDestroy } from \"@angular/core\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { AuthService } from \"../../TokenAuth/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\nimport { interval, Observable } from \"rxjs\";\nimport { map, share } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private ngZone: NgZone\n  ) {}\n\n  user: any = localStorage.getItem(\"username\");\n\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  userPermission = 0;\n\n  userNow() {\n    //this.user = this.authService.getUserName();\n    return (this.user = this.authService.getUserName());\n    //console.log(localStorage.getItem('username'));\n  }\n\n  ngOnInit() {\n  \n    this.userPermission = this.authService.getCurrentUserRoleId();\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe((isAuthenticated) => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.ngZone.run(() => this.router.navigateByUrl(\"/\"));\n\n    setTimeout(() => {\n      this.refresh();\n    }, 1000);\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","\n<mat-toolbar class=\"col\">\n  <button\n    mat-button\n    [matMenuTriggerFor]=\"menu\"\n    aria-label=\"Example icon button with a menu icon\"\n  >\n    <mat-icon>menu</mat-icon>\n  </button>\n\n  <mat-menu #menu=\"matMenu\">\n  \n    <button mat-menu-item [matMenuTriggerFor]=\"pedidos\">Pedidos</button>\n \n    <button mat-menu-item routerLink=\"/manutencao-prog-home-page\">Tarefas a realizar</button>\n    <button mat-menu-item routerLink=\"/equip-list\">Equipamentos</button>\n    <button mat-menu-item routerLink=\"/grupomaquina-list\">\n      Grupos de máquina\n    </button>\n    <button mat-menu-item routerLink=\"/asp-net-user-list\">Utilizadores</button>\n  </mat-menu>\n\n  <mat-menu #pedidos=\"matMenu\">\n    <button mat-menu-item routerLink=\"/pedido-mcurativa-list-teste\">\n      Pedidos curativos\n    </button>\n    <button mat-menu-item routerLink=\"/pedido-preventiva-list\">\n      Pedidos preventivos\n    </button>\n  </mat-menu>\n\n  <a class=\"tt\"  routerLink=\"/\">Gestão da manutenção</a>\n  \n  <ul>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/my-login\" routerLinkActive=\"mat-accent\"\n        >Login</a\n      >\n    </li>\n    <li>\n      <a *ngIf=\"userIsAuthenticated\" class=\"formatFontSize\" style=\"font-size:0.9vw\">Em sessão: {{userNow()}}</a>\n    </li>\n    \n    <li *ngIf=\"userIsAuthenticated\">\n      <button mat-button (click)=\"onLogout()\">Logout</button>\n    </li>\n\n  </ul>\n</mat-toolbar>\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@Component({\n  selector: 'app-intervencao-add-user-home-page',\n  templateUrl: './intervencao-add-user-home-page.component.html',\n  styleUrls: ['./intervencao-add-user-home-page.component.css']\n})\nexport class IntervencaoAddUserHomePageComponent implements OnInit {\n\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  form: FormGroup;\n  IDPedido: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n    public pedidoServ: PedidosPreventivosService\n  ) {\n    this.IDPedido = this.data.IDPedido;\n  }\n\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n    this.form = this.fb.group({\n      descricao: [\"\", Validators.required],\n      estado: [0, Validators.required],\n      datainicio: [null],\n      datafim: [null],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      var values = this.form.getRawValue();\n      var body = {\n        Observacoes: values.descricao,\n        PedidoManutPreventivaID: this.IDPedido,\n        IDEstadoIntervencao: values.estado,\n        DataInicioIntervencao: values.datainicio,\n        DataFimIntervencao: values.datafim,\n      };\n\n      //if (body.DataInicioIntervencao.getTime() > body.DataFimIntervencao.getTime())\n\n      this.pedidoServ.postIntervencao(body);\n      //http enviar o body para a api.\n    } else {\n      //show dialog a dizer que falta algo.\n    }\n  }\n\n  loadEstadosIntervencao() {\n    return this.pedidoServ\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n}\n","<h4>Inserir intervenção preventiva</h4>\n\n<mat-dialog-content [formGroup]=\"form\">\n  <mat-form-field>\n    <input\n      formControlName=\"descricao\"\n      matInput\n      placeholder=\"Descrição do processo\"\n    />\n  </mat-form-field>\n  <br />\n\n  <mat-form-field>\n    <mat-label>Estado</mat-label>\n    <mat-select formControlName=\"estado\">\n      <mat-option *ngFor=\"let item of estadoIntervencaoList\" [value]=\"item.ID\">\n        {{ item.Descr }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerinicio\"\n      placeholder=\"Data inicio\"\n      formControlName=\"datainicio\"\n    />\n\n    <br>\n\n    <mat-datepicker-toggle matSuffix [for]=\"pickerinicio\">\n    </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerinicio> </ngx-mat-datetime-picker>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerfim\"\n      placeholder=\"Data fim\"\n      formControlName=\"datafim\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"pickerfim\"> </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerfim> </ngx-mat-datetime-picker>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button class=\"close-icon\" [mat-dialog-close]=\"true\">\n    Fechar\n  </button>\n  <button\n    mat-button\n    class=\"close-icon\"\n    [mat-dialog-close]=\"true\"\n    (click)=\"onSubmit()\"\n  >\n    Guardar\n  </button>\n</mat-dialog-actions>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidosService } from \"../../shared/pedidoMcurativa-teste/pedidoMcurativa.service\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@Component({\n  selector: \"app-intervencao-curativa-add\",\n  templateUrl: \"./intervencao-curativa-add.component.html\",\n  styleUrls: [\"./intervencao-curativa-add.component.css\"],\n})\nexport class IntervencaoCurativaAddComponent implements OnInit {\n  //constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n  \n  estadoIntervencaoList: EstadoIntervencao[] = [];\n\n  form: FormGroup;\n  //description: string;\n\n  idPedido: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n    public pedidoServ: PedidosService\n  ) {\n    this.idPedido = this.data.idPedido;\n  }\n\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n    this.form = this.fb.group({\n      descricao: [\"\", Validators.required],\n      estado: [0, Validators.required],\n      datainicio: [null],\n      datafim: [null],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      var values = this.form.getRawValue();\n\n      var body = {\n        Descricao: values.descricao,\n        IDPedido: this.idPedido,\n        IDEstadoIntervencao: values.estado,\n        DataInicioIntervencao: values.datainicio,\n        DataFimIntervencao: values.datafim,\n      };\n\n      //if (body.DataInicioIntervencao.getTime() > body.DataFimIntervencao.getTime())\n\n      this.pedidoServ.postIntervencao(body);\n      //http enviar o body para a api.\n    } else {\n      //show dialog a dizer que falta algo.\n    }\n  }\n\n  loadEstadosIntervencao() {\n    return this.pedidoServ\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n}\n","<h4>Inserir intervenção</h4>\n\n<mat-dialog-content [formGroup]=\"form\">\n  <mat-form-field>\n    <input\n      formControlName=\"descricao\"\n      matInput\n      placeholder=\"Descrição do processo\"\n    />\n  </mat-form-field>\n\n  <br />\n\n  <mat-form-field>\n    <mat-label>Estado</mat-label>\n    <mat-select formControlName=\"estado\">\n      <mat-option *ngFor=\"let item of estadoIntervencaoList\" [value]=\"item.ID\">\n        {{ item.Descr }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerinicio\"\n      placeholder=\"Data inicio\"\n      formControlName=\"datainicio\"\n    />\n\n    <br>\n\n    <mat-datepicker-toggle matSuffix [for]=\"pickerinicio\">\n    </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerinicio> </ngx-mat-datetime-picker>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerfim\"\n      placeholder=\"Data fim\"\n      formControlName=\"datafim\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"pickerfim\"> </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerfim> </ngx-mat-datetime-picker>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button class=\"close-icon\" [mat-dialog-close]=\"true\">\n    Fechar\n  </button>\n  <button\n    mat-button\n    class=\"close-icon\"\n    [mat-dialog-close]=\"true\"\n    (click)=\"onSubmit()\"\n  >\n    Guardar\n  </button>\n</mat-dialog-actions>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n\n@Component({\n  selector: \"app-intervencao-preventiva-add\",\n  templateUrl: \"./intervencao-preventiva-add.component.html\",\n  styleUrls: [\"./intervencao-preventiva-add.component.css\"],\n})\nexport class IntervencaoPreventivaAddComponent implements OnInit {\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  form: FormGroup;\n  idPedido: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n    public pedidoServ: PedidosPreventivosService\n  ) {\n    this.idPedido = this.data.idPedido;\n  }\n\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n    this.form = this.fb.group({\n      descricao: [\"\", Validators.required],\n      estado: [0, Validators.required],\n      datainicio: [null],\n      datafim: [null],\n    });\n  }\n  \n\n  onSubmit() {\n    if (this.form.valid) {\n      var values = this.form.getRawValue();\n      var body = {\n        Observacoes: values.descricao,\n        PedidoManutPreventivaID: this.idPedido,\n        IDEstadoIntervencao: values.estado,\n        DataInicioIntervencao: values.datainicio,\n        DataFimIntervencao: values.datafim,\n      };\n\n      //if (body.DataInicioIntervencao.getTime() > body.DataFimIntervencao.getTime())\n\n      this.pedidoServ.postIntervencao(body);\n      //http enviar o body para a api.\n    } else {\n      //show dialog a dizer que falta algo.\n    }\n  }\n\n  loadEstadosIntervencao() {\n    return this.pedidoServ\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n}\n","<h4>Inserir intervenção preventiva</h4>\n\n<mat-dialog-content [formGroup]=\"form\">\n  <mat-form-field>\n    <input\n      formControlName=\"descricao\"\n      matInput\n      placeholder=\"Descrição do processo\"\n    />\n  </mat-form-field>\n  <br />\n\n  <mat-form-field>\n    <mat-label>Estado</mat-label>\n    <mat-select formControlName=\"estado\">\n      <mat-option *ngFor=\"let item of estadoIntervencaoList\" [value]=\"item.ID\">\n        {{ item.Descr }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerinicio\"\n      placeholder=\"Data inicio\"\n      formControlName=\"datainicio\"\n    />\n\n    <br>\n\n    <mat-datepicker-toggle matSuffix [for]=\"pickerinicio\">\n    </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerinicio> </ngx-mat-datetime-picker>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerfim\"\n      placeholder=\"Data fim\"\n      formControlName=\"datafim\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"pickerfim\"> </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerfim> </ngx-mat-datetime-picker>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button class=\"close-icon\" [mat-dialog-close]=\"true\">\n    Fechar\n  </button>\n  <button\n    mat-button\n    class=\"close-icon\"\n    [mat-dialog-close]=\"true\"\n    (click)=\"onSubmit()\"\n  >\n    Guardar\n  </button>\n</mat-dialog-actions>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AspNetRolesService } from '../../shared/aspNetRoles/aspNetRoles.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n  \n\n@Component({\n  selector: 'app-list-permissao',\n  templateUrl: './list-permissao.component.html',\n  styleUrls: ['./list-permissao.component.css']\n})\nexport class ListPermissaoComponent implements OnInit {\n\n  aspNetRolesList: any = [];\n\n  constructor(\n    private aspNetRolesService : AspNetRolesService,\n    private actRoute: ActivatedRoute\n  ) { }\n\n\n  ngOnInit() {\n    this.loadAspNetRoles();\n  }\n\n  //load users e roles da DB \n  loadAspNetRoles() {\n    return this.aspNetRolesService.GetAspNetUsers().subscribe((data: {}) => {\n      this.aspNetRolesList = data;\n    })\n  }\n\n \n\n\n\n}\n","<div class=\"container wrapper\">\n    <div class=\"row\">\n\n        \n        <!-- Roles table -->\n        <div class=\"col-md-12\">\n\n            <div class=\"inner\">\n                <div id=\"main\">\n                    <br>\n                    <h3>Permissão dos utilizadores</h3>\n                    \n                  </div> \n                  <br>\n                <table class=\"table table-bordered\" style=\"text-align:center;\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Tipo de permissão</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr></tr>\n                        <tr *ngFor=\"let aspnet of aspNetRolesList;let i = index\">\n                            <th scope=\"row\">{{i+1}}</th>\n                            <td>{{aspnet.Nome}}</td>  \n                            <td>{{aspnet.Email}}</td>\n                            <td>{{aspnet.Name}}</td>\n                            <td>\n                               <button type=\"button\" class=\"btn btn-success btn-sm rounded-0\" [routerLink]=\"['/edit-permissao/', aspnet.Email]\">Editar</button>\n                            </td>\n\n                           \n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n    </div>\n</div>","\nimport { Component, OnInit, NgZone, EventEmitter, Output} from '@angular/core';\nimport { PedidosPreventivosService } from '../../shared/pedidoMpreventiva/pedidoMpreventiva.service';\nimport { NgForm, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport { Equipamento} from '../../shared/equipamento/equipamentomodel';\nimport { PedidoPreventivo } from '../../shared/pedidoMpreventiva/pedidoMpreventiva.model';\nimport { AspNetUsers } from '../../shared/pedidoMpreventiva/aspNetUsers.model';\nimport {TipoUtilizadorService} from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { TipoUtilizador} from '../../shared/tipoUtilizador/tipoUtilizador.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-manutencao-preventiva-programada',\n  templateUrl: './manutencao-preventiva-programada.component.html',\n  styleUrls: ['./manutencao-preventiva-programada.component.css']\n})\nexport class ManutencaoPreventivaProgramadaComponent implements OnInit {\n\n  pedidoForm: FormGroup;\n  selectedOption: number; \n  selectedUser: string;\n  gmID : number;\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n  equipamentosList: Equipamento[] = [];\n  \n  aspNetUsersList: any = [];\n  tipoUtilizadorList: any = [];\n\n  constructor(public pedidoService: PedidosPreventivosService, \n    public tipoUtilizadorService: TipoUtilizadorService,\n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private actRoute: ActivatedRoute   ) { }\n\n  ngOnInit(){\n    this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n    this.loadAspNetUsers();\n    this.loadTiposUtilizador();\n  }\n\n  listJustgroupmachine()\n    {\n        this.gmID = this.selectedOption;\n\n        if(this.equipamentosFiltrados.length>0)\n          {\n            this.equipamentosFiltrados.length=0;\n          }   \n\n        for (let j = 0; j < this.equipamentosList.length; j++) \n        {\n          if (this.gmID == this.equipamentosList[j].IDGrupoM) \n          {\n            this.equipamentosFiltrados.push(this.equipamentosList[j]);           \n          }\n        }  \n    } \n\n    converterIDTipoParaDescr(a:number)\n    {\n      for(let i= 0; i<this.tipoUtilizadorList.length;i++)\n      {\n        if(a==this.tipoUtilizadorList[i].IDTipo)\n        return \"(\" + this.tipoUtilizadorList[i].TipoDescr + \" - \" + this.tipoUtilizadorList[i].SeccaoTrabalho +\")\";\n      }\n\n    }\n\n\n  loadEquipamentos() {\n    return this.pedidoService.GetEquipamentosObser().subscribe((data: Equipamento[]) => {\n      this.equipamentosList = data;\n    })\n  }\n\n    //load tipos de utilizador da DB\n    loadTiposUtilizador() {\n      return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n      this.tipoUtilizadorList = data;\n     \n   })\n  }\n  \n \n  loadGrupoMaquinas() {\n    return this.pedidoService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n  \n  addPedido() {\n    this.pedidoForm = this.fb.group({\n      Descricao: [''],\n      DataLimiteManutencaoPrev: [''],\n      UtilizadorIDUser: ['']\n    })\n  }\n\n    //load utilizadores da DB \n    loadAspNetUsers() {\n      return this.pedidoService.GetAspNetUsers().subscribe((data: {}) => {\n        this.aspNetUsersList = data;\n      })\n    }\n    \n    submitFormWithID(selectedOption:number){ \n    console.log(\"Form ID SelectedOption\", selectedOption);\n    //var id = this.actRoute.snapshot.paramMap.get('id');\n    this.pedidoService.postPedidoPerGrupoMaquinas(selectedOption, this.pedidoForm.value);\n      //this.ngZone.run(() => this.router.navigateByUrl('/pedido-preventiva-list'))\n    }\n  \n\n  submitForm() {\n    this.pedidoService.postPedido(this.pedidoForm.value);\n    this.router.navigateByUrl('/pedido-preventiva-list'); \n    }\n}\n","<div class=\"container wrapper wrapper2\">\n  <div class=\"row\">\n    <!-- Form -->\n    <div class=\"col-md-12\">\n      <br />\n      <h3>Pedidos de manutenção preventiva em grupo</h3>\n      <div class=\"td\"></div>\n      <br />\n\n      <label>Grupo de máquina</label>\n      <br />\n      <select [(ngModel)]=\"selectedOption\" (click)=\"listJustgroupmachine()\" style=\"width:300px\">\n        <!-- <select  class=\"form-group\" formControlName=\"IDEquipamento\"> -->\n          <option value=\"0\">Grupo de máquina</option>  \n        <option\n          *ngFor=\"let item of gruposMaquinaList\"\n          [value]=\"item.IDGrupoMaquinas\"\n          >{{ item.CodigoInterno }} - {{ item.Descr }}</option\n        >\n      </select>\n\n      <form [formGroup]=\"pedidoForm\" (ngSubmit)=\"submitFormWithID(selectedOption)\" novalidate>\n        <br />\n        <label>Funcionário a realizar a tarefa</label>\n        <br />\n\n        <select class=\"form-group\" formControlName=\"UtilizadorIDUser\" style=\"width:300px\"> \n          <option *ngFor=\"let item1 of aspNetUsersList\" [value]=\"item1.UserName\"\n            >{{ item1.Nome }} {{ converterIDTipoParaDescr(item1.IDTipo) }}\n          </option>\n        </select>\n\n        <div class=\"form-group\">\n          <label>Descrição</label>\n          <br />\n          <input\n            type=\"text\"\n            formControlName=\"Descricao\"\n            class=\"form-control\"\n            class=\"myText\"\n            maxlength=\"100\"\n            style=\"width:300px\"\n          />\n        </div>\n        <div class=\"form-group\" >\n          <label>Data limite para realização da tarefa</label>\n          <input\n            type=\"Date\"\n            formControlName=\"DataLimiteManutencaoPrev\"\n            class=\"form-control\"\n            style=\"width:300px\"\n          />\n        </div>\n    \n        <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  NgZone,\n  EventEmitter,\n  Output,\n  OnDestroy,\n} from \"@angular/core\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { NgForm, FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { GrupoMaquina } from \"../../shared/gruposmaquina/grupomaquinamodel\";\nimport { Equipamento } from \"../../shared/equipamento/equipamentomodel\";\nimport { PedidoPreventivo } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.model\";\nimport { AspNetUsers } from \"../../shared/pedidoMpreventiva/aspNetUsers.model\";\nimport { TipoUtilizadorService } from \"../../shared/tipoUtilizador/tipoUtilizador.service\";\nimport { TipoUtilizador } from \"../../shared/tipoUtilizador/tipoUtilizador.model\";\nimport { Subscription } from \"rxjs\";\nimport { IntervencaoPreventivo } from \"src/app/shared/pedidoMpreventiva/intervencaoPreventiva.model\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {IntervencaoAddUserHomePageComponent} from '../intervencao-add-user-home-page/intervencao-add-user-home-page.component';\nimport {IntervencaoPreventivaAddComponent} from '../intervencao-preventiva-add/intervencao-preventiva-add.component';\nimport {  ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: \"app-manutencao-prog-home-page\",\n  templateUrl: \"./manutencao-prog-home-page.component.html\",\n  styleUrls: [\"./manutencao-prog-home-page.component.css\"],\n})\nexport class ManutencaoProgHomePageComponent implements OnInit, OnDestroy {\n  constructor(\n    public pedidoService: PedidosPreventivosService,\n    public tipoUtilizadorService: TipoUtilizadorService,\n    public dialog: MatDialog,\n    private actRoute: ActivatedRoute\n\n  ) {}\n  pedidoForm: FormGroup;\n  selectedOption: number;\n  selectedUser: string;\n  gmID: number;\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosList: Equipamento[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n  aspNetUsersList: any = [];\n  intervencoes: IntervencaoPreventivo[] = [];\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  intervencoesFiltradas: IntervencaoPreventivo[] = [];\n\n  tipoUtilizadorList: any = [];\n  pedidosEsperaUser: PedidoPreventivo[] = [];\n  isLoading = false;\n  private intervencoesSub: Subscription;\n  private pedidosSub: Subscription;\n  private pedidosUserSub: Subscription;\n\n \n\n  ngOnDestroy() {\n    this.pedidosUserSub.unsubscribe();\n  }\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n\n\n    this.pedidoService.getPedidosUser();\n    this.pedidosUserSub = this.pedidoService\n      .getPedidosUserUpdateListener()\n      .subscribe((pedidosuser: PedidoPreventivo[]) => {\n        this.pedidosEsperaUser = pedidosuser;\n      });\n  \n\n    //this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n    this.loadTiposUtilizador();\n   // this.loadPedidosEsperaUser();\n  }\n\n  //Troca no front-end, o ID do equipamento pelo código interno da empresa\n  changeIDtoInternalCode(equip: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.pedidosEsperaUser[equip].IDEquipamento ==\n        this.equipamentosList[j].IDEquipamento\n      ) {\n        return (\n          this.equipamentosList[j].CodigoInterno +\n          \" - \" +\n          this.equipamentosList[j].Marca +\n          \" \" +\n          this.equipamentosList[j].Descr\n        );\n      }\n    }\n  }\n\n  openDialog(IDPedido) {\n    console.log(IDPedido, \"passou na componente\");\n    this.dialog.open(IntervencaoAddUserHomePageComponent, {\n      data: { IDPedido: IDPedido },\n    });\n  }\n\n  loadEquipamentos() {\n    return this.pedidoService\n      .GetEquipamentosObser()\n      .subscribe((data: Equipamento[]) => {\n        this.equipamentosList = data;\n      });\n  }\n\n  //load tipos de utilizador da DB\n  loadTiposUtilizador() {\n    return this.tipoUtilizadorService\n      .GetTiposUtilizador()\n      .subscribe((data: {}) => {\n        this.tipoUtilizadorList = data;\n      });\n  }\n\n/*   loadPedidosEsperaUser() {\n    return this.pedidoService.GetPedidosEmEsperaUser().subscribe((data: {}) => {\n      this.pedidosEsperaUser = data;\n    });\n  } */\n\n\n  loadGrupoMaquinas() {\n    return this.pedidoService\n      .GetGruposMaquina()\n      .subscribe((data: GrupoMaquina[]) => {\n        this.gruposMaquinaList = data;\n        console.log(this.gruposMaquinaList);\n      });\n  }\n\n\n\n      //Troca o ID do estado de intervenção, pela sua descrição correspondente.\n      changeIDtoDescription(estado: number) {\n        for (let j = 0; j < this.equipamentosList.length; j++) {\n          if (\n            this.intervencoes[estado].IDEstadoIntervencao ==\n            this.estadoIntervencaoList[j].ID\n          ) {\n            return this.estadoIntervencaoList[j].Descr;\n          }\n        }\n      }\n\n      \n\n        //lista estados de intervenção.\n  loadEstadosIntervencao() {\n    return this.pedidoService\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n\n \n\n}\n","<mat-spinner\n  style=\"margin: 0 auto;\"\n  mode=\"indeterminate\"\n  color=\"accent\"\n  *ngIf=\"isLoading\"\n>\n</mat-spinner>\n<p style=\"text-align:center\" *ngIf=\"isLoading\">aguarde ...</p>\n<p>\n\n<hr />\n<div class=\"inner\">\n  <div id=\"main\">\n    <div id=\"side_bar\">\n    <h5 class=\"formatH5\" style=\"text-align:left\">Tarefas a aguardar a sua intervenção</h5> \n  </div>\n  </div>\n  <br />\n  <div class=\"table-responsive\">\n    <table class=\"table table-bordered\" style=\"width: 100%;\" [hidden]=\"isLoading\">\n      <thead>\n        <tr>\n         <th scope=\"col\"width=\"80\">ID</th>\n          <th scope=\"col\" width=\"350\">Equipamento</th>\n          <th scope=\"col\" width=\"400\">Descrição</th>\n          <th scope=\"col\" width=\"150\">Data pedido</th>\n          <th scope=\"col\" width=\"150\">Data limite</th>\n          <!--<th scope=\"col\" width=\"80\">Estado</th>-->\n        </tr>\n      </thead>\n    </table>\n  </div>\n\n  <mat-accordion multi=\"false\">\n    <mat-expansion-panel *ngFor=\"let item of pedidosEsperaUser; let i = index\">\n      <mat-expansion-panel-header collapsedHeight=\"*\" expandedHeight=\"*\">\n        <table class=\"table\">\n          <tbody>\n            <tr>\n   \n              <td class=\"tb-td-txt\" width=\"80\">{{ item.IDPedido}}</td>\n              <td class=\"tb-td-txt\" width=\"360\">\n                {{ changeIDtoInternalCode(i) }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"440\">{{ item.Descricao }}</td>\n              <td class=\"tb-td-txt\" width=\"165\">\n                {{ item.DataPedido | date: \"dd/MM/yyyy HH:mm\" }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataLimiteManutencaoPrev | date: \"dd/MM/yyyy\" }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-expansion-panel-header>\n      <div class=\"table-responsive\">\n        <body style=\"text-align: center;\">\n          <table class=\"table\" style=\"width: 100%;\">\n            <thead>\n              <tr>\n                <br>\n                \n                <button\n                type=\"button\"\n                (click)=\"openDialog(item.IDPedido)\"\n                class=\"btn btn-success btn-sm move-right\"\n                style=\"\n                  position: center;\n                  right: 0;\n                  height: 40px;\n                  width: 150px;\n                \"\n              >\n                Fechar pedido\n              </button>\n              <br>\n              <br>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n\n\n            </tbody>\n          </table>\n        </body>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>","import { Component, OnInit, NgZone, EventEmitter, Output} from '@angular/core';\nimport { PedidoManutCurativaTeste } from '../../shared/pedidoMcurativa-teste/pedidoMcurativa.model';\nimport { PedidosService } from '../../shared/pedidoMcurativa-teste/pedidoMcurativa.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport {Equipamento} from '../../shared/equipamento/equipamentomodel';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-pedido-mcurativa-add',\n  templateUrl: './pedido-mcurativa-add.component.html',\n  styleUrls: ['./pedido-mcurativa-add.component.css']\n})\nexport class PedidoMcurativaAddComponent implements OnInit {\n\n  pedidoForm: FormGroup;\n  selectedOption: number; \n  gmID : number\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosList: Equipamento[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n\n  constructor(\n    public pedidoService: PedidosService, \n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private actRoute: ActivatedRoute   ) { }\n\n  ngOnInit(){\n    this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n  }\n\n   listJustgroupmachine()\n    {\n        this.gmID = this.selectedOption;\n\n        if(this.equipamentosFiltrados.length>0)\n          {\n            this.equipamentosFiltrados.length=0;\n          }   \n\n        for (let j = 0; j < this.equipamentosList.length; j++) \n        {\n          if (this.gmID == this.equipamentosList[j].IDGrupoM) \n          {\n            this.equipamentosFiltrados.push(this.equipamentosList[j]);           \n          }\n        }  \n    } \n\n\n  loadEquipamentos() {\n    return this.pedidoService.GetEquipamentosObser().subscribe((data: Equipamento[]) => {\n      this.equipamentosList = data;\n    })\n  }\n\n  // lista equipamentos \n  loadGrupoMaquinas() {\n    return this.pedidoService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n  \n\n  addPedido() {\n    this.pedidoForm = this.fb.group({\n      IDEquipamento : [0],\n      Descricao: [''],\n      //IDEstadoIntervencao: [0],\n      //DataPedido:['']   \n    })\n  }\n\n  submitForm() {\n    this.pedidoService.postPedido(this.pedidoForm.value);\n    this.router.navigateByUrl('/pedido-mcurativa-list-teste'); \n    }\n    \n  \n\n\n\n}\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n\n        <!-- Form -->\n        <div class=\"col-md-12\">\n            <br>\n            <h3>Novo pedido curativo</h3>\n            <div class=\"td\"></div>\n            <br>\n\n            <label>Grupo de máquina</label>\n            <br>\n            <select [(ngModel)]=\"selectedOption\" (click)=\"listJustgroupmachine()\">           \n                <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{item.CodigoInterno }}-{{ item.Descr}}</option>\n            </select>\n            <br>\n            <form [formGroup]=\"pedidoForm\" (ngSubmit)=\"submitForm()\" novalidate>   \n                <br><label>Equipamento</label><br>\n                <select  class=\"form-group\" formControlName=\"IDEquipamento\">\n                    <option value=\"0\">Selecione o equipamento</option>   \n                    <option *ngFor=\"let item of equipamentosFiltrados\" [value]=\"item.IDEquipamento\">{{item.CodigoInterno}}-{{ item.Marca}} {{ item.Descr}}</option>                  \n                </select>\n                <div class=\"form-group\">\n                    <label>Descrição</label>\n                    <br>\n                    <input type=\"text\" formControlName=\"Descricao\" class=\"form-control\" class=\"myText\" maxlength=\"100\">\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\n            </form>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { PedidoManutCurativaTeste } from \"../../shared/pedidoMcurativa-teste/pedidoMcurativa.model\";\nimport { PedidosService } from \"../../shared/pedidoMcurativa-teste/pedidoMcurativa.service\";\nimport { NgForm } from \"@angular/forms\";\nimport * as printJS from 'print-js';\nimport { Equipamento } from \"../../shared/equipamento/equipamentomodel\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { IntervencaoCurativa } from \"src/app/shared/pedidoMcurativa-teste/intervencaoCurativa.model\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { IntervencaoCurativaAddComponent } from \"../intervencao-curativa-add/intervencao-curativa-add.component\";\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel'; \nimport { ActivatedRoute } from '@angular/router';\nimport {PedidoManutCurativaPrint} from \"../../shared/pedidoMcurativa-teste/pedidoMCurativaPrint.model\";\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: \"app-pedido-mcurativa-list-teste\",\n  templateUrl: \"./pedido-mcurativa-list-teste.component.html\",\n  styleUrls: [\"./pedido-mcurativa-list-teste.component.css\"],\n})\nexport class PedidoMcurativaListTesteComponent implements OnInit, OnDestroy {\n\n  constructor(\n    public pedidosService: PedidosService,\n    public dialog: MatDialog, \n    private route: ActivatedRoute\n  ) {}\n\n  private pedidosSub: Subscription;\n  private intervencoesSub: Subscription;\n\n  isLoading = false;\n  pedidos: PedidoManutCurativaTeste[] = [];\n  equipamentosList: Equipamento[] = [];\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  intervencoes: IntervencaoCurativa[] = [];\n  intervencoesFiltradas: IntervencaoCurativa[] = [];\n  gruposMaquinaList: GrupoMaquina[] = [];\n\n \n\n  pageSizeOptions = [5, 8, 12];\n  totalPedidos = 0;\n  pedidosPerPage = 2;\n  currentPage = 1;\n  selectedOptionGrupo = 0; \n  selectedOptionDateInicio= \"01-01-1990\";\n  selectedOptionDateFim = \"01-01-1990\";\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, 0, \"01-01-1990\",\"01-01-1990\");\n\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: {\n          pedidos: PedidoManutCurativaTeste[];\n          CountPedidos: number;\n        }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n        }\n      );\n\n\n    this.pedidosService.getIntervencoes();\n    this.intervencoesSub = this.pedidosService\n      .getIntervencaoUpdateListener()\n      .subscribe((intervencoes: IntervencaoCurativa[]) => {\n        this.intervencoes = intervencoes;\n      });\n\n    //Carregamento de outros métodos.\n    this.loadEstadosIntervencao();\n    this.loadEquip();\n    this.loadGrupoMaquinas();\n  }\n\n\n  printPedidos()\n  {   \n     type MyArrayType = Array<{UtilizadorIDUser: string, DataLimiteManutencaoPrev: string}>;\n\n     let myArray= [];\n     \n     console.log(\"Pedidos \", this.pedidos);\n    \n    for(let i = 0; i < this.pedidos.length; i++)\n    { \n      \n      let pedidoPrint = {} as PedidoManutCurativaPrint;\n      const datepipe: DatePipe = new DatePipe('en-US');\n\n      /* IDPedido: number;\n      UtilizadorIDUser: string;\n      IDEquipamento: number;\n      Descricao: string;\n      DataPedido: string; */\n      \n      //let convertedDataLimite = new Date(dataPedidoFormatada);\n      let  dataPedidoFormatada = datepipe.transform(this.pedidos[i].DataPedido, 'dd-MM-yyyy HH:mm'); \n      //let convertedDataPedidoFormatada = new Date(dataPedidoFormatada);\n        pedidoPrint.DataPedido = '';\n        pedidoPrint.Descricao = '';\n        pedidoPrint.UtilizadorIDUser = '';\n        pedidoPrint.IDEquipamento = '';\n        pedidoPrint.DataPedido = dataPedidoFormatada;        \n        pedidoPrint.Descricao = this.pedidos[i].Descricao;\n        pedidoPrint.UtilizadorIDUser = this.pedidos[i].UtilizadorIDUser;\n         for (let j = 0; j < this.equipamentosList.length; j++) \n        { \n          if (this.pedidos[i].IDEquipamento == this.equipamentosList[j].IDEquipamento) \n                {\n                  pedidoPrint.IDEquipamento = this.equipamentosList[j].Marca + \" \"  + this.equipamentosList[j].Descr;           \n                }                \n        }     \n        \n        myArray.push(pedidoPrint);\n        \n        console.log(myArray);\n  }\n  printJS({printable: myArray, properties: [{field: 'UtilizadorIDUser', displayName: '#'}, {field:'IDEquipamento', displayName: 'Equipamento'}, \n  {field:'Descricao', displayName:'Descrição'}, {field :'DataPedido', displayName:'Data pedido'}], type: 'json', header: 'ACATEL - Pedidos curativos'})\n}\n\n  limparFiltros()\n  {\n    this.ngOnInit();\n    this.selectedOptionGrupo = 0;\n    this.selectedOptionDateInicio = \"01-01-1990\";\n    this.selectedOptionDateFim = \"01-01-1990\";\n  }\n\n  procuraAvancada()\n  {\n    console.log(this.selectedOptionGrupo, \"Grupo selecionado\");\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: {\n          pedidos: PedidoManutCurativaTeste[];\n          CountPedidos: number;\n        }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n        }\n      );\n\n  }\n\n\n  getTimeDiff(a: number) {\n    for (let j = 0; j < this.intervencoes.length; j++) {\n      if (this.intervencoes[j].ID == a) {\n        let endDate = new Date();\n        endDate = new Date(this.intervencoes[j].DataFimIntervencao);\n        let beginDate = new Date();\n        beginDate = new Date(this.intervencoes[j].DataInicioIntervencao);\n        let diffMs = endDate.getTime() - beginDate.getTime(); // milliseconds\n        var diffMinutos = Math.round(diffMs / 60000);\n        var hours = diffMinutos / 60;\n        var rhours = Math.floor(hours);\n        var minutes = (hours - rhours) * 60;\n        var rminutes = Math.round(minutes);\n      }\n    }\n    if (rhours == 0) {\n      return rminutes + \"minuto(s)\";\n    }\n    if (rhours >= 1 && rminutes == 0) return rhours + \"h\";\n    if (rhours >= 1 && rminutes > 0) return rhours + \" h:\" + rminutes + \"m\";\n  }\n\n  ngOnDestroy() {\n    this.pedidosSub.unsubscribe();\n    this.intervencoesSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.currentPage = pageData.pageIndex + 1;\n    this.pedidosPerPage = pageData.pageSize;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n  }\n\n  openDialog(idPedido) {\n    this.dialog.open(IntervencaoCurativaAddComponent, {\n      data: { idPedido: idPedido },\n    });\n  }\n\n  deleteIntervencao(ID) {\n    return this.pedidosService.DeleteIntervencao(ID).subscribe((res) => {});\n  }\n\n  loadGrupoMaquinas() {\n    return this.pedidosService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n\n  //## MÉTODOS ## //\n\n  \n  //Troca no front-end, o ID do equipamento pelo código interno da empresa\n  changeIDtoInternalCode(equip: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.pedidos[equip].IDEquipamento ==\n        this.equipamentosList[j].IDEquipamento\n      ) {\n        return (\n          this.equipamentosList[j].CodigoInterno +\n          \" - \" +\n          this.equipamentosList[j].Marca // +\n\n        );\n      }\n    }\n  }\n\n  //Mostra os estados de intervenção ## melhorar esta parte.\n  checkStateOfIntervention(a: number) {\n    if (this.intervencoesFiltradas.length > 0) {\n      this.intervencoesFiltradas.length = 0;\n    }\n\n    for (let j = 0; j < this.intervencoes.length; j++) {\n      if (this.pedidos[a].IDPedido == this.intervencoes[j].IDPedido) {\n        this.intervencoesFiltradas.push(this.intervencoes[j]);\n      }\n    }\n\n    if (this.intervencoesFiltradas.length > 0) {\n      var maxI = this.intervencoesFiltradas.reduce(function (prev, current) {\n        return prev.IDPedido > current.IDPedido ? prev : current;\n      });\n     \n    }\n    if (this.intervencoesFiltradas.length == 0) return \"S/I\";\n      else if (maxI.IDEstadoIntervencao == 2) return \"Aguarda\";\n      else if (maxI.IDEstadoIntervencao == 3) return \"Fechado\";\n  }\n\n  //Troca o ID do estado de intervenção, pela sua descrição correspondente.\n  changeIDtoDescription(estado: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.intervencoes[estado].IDEstadoIntervencao ==\n        this.estadoIntervencaoList[j].ID\n      ) {\n        return this.estadoIntervencaoList[j].Descr;\n      }\n    }\n  }\n\n  //lista estados de intervenção.\n  loadEstadosIntervencao() {\n    return this.pedidosService\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n\n  // lista equipamentos.\n  loadEquip() {\n    return this.pedidosService\n      .GetEquipamentosObser()\n      .subscribe((data: Equipamento[]) => {\n        this.equipamentosList = data;\n      });\n  }\n}\n","<mat-spinner style=\"margin: 0 auto;\" mode=\"indeterminate\" color=\"accent\" *ngIf=\"isLoading\">\n</mat-spinner>\n<p style=\"text-align: center;\" *ngIf=\"isLoading\">aguarde ...</p>\n<p></p>\n\n<hr />\n<div class=\"inner\">\n  <div id=\"main\">\n    <div id=\"side_bar\">\n      <h5 class=\"formatH5\" style=\"text-align: right;\">Pedidos curativos</h5>\n      <button type=\"button\" class=\"btn btn-outline-primary\" style=\"float: right;\"\n        [routerLink]=\"['/pedido-mcurativa-add']\">\n        Novo pedido\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        (click)=\"printPedidos()\"\n      >\n        Imprimir\n      </button>\n      <br />\n\n      <div class=\"rowSelectTags\">\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">Grupo de máquina:</label><br />\n          <select class=\"AlignFilter\" id=\"AlignFilter\" [(ngModel)]=\"selectedOptionGrupo\" style=\"width: 180px;\">\n\n            <option selected>0</option>\n\n            <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{ item.CodigoInterno }} -\n              {{ item.Descr }}</option>\n          </select>\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">de:</label><br />\n          <input type=\"Date\" [(ngModel)]=\"selectedOptionDateInicio\" select class=\"AlignFilter\" id=\"AlignFilter\"\n            style=\"width: 180px;\" />\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">até:</label><br />\n          <input type=\"Date\" [(ngModel)]=\"selectedOptionDateFim\" select class=\"AlignFilter\" id=\"AlignFilter\"\n            style=\"width: 180px;\" />\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button class=\"AlignFilter\" (click)=\"procuraAvancada()\" mat-icon-button>\n            <mat-icon>search</mat-icon>\n          </button>\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button (click)=\"limparFiltros()\" mat-icon-button>\n            <mat-icon>delete_sweep</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <br />\n  <br />\n  <br />\n\n  <ng-container *ngIf=\"totalPedidos == 0\">\n    <br /><br /><br />\n    <p style=\"text-align: center;\"><strong>SEM RESULTADOS</strong></p>\n    <br /><br /><br />\n  </ng-container>\n\n  <div *ngIf=\"totalPedidos > 0\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\" style=\"width: 100%;\" [hidden]=\"isLoading\">\n        <thead>\n          <tr>\n            <!--<th scope=\"col\" width=\"20\">#</th>-->\n            <th scope=\"col\" width=\"80\">Utilizador</th>\n            <th scope=\"col\" width=\"220\">Equipamento</th>\n            <th scope=\"col\" width=\"320\">Descrição</th>\n            <th scope=\"col\" width=\"150\">Data de avaria</th>\n            <th scope=\"col\" width=\"80\">Estado</th>\n          </tr>\n        </thead>\n      </table>\n    </div>\n  </div>\n\n  <mat-accordion multi=\"false\">\n    <mat-expansion-panel *ngFor=\"let item of pedidos; let i = index\">\n      <mat-expansion-panel-header collapsedHeight=\"*\" expandedHeight=\"*\">\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <!--<td class=\"tb-td-txt\" width=\"20\">{{ item.IDPedido }}</td>-->\n              <td class=\"tb-td-txt\" width=\"80\">{{ item.UtilizadorIDUser }}</td>\n              <td class=\"tb-td-txt\" width=\"250\">\n                {{ changeIDtoInternalCode(i) }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"375\">{{ item.Descricao }}</td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataPedido | date: \"dd/MM/yyyy HH:mm\" }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"80\">\n                {{ checkStateOfIntervention(i) }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-expansion-panel-header>\n      <div class=\"table-responsive\">\n\n        <body style=\"text-align: center;\">\n          <table class=\"table\" style=\"width: 80%;\">\n            <thead>\n              <tr>\n                <th scope=\"col\" width=\"25\">#</th>\n                <th scope=\"col\" width=\"80\">Utilizador</th>\n                <th scope=\"col\" width=\"250\">Descrição</th>\n                <th scope=\"col\" width=\"150\">Estado</th>\n                <th scope=\"col\" width=\"170\">Inicio da intervenção</th>\n                <th scope=\"col\" width=\"170\">Fim da intervenção</th>\n                <th scope=\"col\" width=\"100\">Duração</th>\n                <td>\n                  <button type=\"button\" (click)=\"openDialog(item.IDPedido)\" class=\"btn btn-success btn-sm move-right\"\n                    style=\"\n                      position: absolute;\n                      right: 0;\n                      height: 30px;\n                      width: 30px;\n                    \">\n                    +\n                  </button>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n\n              <tr *ngFor=\"let inter of intervencoes; let j = index\">\n                <ng-container *ngIf=\"inter.IDPedido == item.IDPedido\">\n                  <th scope=\"row\" width=\"25\">{{ inter.ID }}</th>\n                  <td class=\"tb-td-txt\" width=\"80\">\n                    {{ inter.UtilizadorIDUser }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"250\">{{ inter.Descricao }}</td>\n                  <td class=\"tb-td-txt\" width=\"150\">\n                    {{ changeIDtoDescription(j) }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataInicioIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataFimIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"100\">\n                    {{ getTimeDiff(inter.ID) }}\n                  </td>\n                  <td>\n                    <button type=\"button\" color=\"accent\" (click)=\"deleteIntervencao(inter.ID)\">\n                      <mat-icon _ngcontent-oax-c0=\"\" class=\"mat-icon notranslate material-icons mat-icon-no-color\"\n                        role=\"img\" aria-hidden=\"true\">delete</mat-icon>\n                    </button>\n                  </td>\n                </ng-container>\n              </tr>\n            </tbody>\n          </table>\n        </body>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <mat-paginator class=\"col\" [length]=\"totalPedidos\" [pageSize]=\"pedidosPerPage\" [pageSizeOptions]=\"pageSizeOptions\"\n    (page)=\"onChangedPage($event)\" *ngIf=\"pedidos.length > 0\"></mat-paginator>\n</div>","import { Component, OnInit, NgZone, EventEmitter, Output} from '@angular/core';\nimport { PedidoManutCurativaTeste } from '../../shared/pedidoMcurativa-teste/pedidoMcurativa.model';\nimport { PedidosPreventivosService } from '../../shared/pedidoMpreventiva/pedidoMpreventiva.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport {Equipamento} from '../../shared/equipamento/equipamentomodel';\nimport { NgForm } from '@angular/forms';\nimport {  ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-pedido-mpreventiva-add',\n  templateUrl: './pedido-mpreventiva-add.component.html',\n  styleUrls: ['./pedido-mpreventiva-add.component.css']\n})\nexport class PedidoMpreventivaAddComponent implements OnInit {\n\n  pedidoForm: FormGroup;\n  selectedOption: number; \n  gmID : number\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosList: Equipamento[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n\n  constructor(public pedidoService: PedidosPreventivosService, \n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private actRoute: ActivatedRoute   ) { }\n\n  ngOnInit(){\n    this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n  }\n  listJustgroupmachine()\n    {\n        this.gmID = this.selectedOption;\n\n        if(this.equipamentosFiltrados.length>0)\n          {\n            this.equipamentosFiltrados.length=0;\n          }   \n\n        for (let j = 0; j < this.equipamentosList.length; j++) \n        {\n          if (this.gmID == this.equipamentosList[j].IDGrupoM) \n          {\n            this.equipamentosFiltrados.push(this.equipamentosList[j]);           \n          }\n        }  \n    } \n\n\n  loadEquipamentos() {\n    return this.pedidoService.GetEquipamentosObser().subscribe((data: Equipamento[]) => {\n      this.equipamentosList = data;\n    })\n  }\n \n  loadGrupoMaquinas() {\n    return this.pedidoService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n  \n  addPedido() {\n    this.pedidoForm = this.fb.group({\n      IDEquipamento : [0],\n      Descricao: [''],\n      //IDEstadoIntervencao: [0],\n      //DataPedido:['']   \n    })\n  }\n\n\n  submitForm() {\n    this.pedidoService.postPedido(this.pedidoForm.value);\n    this.router.navigateByUrl('/pedido-preventiva-list'); \n    }\n    \n\n}\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n\n        <!-- Form -->\n        <div class=\"col-md-12\">\n            <br>\n            <h3>Novo pedido preventivo</h3>\n            <div class=\"td\"></div>\n            <br>\n\n            <label>Grupo de máquina</label>\n            <br>\n            <select [(ngModel)]=\"selectedOption\" (click)=\"listJustgroupmachine()\">           \n                <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{item.CodigoInterno }}-{{ item.Descr}}</option>\n            </select>\n            <br>\n            <form [formGroup]=\"pedidoForm\" (ngSubmit)=\"submitForm()\" novalidate>   \n                <br><label>Equipamento</label><br>\n                <select  class=\"form-group\" formControlName=\"IDEquipamento\">\n                    <option value=\"0\">Selecione o equipamento</option>   \n                    <option *ngFor=\"let item of equipamentosFiltrados\" [value]=\"item.IDEquipamento\">{{item.CodigoInterno}}-{{ item.Marca}} {{ item.Descr}}</option>                  \n                </select>\n                <div class=\"form-group\">\n                    <label>Descrição</label>\n                    <br>\n                    <input type=\"text\" formControlName=\"Descricao\" class=\"form-control\" class=\"myText\" maxlength=\"100\">\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\n            </form>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DatePipe } from '@angular/common';\n\nimport { NgForm } from \"@angular/forms\";\nimport * as printJS from 'print-js';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PageEvent } from \"@angular/material/paginator\";\n//import { IntervencaoCurativaAddComponent } from \"../intervencao-curativa-add/intervencao-curativa-add.component\";\n\n/*Load interfaces*/\nimport { Equipamento } from \"../../shared/equipamento/equipamentomodel\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidoPreventivo } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.model\";\nimport {PedidoPreventivoPrint} from \"../../shared/pedidoMpreventiva/pedidoMpreventivaPrint.model\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { IntervencaoPreventivo } from \"src/app/shared/pedidoMpreventiva/intervencaoPreventiva.model\";\nimport { IntervencaoPreventivaAddComponent } from \"../intervencao-preventiva-add/intervencao-preventiva-add.component\";\nimport {IntervencaoAddUserHomePageComponent} from '../intervencao-add-user-home-page/intervencao-add-user-home-page.component';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport { AspNetUsers } from '../../shared/pedidoMpreventiva/aspNetUsers.model';\nimport {TipoUtilizadorService} from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { TipoUtilizador} from '../../shared/tipoUtilizador/tipoUtilizador.model';\nimport {MatIconModule} from '@angular/material/icon'\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: \"app-pedido-preventiva-list\",\n  templateUrl: \"./pedido-preventiva-list.component.html\",\n  styleUrls: [\"./pedido-preventiva-list.component.css\"],\n})\nexport class PedidoPreventivaListComponent implements OnInit, OnDestroy {\n  constructor(\n    public pedidosService: PedidosPreventivosService,\n    public tipoUtilizadorService: TipoUtilizadorService,\n    public dialog: MatDialog,\n    private route: ActivatedRoute\n  ) {}\n \n  \n  isLoading = false;\n  pedidos: PedidoPreventivo[] = [];\n  equipamentosList: Equipamento[] = [];\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  intervencoesFiltradas: IntervencaoPreventivo[] = [];\n  intervencoes: IntervencaoPreventivo[] = [];\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n  aspNetUsersList: any = [];\n  tipoUtilizadorList: any = [];\n  gmID : number;\n  pedidosImprimir : PedidoPreventivoPrint[] =[];\n  \n  private pedidosSub: Subscription;\n  private intervencoesSub: Subscription;\n\n  pageSizeOptions = [5, 8, 12, 20, 25];\n  totalPedidos = 0;\n  pedidosPerPage = 2;\n  currentPage = 1;\n  selectedOptionGrupo = 0; \n  selectedOptionDateInicio= \"01-01-1990\";\n  selectedOptionDateFim = \"01-01-1990\";\n  model: any = {};\n  \n\n  \n\n  ngOnInit() {\n\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, 0, \"01-01-1990\", \"01-01-1990\");\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: { pedidos: PedidoPreventivo[]; CountPedidos: number }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n          \n        }\n      );\n\n    this.pedidosService.getIntervencoes();\n    this.intervencoesSub = this.pedidosService\n      .getIntervencaoUpdateListener()\n      .subscribe((intervencoes: IntervencaoPreventivo[]) => {\n        this.intervencoes = intervencoes;\n      });\n\n    //Carregamento de outros métodos.\n    this.loadEstadosIntervencao();\n    this.loadEquip();\n    this.loadGrupoMaquinas();\n    //this.loadAspNetUsers();\n    this.loadTiposUtilizador();\n  }\n\n\n  limparFiltros()\n  {\n    this.ngOnInit();\n    this.selectedOptionGrupo = 0;\n    this.selectedOptionDateInicio = \"01-01-1990\";\n    this.selectedOptionDateFim = \"01-01-1990\";\n  }\n\n  printPedidos()\n  {   \n     type MyArrayType = Array<{UtilizadorIDUser: string, DataLimiteManutencaoPrev: string}>;\n\n     let myArray= [];\n     \n     console.log(\"Pedidos \", this.pedidos);\n    \n    for(let i = 0; i < this.pedidos.length; i++)\n    { \n      \n      let pedidoPrint = {} as PedidoPreventivoPrint;\n      const datepipe: DatePipe = new DatePipe('en-US');\n\n      let dataLimiteFormatada = datepipe.transform(this.pedidos[i].DataLimiteManutencaoPrev, 'dd-MM-yyyy');\n      //let convertedDataLimite = new Date(dataPedidoFormatada);\n      let  dataPedidoFormatada = datepipe.transform(this.pedidos[i].DataPedido, 'dd-MM-yyyy HH:mm'); \n      //let convertedDataPedidoFormatada = new Date(dataPedidoFormatada);\n        pedidoPrint.DataPedido = '';\n        pedidoPrint.DataLimiteManutencaoPrev = '';\n        pedidoPrint.Descricao = '';\n        pedidoPrint.UtilizadorIDUser = '';\n        pedidoPrint.IDEquipamento = '';\n\n        pedidoPrint.DataPedido = dataPedidoFormatada;\n        if(dataLimiteFormatada == null)\n        {dataLimiteFormatada = ''}\n        if(dataLimiteFormatada!=null)\n        { pedidoPrint.DataLimiteManutencaoPrev = dataLimiteFormatada;}\n        \n        pedidoPrint.Descricao = this.pedidos[i].Descricao;\n        pedidoPrint.UtilizadorIDUser = this.pedidos[i].UtilizadorIDUser;\n         for (let j = 0; j < this.equipamentosList.length; j++) \n        { \n          if (this.pedidos[i].IDEquipamento == this.equipamentosList[j].IDEquipamento) \n                {\n                  pedidoPrint.IDEquipamento = this.equipamentosList[j].Marca + \" \"  + this.equipamentosList[j].Descr;           \n                }                \n        }     \n        \n        myArray.push(pedidoPrint);\n        \n        console.log(myArray);\n  }\n  printJS({printable: myArray, properties: [{field: 'UtilizadorIDUser', displayName: '#'}, {field:'IDEquipamento', displayName: 'Equipamento'}, \n  {field:'Descricao', displayName:'Descrição'}, {field:'DataLimiteManutencaoPrev', displayName:'Data limite'}, {field :'DataPedido', displayName:'Data pedido'}], type: 'json', header: 'ACATEL - Pedidos preventivos'})\n}\n\n  procuraAvancada()\n  {\n    console.log(this.selectedOptionGrupo, \"Grupo selecionado\");\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: { pedidos: PedidoPreventivo[]; CountPedidos: number }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n        }\n      );\n  }\n\n    //load tipos de utilizador da DB\n    loadTiposUtilizador() {\n      return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n      this.tipoUtilizadorList = data;\n     \n   })\n  }\n\n  ngOnDestroy() {\n    this.pedidosSub.unsubscribe();\n    this.intervencoesSub.unsubscribe();\n  }\n  //MAT paginator\n  onChangedPage(pageData: PageEvent) {\n    this.currentPage = pageData.pageIndex + 1;\n    this.pedidosPerPage = pageData.pageSize;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n  }\n\n  loadGrupoMaquinas() {\n    return this.pedidosService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n    })\n  }\n\n\n  openDialog(idPedido) {\n    console.log(idPedido, \"Passou na componente, ID do Pedido\");\n    this.dialog.open(IntervencaoPreventivaAddComponent, {\n      data: { idPedido: idPedido },\n    });\n  }\n\n  //## MÉTODOS ## //\n  //Delete intervenção, somente se o User registado na intervencao, for o mesmo da sessão em aberto\n  deleteIntervencao(ID) {\n    return this.pedidosService.DeleteIntervencao(ID).subscribe((res) => {});\n  }\n\n  getTimeDiff(a: number) {\n    for (let j = 0; j < this.intervencoes.length; j++)\n    {\n      \n      if (this.intervencoes[j].ID == a) \n      {\n        let endDate = new Date();\n        endDate = new Date(this.intervencoes[j].DataFimIntervencao);\n        let beginDate = new Date();\n        beginDate = new Date(this.intervencoes[j].DataInicioIntervencao);\n        let diffMs = endDate.getTime() - beginDate.getTime(); // milliseconds\n        var diffMinutos = Math.round(diffMs / 60000); \n        var hours = (diffMinutos/60);\n        var rhours = Math.floor(hours);\n        var minutes = (hours-rhours) * 60;\n        var rminutes = Math.round(minutes);    \n      }\n    }\n    if(rhours==0)\n    {\n      return rminutes + \"minuto(s)\";\n    }\n    if(rhours>=1 && rminutes==0)\n      return rhours + \"h\";\n    if(rhours>=1 && rminutes>0)\n      return rhours + \" h:\" + rminutes + \"m\";    \n  }\n\n  //Troca no front-end, o ID do equipamento pelo código interno da empresa\n  changeIDtoInternalCode(equip: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.pedidos[equip].IDEquipamento ==\n        this.equipamentosList[j].IDEquipamento\n      ) {\n        return (\n          this.equipamentosList[j].CodigoInterno +\n          \" - \" +\n          this.equipamentosList[j].Marca +\n          \" \" +\n          this.equipamentosList[j].Descr\n        );\n      }\n    }\n  }\n\n\n  //Mostra os estados de intervenção ## melhorar esta parte.\n  checkStateOfIntervention(a: number) {\n    if (this.intervencoesFiltradas.length > 0) {\n      this.intervencoesFiltradas.length = 0;\n    }\n\n    for (let j = 0; j < this.intervencoes.length; j++) {\n      if (\n        this.pedidos[a].IDPedido == this.intervencoes[j].PedidoManutPreventivaID\n      ) {\n        this.intervencoesFiltradas.push(this.intervencoes[j]);\n      }\n    }\n\n      if (this.intervencoesFiltradas.length > 0) {\n        var maxI = this.intervencoesFiltradas.reduce(function (prev, current) {\n          return prev.PedidoManutPreventivaID > current.PedidoManutPreventivaID ? prev : current;\n        });\n       \n      }\n      if (this.intervencoesFiltradas.length == 0) return \"S/I\";\n        else if (maxI.IDEstadoIntervencao == 2) return \"Aguarda\";\n        else if (maxI.IDEstadoIntervencao == 3) return \"Fechado\";\n  }\n\n  //lista estados de intervenção.\n  loadEstadosIntervencao() {\n    return this.pedidosService\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n\n  // lista equipamentos.\n  loadEquip() {\n    return this.pedidosService\n      .GetEquipamentosObser()\n      .subscribe((data: Equipamento[]) => {\n        this.equipamentosList = data;\n      });\n  }\n\n    //Troca o ID do estado de intervenção, pela sua descrição correspondente.\n    changeIDtoDescription(estado: number) {\n      for (let j = 0; j < this.equipamentosList.length; j++) {\n        if (\n          this.intervencoes[estado].IDEstadoIntervencao ==\n          this.estadoIntervencaoList[j].ID\n        ) {\n          return this.estadoIntervencaoList[j].Descr;\n        }\n      }\n    }\n}\n","<mat-spinner\n  style=\"margin: 0 auto\"\n  mode=\"indeterminate\"\n  color=\"accent\"\n  *ngIf=\"isLoading\"\n>\n</mat-spinner>\n<p style=\"text-align: center\" *ngIf=\"isLoading\">aguarde ...</p>\n<p></p>\n\n<hr />\n\n<div class=\"inner\">\n  <div id=\"main\">\n    <div id=\"side_bar\">\n      <h5 class=\"formatH5\" style=\"text-align: right\">Pedidos preventivos</h5>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        [routerLink]=\"['/pedido-mpreventiva-add']\"\n      >\n        Pedido individual\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        [routerLink]=\"['/manutencao-preventiva-programada']\"\n      >\n        Pedido em grupo\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        (click)=\"printPedidos()\"\n      >\n        Imprimir\n      </button>\n      <br />\n\n      <div class=\"rowSelectTags\">\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">Grupo de máquina:</label\n          ><br />\n          <select\n            class=\"AlignFilter\"\n            id=\"AlignFilter\"\n            [(ngModel)]=\"selectedOptionGrupo\"\n            style=\"width: 180px\"\n          >\n            <option selected>0</option>\n            <option\n              *ngFor=\"let item of gruposMaquinaList\"\n              [value]=\"item.IDGrupoMaquinas\"\n            >\n              {{ item.CodigoInterno }} - {{ item.Descr }}\n            </option>\n          </select>\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">de:</label><br />\n          <input\n            type=\"Date\"\n            [(ngModel)]=\"selectedOptionDateInicio\"\n            select\n            class=\"AlignFilter\"\n            id=\"AlignFilter\"\n            style=\"width: 180px\"\n          />\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">até:</label><br />\n          <input\n            type=\"Date\"\n            [(ngModel)]=\"selectedOptionDateFim\"\n            select\n            class=\"AlignFilter\"\n            id=\"AlignFilter\"\n            style=\"width: 180px\"\n          />\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button\n            class=\"AlignFilter\"\n            (click)=\"procuraAvancada()\"\n            mat-icon-button\n          >\n            <mat-icon>search</mat-icon>\n          </button>\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button (click)=\"limparFiltros()\" mat-icon-button>\n            <mat-icon>delete_sweep</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <br />\n  <br />\n  <br />\n  <ng-container *ngIf=\"totalPedidos == 0\">\n    <br /><br /><br />\n    <p style=\"text-align: center\"><strong>SEM RESULTADOS</strong></p>\n    <br /><br /><br />\n  </ng-container>\n\n  <div *ngIf=\"totalPedidos > 0\">\n    <div class=\"table-responsive\">\n      <table\n        class=\"table table-bordered\"\n        style=\"width: 100%\"\n        [hidden]=\"isLoading\"\n      >\n        <thead>\n          <tr>\n            <th scope=\"col\" width=\"80\">User</th>\n            <th scope=\"col\" width=\"375\">Equipamento</th>\n            <th scope=\"col\" width=\"400\">Descrição</th>\n            <th scope=\"col\" width=\"150\">Data</th>\n            <th scope=\"col\" width=\"150\">Limite</th>\n            <th scope=\"col\" width=\"80\">Estado</th>\n          </tr>\n        </thead>\n      </table>\n    </div>\n  </div>\n\n  <mat-accordion multi=\"false\">\n    <mat-expansion-panel *ngFor=\"let item of pedidos; let i = index\">\n      <mat-expansion-panel-header collapsedHeight=\"*\" expandedHeight=\"*\">\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <td class=\"tb-td-txt\" width=\"80\">{{ item.UtilizadorIDUser }}</td>\n              <td class=\"tb-td-txt\" width=\"375\">\n                {{ changeIDtoInternalCode(i) }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"400\">{{ item.Descricao }}</td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataPedido | date: \"dd/MM/yyyy HH:mm\" }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataLimiteManutencaoPrev | date: \"dd/MM/yyyy\" }}\n              </td>\n\n              <td class=\"tb-td-txt\" width=\"80\">\n                {{ checkStateOfIntervention(i) }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-expansion-panel-header>\n      <div class=\"table-responsive\">\n        <body style=\"text-align: center\">\n          <table class=\"table\" style=\"width: 80%\">\n            <thead>\n              <tr>\n                <th scope=\"col\" width=\"25\">#</th>\n                <th scope=\"col\" width=\"80\">Utilizador</th>\n                <th scope=\"col\" width=\"250\">Descrição</th>\n                <th scope=\"col\" width=\"150\">Estado</th>\n                <th scope=\"col\" width=\"170\">Inicio da intervenção</th>\n                <th scope=\"col\" width=\"170\">Fim da intervenção</th>\n                <th scope=\"col\" width=\"100\">Duração</th>\n\n                <td>\n                  <button\n                    type=\"button\"\n                    (click)=\"openDialog(item.IDPedido)\"\n                    class=\"btn btn-success btn-sm move-right\"\n                    style=\"\n                      position: absolute;\n                      right: 0;\n                      height: 30px;\n                      width: 30px;\n                    \"\n                  >\n                    +\n                  </button>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n\n              <tr *ngFor=\"let inter of intervencoes; let j = index\">\n                <ng-container\n                  *ngIf=\"inter.PedidoManutPreventivaID == item.IDPedido\"\n                >\n                  <th scope=\"row\" width=\"25\">{{ inter.ID }}</th>\n                  <td class=\"tb-td-txt\" width=\"80\">\n                    {{ inter.UtilizadorIDUser }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"250\">{{ inter.Observacoes }}</td>\n                  <td class=\"tb-td-txt\" width=\"150\">\n                    {{ changeIDtoDescription(j) }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataInicioIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataFimIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"100\">\n                    {{ getTimeDiff(inter.ID) }}\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      color=\"accent\"\n                      (click)=\"deleteIntervencao(inter.ID)\"\n                    >\n                      <mat-icon\n                        _ngcontent-oax-c0=\"\"\n                        class=\"mat-icon notranslate material-icons mat-icon-no-color\"\n                        role=\"img\"\n                        aria-hidden=\"true\"\n                        >delete</mat-icon\n                      >\n                    </button>\n                  </td>\n                </ng-container>\n              </tr>\n            </tbody>\n          </table>\n        </body>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <mat-paginator\n    class=\"col\"\n    [length]=\"totalPedidos\"\n    [pageSize]=\"pedidosPerPage\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    (page)=\"onChangedPage($event)\"\n    *ngIf=\"pedidos.length > 0\"\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { RegisterService } from '../../shared/register/register.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TipoUtilizadorService } from '../../shared/tipoUtilizador/tipoUtilizador.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n \r\n\r\n\r\n@Component({\r\n  selector: 'app-add-register',\r\n  templateUrl: './register-add.component.html',\r\n  styleUrls: ['./register-add.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  equipForm: FormGroup;\r\n  tipoUtilizadorList: any = [];\r\n\r\n\r\n  ngOnInit() {\r\n    this.addRegister();\r\n    this.loadTiposUtilizador();\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private ngZone: NgZone,\r\n    private router: Router,\r\n    public registerService: RegisterService, \r\n    public tipoUtilizadorService: TipoUtilizadorService,\r\n    private actRoute: ActivatedRoute\r\n  ){ }\r\n\r\n  addRegister() {\r\n    this.equipForm = this.fb.group({\r\n      Email : [''],\r\n      Password : [''],\r\n      ConfirmPassword: [''], \r\n      IDTipo : [0],\r\n      NumeroUtilizador : [0],\r\n      Nome : ['']\r\n    })\r\n  }\r\n\r\n  loadTiposUtilizador() {\r\n    return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\r\n      this.tipoUtilizadorList = data;\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    this.registerService.CreateRegisto(this.equipForm.value).subscribe(res => {\r\n      console.log('Registo adicionado!')\r\n      this.ngZone.run(() => this.router.navigateByUrl(''))\r\n    });\r\n  }\r\n}","<div class=\"centerScreen\">\r\n<div class=\"container wrapper wrapper2\">\r\n    <div class=\"row\">\r\n\r\n        <!-- Form -->\r\n        <div class=\"col-md-12\">\r\n            <br>\r\n            <h3>Ficha de novo utilizador</h3>\r\n            \r\n            <form [formGroup]=\"equipForm\" (ngSubmit)=\"submitForm()\" novalidate >\r\n                <div class=\"form-group\">\r\n                    <label>Nome</label>\r\n                    <input type=\"text\" formControlName=\"Nome\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Nº de funcionário</label>\r\n                    <input type=\"text\" formControlName=\"NumeroUtilizador\" class=\"form-control\">\r\n                </div>\r\n                <label>Tipo de cargo</label>\r\n                <br>\r\n                <select class=\"form-group\" formControlName=\"IDTipo\">\r\n                    \r\n                    <option value=\"0\">Selecione</option>   \r\n                    <option *ngFor=\"let item of tipoUtilizadorList\" [value]=\"item.IDTipo\">{{item.TipoDescr}}</option>                  \r\n                </select>\r\n                <div class=\"form-group\" >\r\n                    <label>Email</label>\r\n                    <input type=\"text\" formControlName=\"Email\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"text\" formControlName=\"Password\" class=\"form-control\" type=\"password\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Confirmar password</label>\r\n                    <input type=\"text\" formControlName=\"ConfirmPassword\" class=\"form-control\" type=\"password\">\r\n                </div>\r\n               \r\n                <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\r\n                <br> <br>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AspNetUsers } from \"./aspNetUsers.model\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AspNetUsersService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  /*httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }*/\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(BACKEND_URL + \"/AspNetUsers\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //GET ONE\r\n  GetOneUser(id): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?UserName=\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //PUT\r\n  UpdateAspNetUser(id, data): Observable<AspNetUsers> {\r\n    return this.http\r\n      .put<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?Username=\" + id,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","export enum UserRoles {\r\n    Admin = 1,\r\n    Utilizador = 2,\r\n    Convidado = 3\r\n  }\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AspNetRoles } from \"./aspNetRoles.model\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AspNetRolesService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetRoles> {\r\n    return this.http\r\n      .get<AspNetRoles>(BACKEND_URL + \"/AspNetRoles\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n\r\n  //GET ONE\r\n  GetOneUser(email): Observable<AspNetRoles> {\r\n    return this.http\r\n      .get<AspNetRoles>(\r\n        BACKEND_URL + \"/AspNetRoles?email=\" + email,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //PUT\r\n  UpdateAspNetRole(userName, roleName, oldRoleName, data): Observable<AspNetRoles> {\r\n    return this.http\r\n      .put<AspNetRoles>(\r\n        BACKEND_URL + \"/AspNetRoles?userName=\" + userName + \"&roleName=\" + roleName+\"&oldRoleName=\" + oldRoleName,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AspNetUsers } from \"./aspNetUsers.model\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AspNetUsersService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  /*httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }*/\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(BACKEND_URL + \"/AspNetUsers\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //GET ONE\r\n  GetOneUser(id): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?UserName=\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //PUT\r\n  UpdateAspNetUser(id, data): Observable<AspNetUsers> {\r\n    return this.http\r\n      .put<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?Username=\" + id,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  apiUrl: \"http://192.168.0.49:8005/api\",\r\n}; \r\n\r\n/*\r\n export const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:44334/api\",\r\n};\r\n */","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Equipamento } from \"./equipamentomodel\";\nimport { Observable, throwError } from \"rxjs\";\nimport { retry, catchError } from \"rxjs/operators\";\n\nimport { environment } from \"./../environments/environments\";\nconst BACKEND_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EquipamentoService {\n  baseurl = \"http://localhost:44334/api\";\n\n  constructor(private http: HttpClient) {}\n\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n    }),\n    withCredentials: true,\n  };\n\n  // POST\n  CreateEquip(data): Observable<Equipamento> {\n    return this.http\n      .post<Equipamento>(\n        BACKEND_URL + \"/Equipamentoes\",\n        JSON.stringify(data),\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  // GET\n  GetOneEquip(id): Observable<Equipamento> {\n    return this.http\n      .get<Equipamento>(BACKEND_URL + \"/Equipamentoes/\" + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  // GET\n  GetEquipamentos(): Observable<Equipamento[]> {\n    return this.http\n      .get<Equipamento[]>(BACKEND_URL + \"/Equipamentoes\", this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  // PUT\n  UpdateEquipamento(id, data): Observable<Equipamento> {\n    return this.http\n      .put<Equipamento>(\n        BACKEND_URL + \"/Equipamentoes/\" + id,\n        JSON.stringify(data),\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  errorHandl(error) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      // Get erro lado cliente\n      errorMessage = error.error.message;\n    } else {\n      // Get erro lado servidor\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { GrupoMaquina } from \"./grupomaquinamodel\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GrupoMaquinaService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  /* httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n*/\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET por IDS\r\n  GetOneGrupoMaquina(id): Observable<GrupoMaquina> {\r\n    return this.http\r\n      .get<GrupoMaquina>(BACKEND_URL + \"/GrupoMaquinas/\" + id, this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // GET all\r\n  GetGruposMaquina(): Observable<GrupoMaquina> {\r\n    return this.http\r\n      .get<GrupoMaquina>(BACKEND_URL + \"/GrupoMaquinas\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // Error handling\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { PedidoManutCurativaTeste } from \"./pedidoMcurativa.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject, Observable, throwError, bindCallback } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { retry, catchError, map } from \"rxjs/operators\";\r\nimport { Equipamento } from \"../equipamento/equipamentomodel\";\r\nimport { EstadoIntervencao } from \"../estadoIntervencao/estadoIntervencao.model\";\r\nimport { GrupoMaquina } from \"../gruposmaquina/grupomaquinamodel\";\r\nimport { IntervencaoCurativa } from \"./intervencaoCurativa.model\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class PedidosService {\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  pedidos: PedidoManutCurativaTeste[] = [];\r\n  //private pedidosUpdated = new Subject<PedidoManutCurativaTeste[]>();\r\n\r\n  private pedidosUpdated = new Subject<{\r\n    pedidos: PedidoManutCurativaTeste[];\r\n    CountPedidos: number;\r\n  }>();\r\n  countPedidos: number;\r\n  intervencoes: IntervencaoCurativa[] = [];\r\n  private intervencoesUpdated = new Subject<IntervencaoCurativa[]>();\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getPedidos(pedidosPerPage: number, currentPage: number, selectOptionGrupo:number, selectedOptionDateInicio: string, selectedOptionDateFim: string) {\r\n    const queryParms = `?pedidosPerPage=${pedidosPerPage}&currentPage=${currentPage}&grupoMaquina=${selectOptionGrupo}&dataInicio=${selectedOptionDateInicio}&dataFim=${selectedOptionDateFim}`;\r\n    this.httpClient\r\n      .get<{\r\n        PedidoManutCurativaList: PedidoManutCurativaTeste[];\r\n        CountPedidos: number;\r\n      }>(BACKEND_URL + \"/PedidoManutCurativas\" + queryParms, this.httpOptions)\r\n      .pipe(\r\n        map((pedidoCurativaData) => {\r\n          return {\r\n            PedidoManutCurativaList: pedidoCurativaData.PedidoManutCurativaList.map(\r\n              (pedidoCurativo) => {\r\n                return {\r\n                  IDPedido: pedidoCurativo.IDPedido,\r\n                  UtilizadorIDUser: pedidoCurativo.UtilizadorIDUser,\r\n                  IDEquipamento: pedidoCurativo.IDEquipamento,\r\n                  Descricao: pedidoCurativo.Descricao,\r\n                  DataPedido: pedidoCurativo.DataPedido,\r\n                };\r\n              }\r\n            ),\r\n            pedidoCurativoCount: pedidoCurativaData.CountPedidos,\r\n          };\r\n        })\r\n      )\r\n      .subscribe((pedidosCurativa) => {\r\n        this.countPedidos = pedidosCurativa.pedidoCurativoCount;\r\n        console.log(\"numero de pedidos\", pedidosCurativa.pedidoCurativoCount);\r\n        this.pedidos = pedidosCurativa.PedidoManutCurativaList;\r\n        this.pedidosUpdated.next({\r\n          pedidos: [...this.pedidos],\r\n          CountPedidos: this.countPedidos,\r\n        });\r\n      });\r\n  }\r\n\r\n  getIntervencoes() {\r\n    this.httpClient\r\n      .get<any[]>(BACKEND_URL + \"/IntervencaoCurativas\", this.httpOptions)\r\n      .subscribe((intervencoes) => {\r\n        let transformedintervencoes: IntervencaoCurativa[] = [];\r\n        for (let x = 0; x < intervencoes.length; x++) {\r\n          let transformedIntervencao: IntervencaoCurativa = {\r\n            ID: intervencoes[x].ID,\r\n            IDPedido: intervencoes[x].IDPedido,\r\n            UtilizadorIDUser: intervencoes[x].UtilizadorIDUser,\r\n            Descricao: intervencoes[x].Descricao,\r\n            IDEstadoIntervencao: intervencoes[x].IDEstadoIntervencao,\r\n            DataFimIntervencao: intervencoes[x].DataFimIntervencao,\r\n            DataInicioIntervencao: intervencoes[x].DataInicioIntervencao,\r\n          };\r\n          transformedintervencoes.push(transformedIntervencao);\r\n        }\r\n        this.intervencoes = transformedintervencoes;\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      });\r\n  }\r\n\r\n  getPedidoUpdateListener() {\r\n    return this.pedidosUpdated.asObservable();\r\n  }\r\n\r\n  //POST PEDIDO\r\n  postPedido(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/PedidoManutCurativas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise();\r\n    this.pedidos.push(data);\r\n    this.countPedidos = this.countPedidos + 1;\r\n    this.pedidosUpdated.next({\r\n      pedidos: [...this.pedidos],\r\n      CountPedidos: this.countPedidos,\r\n    });\r\n  }\r\n\r\n  postIntervencao(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/IntervencaoCurativas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise()\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.intervencoes.push(res);\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n\r\n  getIntervencaoUpdateListener() {\r\n    return this.intervencoesUpdated.asObservable();\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  // DELETE\r\n  DeleteIntervencao(id) {\r\n    console.log(id, \"cheguei ao metodo\");\r\n    return this.httpClient\r\n      .delete<IntervencaoCurativa>(\r\n        BACKEND_URL + \"/IntervencaoCurativas/\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // GET\r\n  GetEquipamentosObser(): Observable<Equipamento[]> {\r\n    return this.httpClient\r\n      .get<Equipamento[]>(BACKEND_URL + \"/Equipamentoes\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n  // GET\r\n  GetEstadosIntervencao(): Observable<EstadoIntervencao[]> {\r\n    return this.httpClient\r\n      .get<EstadoIntervencao[]>(\r\n        BACKEND_URL + \"/EstadoIntervencaos\",\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  //GET grupos de máquinas\r\n  GetGruposMaquina(): Observable<GrupoMaquina[]> {\r\n    return this.httpClient\r\n      .get<GrupoMaquina[]>(BACKEND_URL + \"/GrupoMaquinas\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n}\r\n\r\n/* LAST GETPEDIDOS\r\n  getPedidos() {\r\n    this.httpClient\r\n      .get<any[]>(\r\n        \"http://localhost:44334/api/PedidoManutCurativas\",\r\n        this.httpOptions\r\n      )\r\n      .subscribe((pedidos) => {\r\n        let transformedpedidos: PedidoManutCurativaTeste[] = [];\r\n        for (let x = 0; x < pedidos.length; x++) {\r\n          let transformedpedido: PedidoManutCurativaTeste = {\r\n            IDPedido: pedidos[x].IDPedido,\r\n            UtilizadorIDUser: pedidos[x].UtilizadorIDUser,\r\n            IDEquipamento: pedidos[x].IDEquipamento,\r\n            Descricao: pedidos[x].Descricao,\r\n            DataPedido: pedidos[x].DataPedido,\r\n          };\r\n          transformedpedidos.push(transformedpedido);\r\n        }\r\n\r\n        this.pedidos = transformedpedidos;\r\n        this.pedidosUpdated.next([...this.pedidos]);\r\n      });\r\n  }*/\r\n\r\n/*  getPedidos() {\r\n      this.httpClient.get<any>('http://localhost:44334/api/PedidoManutCurativas', this.httpOptions)\r\n        .toPromise()\r\n        .then(r => r.map(pedido => ({\r\n          PedidoIDPedido : pedido.IDPedido,\r\n          UtilizadorIDUser : pedido.UtilizadorIDUser,\r\n          IDEquipamento : pedido.IDEquipamento,\r\n          Descricao : pedido.Descricao,\r\n          DataPedido : pedido.DataPedido \r\n        }))\r\n        )\r\n          .then(transformedpedidos => {\r\n          this.pedidos = transformedpedidos;\r\n          this.pedidosUpdated.next([...this.pedidos]);\r\n        });\r\n        \r\n  } */\r\n\r\n/*  getIntervencoes() {\r\n        this.httpClient.get<any>('http://localhost:44334/api/IntervencaoCurativas', this.httpOptions)\r\n          .toPromise()\r\n          .then(r => r.map(intervencao => ({\r\n            ID : intervencao.ID,\r\n            IDPedido : intervencao.IDPedido,\r\n            UtilizadorIDUser : intervencao.UtilizadorIDUser,\r\n            IDEquipamento : intervencao.IDEquipamento,\r\n            Descricao : intervencao.Descricao,\r\n            IDEstadoIntervencao : intervencao.IDEstadoIntervencao,\r\n            DataFimIntervencao: intervencao.DataFimIntervencao,\r\n            DataInicioIntervencao : intervencao.DataInicioIntervencao\r\n          }))\r\n          )\r\n            .then(transformedintervencoes=> {\r\n            this.intervencoes = transformedintervencoes;\r\n            this.intervencoesUpdated.next([...this.intervencoes]);\r\n          });\r\n          console.log(this.intervencoes, 'teste');\r\n    } */\r\n","import { PedidoPreventivo } from \"./pedidoMpreventiva.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject, Observable, throwError } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { retry, catchError, map } from \"rxjs/operators\";\r\nimport { Equipamento } from \"../equipamento/equipamentomodel\";\r\nimport { EstadoIntervencao } from \"../estadoIntervencao/estadoIntervencao.model\";\r\nimport { GrupoMaquina } from \"../gruposmaquina/grupomaquinamodel\";\r\nimport { IntervencaoPreventivo } from \"./intervencaoPreventiva.model\";\r\nimport { AspNetUsers } from \"./aspNetUsers.model\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\n\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class PedidosPreventivosService {\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  pedidos: PedidoPreventivo[] = [];\r\n \r\n  countPedidos: number;\r\n\r\n  pedidosUser: PedidoPreventivo[] = [];\r\n\r\n  private pedidosUpdated = new Subject<{\r\n    pedidos: PedidoPreventivo[];\r\n    CountPedidos: number;\r\n  }>();\r\n\r\n  intervencoes: IntervencaoPreventivo[] = [];\r\n  usersList: AspNetUsers[] = [];\r\n  private intervencoesUpdated = new Subject<IntervencaoPreventivo[]>();\r\n\r\n  private pedidosUserUpdated = new Subject<PedidoPreventivo[]>();\r\n\r\n\r\n  getPedidosUserUpdateListener() {\r\n    return this.pedidosUserUpdated.asObservable();\r\n  }\r\n\r\n\r\n\r\n  //POST: manutenção em grupo, através do IdGrupoMaquina via link.\r\n  postPedidoPerGrupoMaquinas(idGrupoMaquina, data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/PedidosPreventivas?grupoMaquina=\" + idGrupoMaquina,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise();\r\n    this.pedidos.push(data);\r\n    this.countPedidos = this.countPedidos + 1;\r\n    this.pedidosUpdated.next({\r\n      pedidos: [...this.pedidos],\r\n      CountPedidos: this.countPedidos,\r\n    });\r\n  }\r\n\r\n  getPedidoUpdateListener() {\r\n    return this.pedidosUpdated.asObservable();\r\n  }\r\n\r\n  //POST PEDIDO\r\n  postPedido(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/PedidosPreventivas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise();\r\n    this.pedidos.push(data);\r\n    this.countPedidos = this.countPedidos + 1;\r\n    this.pedidosUpdated.next({\r\n      pedidos: [...this.pedidos],\r\n      CountPedidos: this.countPedidos,\r\n    });\r\n  }\r\n\r\n\r\n  getPedidos(pedidosPerPage: number, currentPage: number, selectOptionGrupo:number, selectedOptionDateInicio: string, selectedOptionDateFim: string) {\r\n    const queryParms = `?pedidosPerPage=${pedidosPerPage}&currentPage=${currentPage}&grupoMaquina=${selectOptionGrupo}&dataInicio=${selectedOptionDateInicio}&dataFim=${selectedOptionDateFim}`;\r\n    this.httpClient\r\n      .get<{\r\n        PedidoManutPreventivoList: PedidoPreventivo[];\r\n        CountPedidos: number;\r\n      }>(BACKEND_URL + \"/PedidosPreventivas\" + queryParms, this.httpOptions)\r\n      .pipe(\r\n        map((pedidoPreventivoData) => {\r\n          return {\r\n            PedidoManutPreventivoList: pedidoPreventivoData.PedidoManutPreventivoList.map(\r\n              (pedidoPreventivo) => {\r\n                return {\r\n                  IDPedido: pedidoPreventivo.IDPedido,\r\n                  UtilizadorIDUser: pedidoPreventivo.UtilizadorIDUser,\r\n                  IDEquipamento: pedidoPreventivo.IDEquipamento,\r\n                  Descricao: pedidoPreventivo.Descricao,\r\n                  DataPedido: pedidoPreventivo.DataPedido,\r\n                  FichaManutencaoID: pedidoPreventivo.FichaManutencaoID,\r\n                  DataLimiteManutencaoPrev:\r\n                    pedidoPreventivo.DataLimiteManutencaoPrev,\r\n                };\r\n              }\r\n            ),\r\n            pedidoPreventivoCount: pedidoPreventivoData.CountPedidos,\r\n          };\r\n        })\r\n      )\r\n      .subscribe((pedidosPreventiva) => {\r\n        this.countPedidos = pedidosPreventiva.pedidoPreventivoCount;\r\n        console.log(\r\n          \"numero de pedidos\",\r\n          pedidosPreventiva.pedidoPreventivoCount\r\n        );\r\n        this.pedidos = pedidosPreventiva.PedidoManutPreventivoList;\r\n        this.pedidosUpdated.next({\r\n          pedidos: [...this.pedidos],\r\n          CountPedidos: this.countPedidos,\r\n        });\r\n      });\r\n  }\r\n\r\n  getIntervencoes() {\r\n    this.httpClient\r\n      .get<any[]>(BACKEND_URL + \"/IntervencaoPreventivas\", this.httpOptions)\r\n      .subscribe((intervencoes) => {\r\n        let transformedintervencoes: IntervencaoPreventivo[] = [];\r\n        for (let x = 0; x < intervencoes.length; x++) {\r\n          let transformedIntervencao: IntervencaoPreventivo = {\r\n            ID: intervencoes[x].ID,\r\n            PedidoManutPreventivaID: intervencoes[x].PedidoManutPreventivaID,\r\n            UtilizadorIDUser: intervencoes[x].UtilizadorIDUser,\r\n            Observacoes: intervencoes[x].Observacoes,\r\n            IDEstadoIntervencao: intervencoes[x].IDEstadoIntervencao,\r\n            DataFimIntervencao: intervencoes[x].DataFimIntervencao,\r\n            DataInicioIntervencao: intervencoes[x].DataInicioIntervencao,\r\n          };\r\n          transformedintervencoes.push(transformedIntervencao);\r\n        }\r\n        this.intervencoes = transformedintervencoes;\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      });\r\n  }\r\n\r\n  postIntervencao(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/IntervencaoPreventivas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise()\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.intervencoes.push(res);\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n\r\n  getIntervencaoUpdateListener() {\r\n    return this.intervencoesUpdated.asObservable();\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  // GET\r\n  GetEquipamentosObser(): Observable<Equipamento[]> {\r\n    return this.httpClient\r\n      .get<Equipamento[]>(BACKEND_URL + \"/Equipamentoes\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetUsers> {\r\n    return this.httpClient\r\n      .get<AspNetUsers>(BACKEND_URL + \"/AspNetUsers\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n\r\n  getPedidosUser() {\r\n    this.httpClient\r\n      .get<any[]>(BACKEND_URL + \"/PedidosPreventivas\", this.httpOptions)\r\n      .subscribe((pedidos) => {\r\n        let transformedpedidos: PedidoPreventivo[] = [];\r\n        for (let x = 0; x < pedidos.length; x++) {\r\n          let transformedPedido: PedidoPreventivo = {\r\n            IDPedido: pedidos[x].ID,\r\n            UtilizadorIDUser: pedidos[x].UtilizadorIDUser,\r\n            IDEquipamento: pedidos[x].IDEquipamento,\r\n            Descricao: pedidos[x].Descricao,\r\n            DataPedido: pedidos[x].DataPedido,\r\n            FichaManutencaoID: pedidos[x].FichaManutencaoID,\r\n            DataLimiteManutencaoPrev: pedidos[x].DataLimiteManutencaoPrev,\r\n          };\r\n          transformedpedidos.push(transformedPedido);\r\n        }\r\n        this.pedidosUser = transformedpedidos;\r\n        this.pedidosUserUpdated.next([...this.pedidosUser]);\r\n      });\r\n  }\r\n\r\n  GetPedidosEmEsperaUser():Observable<PedidoPreventivo>{\r\n    return this.httpClient\r\n      .get<PedidoPreventivo>(\r\n        BACKEND_URL + \"/PedidosPreventivas\",\r\n        this.httpOptions\r\n      )\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl));\r\n  }\r\n\r\n  // GET\r\n  GetEstadosIntervencao(): Observable<EstadoIntervencao[]> {\r\n    return this.httpClient\r\n      .get<EstadoIntervencao[]>(\r\n        BACKEND_URL + \"/EstadoIntervencaos\",\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  //GET grupos de máquinas\r\n  GetGruposMaquina(): Observable<GrupoMaquina[]> {\r\n    return this.httpClient\r\n      .get<GrupoMaquina[]>(BACKEND_URL + \"/GrupoMaquinas\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  // DELETE\r\n  DeleteIntervencao(id) {\r\n    return this.httpClient\r\n      .delete<IntervencaoPreventivo>(\r\n        BACKEND_URL + \"/IntervencaoPreventivas/\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Register } from \"./registermodel\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RegisterService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n\r\n  // POST\r\n  CreateRegisto(data): Observable<Register> {\r\n    return this.http\r\n      .post<Register>(\r\n        BACKEND_URL + \"/Account/Register\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // Error handling\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { TipoUtilizador } from './tipoUtilizador.model';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { environment } from './../environments/environments';\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TipoUtilizadorService {\r\n\r\n  baseurl = 'http://localhost:44334/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n /* httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n*/\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json', \r\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n   }), \r\n  withCredentials: true\r\n  }\r\n\r\n  // GET por IDS\r\n  GetOneTipoUtilizador(IDTipo): Observable<TipoUtilizador> {\r\n    return this.http.get<TipoUtilizador>(BACKEND_URL+ '/TipoUtilizadors/' + IDTipo, this.httpOptions)\r\n     .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandl)\r\n    )\r\n  }\r\n\r\n  // GET all \r\n  GetTiposUtilizador(): Observable<TipoUtilizador> {\r\n    return this.http.get<TipoUtilizador>(BACKEND_URL + '/TipoUtilizadors', this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandl)\r\n    )\r\n  }\r\n\r\n  // Error handling\r\n  errorHandl(error) {\r\n     let errorMessage = '';\r\n     if(error.error instanceof ErrorEvent) {\r\n       // Get client-side error\r\n       errorMessage = error.error.message;\r\n     } else {\r\n       // Get server-side error\r\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n     }\r\n     console.log(errorMessage);\r\n     return throwError(errorMessage);\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}