{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/Login-logout/logincomponent.ts","./src/app/Login-logout/logincomponent.html","./src/app/TokenAuth/auth.guard.ts","./src/app/TokenAuth/auth.service.ts","./src/app/app-routing.model.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/alerta-permissao/alerta-permissao.component.ts","./src/app/components/alerta-permissao/alerta-permissao.component.html","./src/app/components/asp-net-user-edit/asp-net-user-edit.component.ts","./src/app/components/asp-net-user-edit/asp-net-user-edit.component.html","./src/app/components/asp-net-user-list/asp-net-user-list.component.ts","./src/app/components/asp-net-user-list/asp-net-user-list.component.html","./src/app/components/edit-permissao/edit-permissao.component.ts","./src/app/components/edit-permissao/edit-permissao.component.html","./src/app/components/equipamento-add/equip-add.component.ts","./src/app/components/equipamento-add/equip-add.component.html","./src/app/components/equipamento-edit/equip-edit.component.ts","./src/app/components/equipamento-edit/equip-edit.component.html","./src/app/components/equipamento-list/equip-list.component.ts","./src/app/components/equipamento-list/equip-list.component.html","./src/app/components/grupomaquina-list/grupomaquina-list.component.ts","./src/app/components/grupomaquina-list/grupomaquina-list.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/intervencao-add-user-home-page/intervencao-add-user-home-page.component.ts","./src/app/components/intervencao-add-user-home-page/intervencao-add-user-home-page.component.html","./src/app/components/intervencao-curativa-add/intervencao-curativa-add.component.ts","./src/app/components/intervencao-curativa-add/intervencao-curativa-add.component.html","./src/app/components/intervencao-preventiva-add/intervencao-preventiva-add.component.ts","./src/app/components/intervencao-preventiva-add/intervencao-preventiva-add.component.html","./src/app/components/list-permissao/list-permissao.component.ts","./src/app/components/list-permissao/list-permissao.component.html","./src/app/components/manutencao-preventiva-programada/manutencao-preventiva-programada.component.ts","./src/app/components/manutencao-preventiva-programada/manutencao-preventiva-programada.component.html","./src/app/components/manutencao-prog-home-page/manutencao-prog-home-page.component.ts","./src/app/components/manutencao-prog-home-page/manutencao-prog-home-page.component.html","./src/app/components/pedido-mcurativa-add/pedido-mcurativa-add.component.ts","./src/app/components/pedido-mcurativa-add/pedido-mcurativa-add.component.html","./src/app/components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component.ts","./src/app/components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component.html","./src/app/components/pedido-mpreventiva-add/pedido-mpreventiva-add.component.ts","./src/app/components/pedido-mpreventiva-add/pedido-mpreventiva-add.component.html","./src/app/components/pedido-preventiva-list/pedido-preventiva-list.component.ts","./src/app/components/pedido-preventiva-list/pedido-preventiva-list.component.html","./src/app/components/register-add/register-add.component.ts","./src/app/components/register-add/register-add.component.html","./src/app/shared/AspNetUsers/aspNetUsers.service.ts","./src/app/shared/Constantes/userRoles.ts","./src/app/shared/aspNetRoles/aspNetRoles.service.ts","./src/app/shared/aspNetUsers/aspNetUsers.service.ts","./src/app/shared/environments/environments.ts","./src/app/shared/equipamento/equipamento.service.ts","./src/app/shared/gruposmaquina/grupomaquina.service.ts","./src/app/shared/pedidoMcurativa-teste/pedidoMcurativa.service.ts","./src/app/shared/pedidoMpreventiva/pedidoMpreventiva.service.ts","./src/app/shared/register/register.service.ts","./src/app/shared/tipoUtilizador/tipoUtilizador.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, Injectable, NgZone } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { TokenParams } from \"../TokenAuth/TokenParamsModel\";\r\nimport { AuthService } from \"../TokenAuth/auth.service\";\r\nimport { NgForm } from \"@angular/forms\";\r\nimport { Observable } from \"rxjs\";\r\nimport {\r\n  HttpClientModule,\r\n  HttpClient,\r\n  HttpHeaders,\r\n} from \"@angular/common/http\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\n//import { AspNetUsersLoadComponent} from './asp-net-users-load/asp-net-users-load.component';\r\nimport { AspNetUsers } from \"../shared/aspNetUsers/aspNetUsers.model\";\r\nimport { AspNetUsersService } from \"../shared/aspNetUsers/aspNetUsers.service\";\r\nimport { Subscription } from \"rxjs\";\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n//import * as moment from \"moment\";\r\n\r\n@Component({\r\n  selector: \"my-login\",\r\n  templateUrl: \"./logincomponent.html\",\r\n})\r\nexport class LoginComponent {\r\n  isLoading = false;\r\n  private authStatusSub: Subscription;\r\n  form: FormGroup;\r\n  tokenParam: TokenParams;\r\n\r\n  ngOnInit() {\r\n    this.authStatusSub = this.authService\r\n      .getAuthStatusListener()\r\n      .subscribe((authStatus) => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n  constructor(\r\n    private actRoute: ActivatedRoute,   \r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private ngZone: NgZone,\r\n    public aspNetUsersService: AspNetUsersService\r\n  ) {\r\n    this.form = this.fb.group({\r\n      username: [\"\", Validators.required],\r\n      password: [\"\", Validators.required],\r\n    });\r\n  }\r\n\r\n  login() {\r\n    const val = this.form.value;\r\n    if (this.form.invalid) {\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    this.authService.login(val.username, val.password);\r\n    \r\n\r\n /*    setTimeout(() => {\r\n      this.refresh();\r\n    },3000);  */\r\n  }\r\n\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n}\r\n","<div class=\"container wrapper wrapper2\">\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n  <div class=\"row\">\r\n    <form [formGroup]=\"form\">\r\n      <br />\r\n      <fieldset>\r\n        <br />\r\n        <legend>Autenticação de utilizador</legend>\r\n        <div class=\"form-field\">\r\n          <td>Email</td>\r\n          <input name=\"username\" formControlName=\"username\"/>\r\n        </div>\r\n        <div class=\"form-field\">\r\n          <td>Password</td>\r\n          <input name=\"password\" formControlName=\"password\" type=\"password\" />\r\n        </div>\r\n      </fieldset>\r\n      <br />\r\n      <div class=\"form-buttons\">\r\n        <button class=\"btn btn-primary\" (click)=\"login()\">Login</button>\r\n        &nbsp; &nbsp;\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from \"@angular/router\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { UserRoles } from \"./../shared/Constantes/userRoles\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { AlertaPermissaoComponent } from \"../components/alerta-permissao/alerta-permissao.component\";\r\nimport { MatDialog } from \"@angular/material/dialog\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  /*\r\n      Admin = 1,\r\n    Utilizador = 2, funcionario de manutencao\r\n    Convidado = 3, apenas acesso para listar equipamentos e pedir assistencia\r\n  */\r\n\r\n  //mudar o nome: UserRoleMapping\r\n  dict = [\r\n    [\"list-permissao\", UserRoles.Admin],\r\n    [\"edit-permissao\", UserRoles.Admin],\r\n    [\"edit-permissao/:id\", UserRoles.Admin],\r\n    [\"asp-net-user-list\", UserRoles.Admin],\r\n    [\"asp-net-user-edit/:id\", UserRoles.Admin],\r\n    [\"asp-net-user-edit\", UserRoles.Admin],\r\n    [\"add-register\", UserRoles.Admin],\r\n    [\"pedido-mcurativa-list-teste\", UserRoles.Admin],\r\n    [\"pedido-mcurativa-list-teste\", UserRoles.Convidado],\r\n    [\"pedido-mcurativa-list-teste\", UserRoles.Utilizador],\r\n    [\"pedido-mcurativa-add\", UserRoles.Admin],\r\n    [\"pedido-mcurativa-add\", UserRoles.Convidado],\r\n    [\"pedido-mcurativa-add\", UserRoles.Utilizador],\r\n    [\"intervencao-curativa-add\", UserRoles.Admin],\r\n    [\"intervencao-curativa-add\", UserRoles.Utilizador],\r\n    [\"intervencao-preventiva-add\", UserRoles.Admin],\r\n    [\"intervencao-preventiva-add\", UserRoles.Utilizador],\r\n    [\"pedido-mpreventiva-add\", UserRoles.Admin],\r\n    [\"pedido-mpreventiva-add\", UserRoles.Utilizador],\r\n    [\"pedido-mpreventiva-add\", UserRoles.Convidado],\r\n    [\"pedido-preventiva-list\", UserRoles.Admin],\r\n    [\"pedido-preventiva-list\", UserRoles.Utilizador],\r\n    [\"pedido-preventiva-list\", UserRoles.Convidado],\r\n    [\"grupomaquina-list\", UserRoles.Admin],\r\n    [\"grupomaquina-list\", UserRoles.Utilizador],\r\n    [\"grupomaquina-list\", UserRoles.Convidado],\r\n    [\"edit-equip/:id\", UserRoles.Admin],\r\n    [\"edit-equip\", UserRoles.Admin],\r\n    [\"equip-list\", UserRoles.Admin],\r\n    [\"equip-list\", UserRoles.Convidado],\r\n    [\"equip-list\", UserRoles.Utilizador],\r\n    [\"add-equip\", UserRoles.Admin],\r\n    [\"manutencao-preventiva-programada\", UserRoles.Admin],\r\n    [\"manutencao-prog-home-page\", UserRoles.Utilizador],\r\n    [\"manutencao-prog-home-page\", UserRoles.Admin],\r\n    [\"alerta-permissao\", UserRoles.Admin],\r\n    [\"alerta-permissao\", UserRoles.Utilizador],\r\n    [\"alerta-permissao\", UserRoles.Convidado],\r\n  ];\r\n\r\n  //http://localhost:4200/edit-equip/195\r\n\r\n  /*\r\n   path: \"my-login\"\r\n  */\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    public dialog: MatDialog\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): boolean {\r\n    var currentUserRole = this.authService.getCurrentUserRoleId();\r\n    var hasAccess = false;\r\n\r\n    console.log(route.url[0].path);\r\n    this.dict.forEach(function (value) {\r\n      if (value[0] === route.url[0].path) {\r\n        //value[1] == currentUserRole\r\n        if (value[1] == localStorage.getItem(\"roleId\")) {\r\n          hasAccess = true;\r\n        }\r\n      }\r\n    });\r\n\r\n    const isAuth = this.authService.getIsAuth();\r\n    if (!isAuth) {\r\n      this.router.navigate([\"/my-login\"]);\r\n    }\r\n    if (!hasAccess) {\r\n      this.dialog.open(AlertaPermissaoComponent);\r\n    }\r\n    return isAuth && hasAccess;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpClientModule,\r\n  HttpClient,\r\n  HttpHeaders,\r\n} from \"@angular/common/http\";\r\nimport { TokenParams } from \"./TokenParamsModel\";\r\n\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\nimport { Subject } from \"rxjs\";\r\n\r\n// Http Headers\r\n/*   httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n */\r\n\r\nimport { Router } from \"@angular/router\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { UserRoles } from '../shared/Constantes/userRoles';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  private isAuthenticated = false;\r\n  private token: string;\r\n  private tokenTimer: any;\r\n  private username: string;\r\n  private roleId: UserRoles;\r\n  private authStatusListener = new Subject<boolean>();\r\n\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n  private TokenAPI = \"http://localhost:44334/Token\";\r\n\r\n  //private TokenAPI = \"http://192.168.0.49:8005/Token\";\r\n  \r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  getUserName() {\r\n    return this.username;\r\n  }\r\n\r\n  getAuthStatusListener() {\r\n    return this.authStatusListener.asObservable();\r\n  }\r\n\r\n  //Método de login\r\n  login(Username: string, Password: string) {\r\n\r\n    let headers = new HttpHeaders({\r\n      \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n    });\r\n    let options = { headers: headers };\r\n    var data =\r\n      \"grant_type=password&username=\" + Username + \"&password=\" + Password;\r\n\r\n    return this.http.post<TokenParams>(this.TokenAPI, data, options).subscribe(\r\n      (response) => {\r\n        console.log(response);\r\n        const token = response.access_token;\r\n\r\n        if (token) {\r\n          const expiresInDuration = response.expires_in;\r\n          this.setAuthTimer(expiresInDuration);\r\n          this.authStatusListener.next(true);\r\n          this.isAuthenticated = true;\r\n          const now = new Date();\r\n          const expirationDate = new Date(\r\n            now.getTime() + expiresInDuration * 1000\r\n          );\r\n          console.log(\"expirationDate\", expirationDate);\r\n          // localStorage.setItem(\"token\", response.access_token);\r\n          this.saveAuthData(\r\n            response.access_token,\r\n            expirationDate,\r\n            response.userName,\r\n            response.roleId \r\n          );\r\n          this.router.navigate([\"/\"]);\r\n          setTimeout(() => {\r\n            this.refresh();\r\n          },1000);  \r\n        \r\n        }\r\n      },\r\n      (err) => {\r\n        this.authStatusListener.next(false);\r\n        console.log(err.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  logout() {\r\n    this.isAuthenticated = false;\r\n    this.authStatusListener.next(false);\r\n    clearTimeout(this.tokenTimer);\r\n    this.clearAuthData();\r\n    console.log(\"Passei no logout\");\r\n  }\r\n\r\n  private setAuthTimer(duration: number) {\r\n    console.log(\"Setting timer: \" + duration);\r\n    this.tokenTimer = setTimeout(() => {\r\n      //this.logout();\r\n    }, duration * 1000);\r\n  }\r\n\r\n  autoAuthUser() {\r\n    const authInformation = this.getAuthData();\r\n    if (!authInformation) {\r\n      return;\r\n    }\r\n    const now = new Date();\r\n    const expiresIn = authInformation.expirationDate.getTime() - now.getTime();\r\n    if (expiresIn > 0) {\r\n      this.token = authInformation.token;\r\n      this.isAuthenticated = true;\r\n      this.username = authInformation.username;\r\n      this.roleId = UserRoles[authInformation.roleId];\r\n      this.setAuthTimer(expiresIn / 1000);\r\n      this.authStatusListener.next(true);\r\n    }\r\n  }\r\n\r\n  private getAuthData() {\r\n    const token = localStorage.getItem(\"token\");\r\n    const expirationDate = localStorage.getItem(\"expiration\");\r\n    const username = localStorage.getItem(\"username\");\r\n    const roleId = localStorage.getItem(\"roleId\");\r\n    if (!token || !expirationDate) {\r\n      return;\r\n    }\r\n    return {\r\n      token: token,\r\n      expirationDate: new Date(expirationDate),\r\n      username: username,\r\n      roleId: roleId\r\n    };\r\n  }\r\n\r\n  private saveAuthData(token: string, expirationDate: Date, userName: string, roleId:string) {\r\n    localStorage.setItem(\"token\", token);\r\n    localStorage.setItem(\"expiration\", expirationDate.toISOString());\r\n    localStorage.setItem(\"username\", userName);\r\n    localStorage.setItem(\"roleId\", roleId);\r\n  }\r\n\r\n  private clearAuthData() {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expiration\");\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"roleId\");\r\n  }\r\n\r\n  getIsAuth() {\r\n    return this.isAuthenticated;\r\n  }\r\n\r\n  getCurrentUserRoleId()\r\n  {\r\n    return this.roleId;\r\n\r\n  }\r\n\r\n  //Refresh à janela.\r\n  refresh(): void {\r\n    window.location.reload();\r\n  }\r\n\r\n  //erros de pedidos ao servidor.\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { NgModule, Component } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { AuthGuard } from \"../app/TokenAuth/auth.guard\";\r\n\r\nimport { EquipListComponent } from \"./components/equipamento-list/equip-list.component\";\r\nimport { GrupoMaquinaListComponent } from \"./components/grupomaquina-list/grupomaquina-list.component\";\r\nimport { EquipAddComponent } from \"./components/equipamento-add/equip-add.component\";\r\nimport { EquipEditComponent } from \"./components/equipamento-edit/equip-edit.component\";\r\nimport { RegisterComponent } from \"./components/register-add/register-add.component\";\r\nimport { LoginComponent } from \"./Login-logout/logincomponent\";\r\nimport { AspNetUserListComponent } from \"./components/asp-net-user-list/asp-net-user-list.component\";\r\nimport { AspNetUserEditComponent } from \"./components/asp-net-user-edit/asp-net-user-edit.component\";\r\nimport { PedidoMcurativaListTesteComponent } from \"./components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component\";\r\nimport { PedidoMcurativaAddComponent } from \"./components/pedido-mcurativa-add/pedido-mcurativa-add.component\";\r\nimport { IntervencaoCurativaAddComponent } from \"./components/intervencao-curativa-add/intervencao-curativa-add.component\";\r\nimport { PedidoPreventivaListComponent } from \"./components/pedido-preventiva-list/pedido-preventiva-list.component\";\r\nimport { PedidoMpreventivaAddComponent } from \"./components/pedido-mpreventiva-add/pedido-mpreventiva-add.component\";\r\nimport { IntervencaoPreventivaAddComponent } from \"./components/intervencao-preventiva-add/intervencao-preventiva-add.component\";\r\nimport { ManutencaoPreventivaProgramadaComponent} from \"./components/manutencao-preventiva-programada/manutencao-preventiva-programada.component\";\r\nimport {ManutencaoProgHomePageComponent } from \"./components/manutencao-prog-home-page/manutencao-prog-home-page.component\";\r\nimport {ListPermissaoComponent} from \"./components/list-permissao/list-permissao.component\";\r\nimport {EditPermissaoComponent } from \"./components/edit-permissao/edit-permissao.component\";\r\nimport{AlertaPermissaoComponent} from \"./components/alerta-permissao/alerta-permissao.component\";\r\n\r\nimport { audit } from 'rxjs/operators';\r\nconst routes: Routes = [\r\n  {\r\n    path: \"edit-equip/:id\",\r\n    component: EquipEditComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n\r\n  {\r\n    path: \"equip-list\",\r\n    component: EquipListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: \"add-equip\", component: EquipAddComponent, canActivate: [AuthGuard] },\r\n  {\r\n    path: \"grupomaquina-list\",\r\n    component: GrupoMaquinaListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"add-register\",\r\n    component: RegisterComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: \"my-login\", component: LoginComponent },\r\n  {\r\n    path: \"asp-net-user-list\",\r\n    component: AspNetUserListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"asp-net-user-edit/:id\",\r\n    component: AspNetUserEditComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-mcurativa-list-teste\",\r\n    component: PedidoMcurativaListTesteComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-mcurativa-add\",\r\n    component: PedidoMcurativaAddComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"intervencao-curativa-add\",\r\n    component: IntervencaoCurativaAddComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"intervencao-preventiva-add\",\r\n    component: IntervencaoPreventivaAddComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-mpreventiva-add\",\r\n    component : PedidoMpreventivaAddComponent,\r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path: \"pedido-preventiva-list\",\r\n    component: PedidoPreventivaListComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path:\"manutencao-preventiva-programada\", \r\n    component: ManutencaoPreventivaProgramadaComponent,\r\n    canActivate:[AuthGuard],\r\n  }, \r\n  {\r\n    path:\"manutencao-prog-home-page\",\r\n    component: ManutencaoProgHomePageComponent,\r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path:\"list-permissao\",\r\n    component:ListPermissaoComponent, \r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path:\"edit-permissao/:id\",\r\n    component: EditPermissaoComponent,\r\n    canActivate:[AuthGuard],\r\n  },\r\n  {\r\n    path:\"alerta-permissao\", component: AlertaPermissaoComponent,\r\n    canActivate:[AuthGuard],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\n\nimport {AuthService} from '../app/TokenAuth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n\nexport class AppComponent implements OnInit {\n  constructor(\n    private authService: AuthService,\n    // private errorService: ErrorService\n  ) {}\n\n  title = 'GestaoManutencao';\n\n\n  ngOnInit() {\n    this.authService.autoAuthUser();\n    // this.errorSub = this.errorService.getErrorListener().subscribe(\n    //   message => this.hasError = message !== null\n    // );\n  }\n}\n","<app-header></app-header>\n<main>\n  \n  <router-outlet></router-outlet>   \n  \n  \n</main>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormBuilder, FormsModule, FormGroup } from \"@angular/forms\";\nimport { AppRoutingModule } from \"./app-routing.model\";\nimport { AppComponent } from \"./app.component\";\n\n/* Http client module */\nimport { HttpClientModule } from \"@angular/common/http\";\n\n/* Service */\n\n\n/* Forms module */\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatExpansionModule } from \"@angular/material/expansion\";\nimport { MatToolbarModule } from \"@angular/material/toolbar\";\nimport { MatDialogModule } from \"@angular/material/dialog\";\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from \"@angular/material/form-field\";\nimport { MatProgressSpinnerModule } from \"@angular/material/progress-spinner\";\nimport {\n  NgxMatDatetimePickerModule,\n  NgxMatTimepickerModule,\n  NgxMatNativeDateModule,\n} from \"@angular-material-components/datetime-picker\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\nimport {MatMenuModule} from '@angular/material/menu';\nimport { MatDatepickerModule } from \"@angular/material/datepicker\";\nimport {  MatListModule } from  '@angular/material/list';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\n\n/* Components */\nimport { EquipListComponent } from \"./components/equipamento-list/equip-list.component\";\nimport { EquipAddComponent } from \"./components/equipamento-add/equip-add.component\";\nimport { GrupoMaquinaListComponent } from \"./components/grupomaquina-list/grupomaquina-list.component\";\nimport { EquipEditComponent } from \"./components/equipamento-edit/equip-edit.component\";\nimport { RegisterComponent } from \"./components/register-add/register-add.component\";\nimport { AuthService } from \"./TokenAuth/auth.service\";\nimport { LoginComponent } from \"./Login-logout/logincomponent\";\nimport { AspNetUserListComponent } from \"./components/asp-net-user-list/asp-net-user-list.component\";\nimport { AspNetUserEditComponent } from \"./components/asp-net-user-edit/asp-net-user-edit.component\";\nimport { PedidoMcurativaListTesteComponent } from \"./components/pedido-mcurativa-list/pedido-mcurativa-list-teste.component\";\nimport { PedidoMcurativaAddComponent } from \"./components/pedido-mcurativa-add/pedido-mcurativa-add.component\";\nimport { IntervencaoCurativaAddComponent } from \"./components/intervencao-curativa-add/intervencao-curativa-add.component\";\nimport { PedidoPreventivaListComponent } from './components/pedido-preventiva-list/pedido-preventiva-list.component';\nimport { PedidoMpreventivaAddComponent } from './components/pedido-mpreventiva-add/pedido-mpreventiva-add.component';\nimport { EquipamentoService } from \"./shared/equipamento/equipamento.service\";\nimport { GrupoMaquinaService } from \"./shared/gruposmaquina/grupomaquina.service\";\nimport { AspNetUsersService } from \"./shared/aspNetUsers/aspNetUsers.service\";\nimport { HeaderComponent } from \"./components/header/header.component\";\nimport { IntervencaoPreventivaAddComponent } from './components/intervencao-preventiva-add/intervencao-preventiva-add.component';\nimport { ManutencaoPreventivaProgramadaComponent } from './components/manutencao-preventiva-programada/manutencao-preventiva-programada.component';\nimport { ManutencaoProgHomePageComponent } from './components/manutencao-prog-home-page/manutencao-prog-home-page.component';\nimport { IntervencaoAddUserHomePageComponent } from './components/intervencao-add-user-home-page/intervencao-add-user-home-page.component';\nimport { EditPermissaoComponent } from './components/edit-permissao/edit-permissao.component';\nimport { ListPermissaoComponent } from './components/list-permissao/list-permissao.component';\nimport { AlertaPermissaoComponent } from './components/alerta-permissao/alerta-permissao.component';\n\n//import { AspNetUsersLoadComponent } from './asp-net-users-load/asp-net-users-load.component';\n//import { TipoUtilizadorListComponent } from './components/tipo-utilizador-list/tipo-utilizador-list.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EquipListComponent,\n    EquipAddComponent,\n    GrupoMaquinaListComponent,\n    EquipEditComponent,\n    RegisterComponent,\n    LoginComponent,\n    AspNetUserListComponent,\n    AspNetUserEditComponent,\n    PedidoMcurativaListTesteComponent,\n    PedidoMcurativaAddComponent,\n    IntervencaoCurativaAddComponent,\n    HeaderComponent,\n    PedidoPreventivaListComponent,\n    PedidoMpreventivaAddComponent,\n    IntervencaoPreventivaAddComponent,\n    ManutencaoPreventivaProgramadaComponent,\n    ManutencaoProgHomePageComponent,\n    IntervencaoAddUserHomePageComponent,\n    EditPermissaoComponent,\n    ListPermissaoComponent,\n    AlertaPermissaoComponent,\n \n  ],\n  entryComponents: [IntervencaoCurativaAddComponent, IntervencaoPreventivaAddComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatToolbarModule,\n    MatDialogModule,\n    MatSelectModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatProgressSpinnerModule,\n    NgxMatDatetimePickerModule,\n    NgxMatTimepickerModule,\n    NgxMatNativeDateModule,\n    MatIconModule,\n    MatPaginatorModule,\n    MatToolbarModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule, \n    MatMenuModule, \n    MatSidenavModule\n  ],\n\n  providers: [AuthService] /*Aqui ficar AuthService ou RegisterService */,\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","\nimport { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@Component({\n  selector: 'app-alerta-permissao',\n  templateUrl: './alerta-permissao.component.html',\n  styleUrls: ['./alerta-permissao.component.css']\n})\nexport class AlertaPermissaoComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n  ) {\n    \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h4>Sem permissão para aceder a esta página</h4>\n<br>\n<p style=\"text-align:center\">Caso o problema persista, contacte o administrador</p>\n\n<button \nmat-button\nclass=\"close-icon\"\n[mat-dialog-close]=\"true\"\n\n>\nFechar\n</button>","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { TipoUtilizadorService } from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { AspNetUsersService } from '../../shared/AspNetUsers/aspNetUsers.service';\n\n\n@Component({\n  selector: 'app-asp-net-user-edit',\n  templateUrl: './asp-net-user-edit.component.html',\n  styleUrls: ['./asp-net-user-edit.component.css']\n})\nexport class AspNetUserEditComponent implements OnInit {\n\n  updateUtilizadorForm: FormGroup;\n  tipoUtilizadorList: any = [];\n\n  ngOnInit(){\n    this.updateForm();\n    this.loadTiposUtilizador();\n  }\n  \n  constructor(\n     private actRoute: ActivatedRoute,    \n     public tiposUtilizadorService: TipoUtilizadorService,\n     public aspNetUsersService: AspNetUsersService,\n     public fb: FormBuilder,\n     private ngZone: NgZone,\n     private router: Router\n  )\n   { \n\n    var id = this.actRoute.snapshot.paramMap.get('id');\n    this.aspNetUsersService.GetOneUser(id).subscribe((data) => {\n      this.updateUtilizadorForm = this.fb.group({\n        UserName: [data.UserName],\n        Nome: [data.Nome],\n        NumeroUtilizador: [data.NumeroUtilizador],\n        IDTipo: [data.IDTipo],       \n      })\n      console.log(data);\n    })\n  }\n\n  updateForm(){\n    this.updateUtilizadorForm = this.fb.group({\n    UserName: [''],\n    Nome : [''],\n    NumeroUtilizador : [0],\n    IDTipo : [0]\n    })   \n \n  }\n\n  loadTiposUtilizador() {\n    return this.tiposUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n    this.tipoUtilizadorList = data;})\n}\n\nsubmitForm(){ \n  var id = this.actRoute.snapshot.paramMap.get('id');\n  this.aspNetUsersService.UpdateAspNetUser(id, this.updateUtilizadorForm.value).subscribe(res => {\n    this.ngZone.run(() => this.router.navigateByUrl('/asp-net-user-list'))\n  })\n}\n\n\n}\n\n\n  \n\n\n\n\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <h3>Alterar ficha de utilizador</h3>\n            <form [formGroup]=\"updateUtilizadorForm\" (ngSubmit)=\"submitForm()\" novalidate>\n                <label>Email</label>\n                <div class=\"form-group\">         \n                    <input type=\"text\" formControlName=\"UserName\" class=\"form-control\" disabled>\n                </div>\n                <div class=\"form-group\">\n                    <label>Nome</label>\n                    <input type=\"text\" formControlName=\"Nome\" class=\"form-control\">\n                </div>\n\n                <label>Tipo de utilizador</label>\n                <br>\n                <select class=\"form-group\" formControlName=\"IDTipo\">\n                    <option *ngFor=\"let item of tipoUtilizadorList\" [value]=\"item.IDTipo\">{{item.TipoDescr}}</option>                  \n                </select>\n                \n                <div class=\"form-group\">\n                    <label>Nº Utilizador</label>\n                    <input type=\"text\" formControlName=\"NumeroUtilizador\" class=\"form-control\" >\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n            </form>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n//import { UtilizadorService } from '../../shared/utilizador/utilizador.service';\nimport { TipoUtilizadorService } from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { AspNetUsersService } from '../../shared/aspNetUsers/aspNetUsers.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n \n\n@Component({\n  selector: 'app-asp-net-user-list',\n  templateUrl: './asp-net-user-list.component.html',\n  styleUrls: ['./asp-net-user-list.component.css']\n})\nexport class AspNetUserListComponent implements OnInit {\n\n  aspNetUsersList: any = [];\n  tipoUtilizadorList: any = [];\n\n  constructor(\n    private aspNetUserService : AspNetUsersService,\n    private tipoUtilizadorService : TipoUtilizadorService,\n    private actRoute: ActivatedRoute\n  ) { }\n\n\n  ngOnInit() {\n    this.loadAspNetUsers();\n    this.loadTiposUtilizador();\n  }\n\n  //load utilizadores da DB \n  loadAspNetUsers() {\n    return this.aspNetUserService.GetAspNetUsers().subscribe((data: {}) => {\n      this.aspNetUsersList = data;\n    })\n  }\n\n  //load tipos de utilizador da DB\n  loadTiposUtilizador() {\n    return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n    this.tipoUtilizadorList = data;\n   \n })\n\n}\n\n\n\n}\n\n\n\n\n\n","<div class=\"container wrapper\">\n  <div class=\"row\">\n    <!-- Utilizadores table -->\n    <br />\n    \n    \n    <div class=\"col-md-12\">\n      <div class=\"inner\">\n        <br />\n        <h3>Resumo dos utilizadores</h3>\n       \n        <button type=\"button\"  class=\"btn btn-success btn-sm move-right\"  style=\"float: left\"\n        [routerLink]=\"['/list-permissao']\">Gerir permissões</button>  \n\n          <button\n            type=\"button\"\n            class=\"btn btn-success btn-sm move-right\"\n            style=\"float:right;\"\n            [routerLink]=\"['/add-register']\"\n          >\n            Novo registo\n          </button>\n\n        <br>\n        <br />\n        <table class=\"table table-bordered\" style=\"text-align:center\">\n          <thead>\n            <tr>\n              \n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Nome</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\" width=\"165\">Nº de funcionário</th>\n              <th scope=\"col\">Cargo</th>\n\n            </tr>\n          </thead>\n          <tbody>\n            <tr></tr>\n            <tr *ngFor=\"let utilizador of aspNetUsersList; let i = index\">\n              <th scope=\"row\">{{i+1}}</th>\n              <td>{{ utilizador.Nome }}</td>\n              <td>{{ utilizador.UserName }}</td>\n              <td width=\"165\">{{ utilizador.NumeroUtilizador }}</td>\n              <ng-container *ngFor=\"let tu of tipoUtilizadorList\">\n                <td *ngIf=\"tu.IDTipo == utilizador.IDTipo\">\n                  {{ tu.TipoDescr }}\n                </td>\n              </ng-container>\n              <td width=\"30\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-success btn-sm move-right\"\n                  [routerLink]=\"['/asp-net-user-edit/', utilizador.UserName]\"\n                >\n                  Editar\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      \n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AspNetRolesService } from '../../shared/aspNetRoles/aspNetRoles.service';\n\n\n@Component({\n  selector: 'app-edit-permissao',\n  templateUrl: './edit-permissao.component.html',\n  styleUrls: ['./edit-permissao.component.css']\n})\nexport class EditPermissaoComponent implements OnInit {\n\n  updatePermissaoForm: FormGroup;\n\n  arrayPermissao  = [\n    {Name: \"Admin\" },\n    {Name: \"Utilizador\" },\n    {Name:  \"Convidado\"}\n    ]\n\n    roleName = \"\";\n    userName = \"\";\n    oldRoleName =\"\";\n  \n\n  ngOnInit(){\n    this.updateForm();\n  }\n  \n  constructor(\n     private actRoute: ActivatedRoute,    \n     public aspNetRolesService: AspNetRolesService,\n     public fb: FormBuilder,\n     private ngZone: NgZone,\n     private router: Router\n  )\n   { \n\n    console.log(\"edit component antes de chamar o getOneUser\");\n    var id = this.actRoute.snapshot.paramMap.get('id');\n    this.aspNetRolesService.GetOneUser(id).subscribe((data) => {\n      this.updatePermissaoForm = this.fb.group({\n        Email: [data.Email],\n        Name:[data.Name],\n        Nome:[data.Nome],    \n        \n        \n      })\n      this.userName = data.Email;\n      this.oldRoleName = data.Name;\n      this.roleName = data.Name;\n      console.log(data);\n    })\n  }\n\n  updateForm(){\n    this.updatePermissaoForm = this.fb.group({\n    Email: [''],\n    Name : [''],\n    Nome : ['']\n    })   \n \n  }\n\n\nsubmitForm(){ \n/* var id = this.actRoute.snapshot.paramMap.get('Email');\n  var rolename = this.actRoute.snapshot.paramMap.get('Name');\n  console.log(id, \"id ---, \", rolename, \" role\" ); */\n  console.log(\"UsernameNGMODEL: \", this.userName); \n  console.log(\"RoleNameNGMODEL: \", this.roleName); \n\n  this.aspNetRolesService.UpdateAspNetRole(this.userName, this.roleName, this.oldRoleName, this.updatePermissaoForm.value).subscribe(res => {\n    this.ngZone.run(() => this.router.navigateByUrl('/list-permissao'))\n  }) \n}\n\n\n}\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <br />\n            <h3>Alterar permissão do utilizador</h3>\n            <form [formGroup]=\"updatePermissaoForm\" (ngSubmit)=\"submitForm()\" novalidate>\n                <label>Nome</label>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"Nome\" class=\"form-control\" disabled />\n                </div>\n                <div class=\"form-group\">\n                    <label>Email</label>\n                    <input type=\"text\" [(ngModel)]=\"userName\" formControlName=\"Email\" class=\"form-control\" disabled />\n                </div>\n\n                <label>Tipo de utilizador</label>\n                <br />\n                <select class=\"form-group\" [(ngModel)]=\"roleName\" formControlName=\"Name\">\n                    <option *ngFor=\"let item of arrayPermissao\" [value]=\"item.Name\">{{\n            item.Name\n          }}</option>\n                </select>\n\n                <br />\n                <br />\n\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { EquipamentoService } from '../../shared/equipamento/equipamento.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-equip',\r\n  templateUrl: './equip-add.component.html',\r\n  styleUrls: ['./equip-add.component.css']\r\n})\r\n\r\nexport class EquipAddComponent implements OnInit {\r\n  equipForm: FormGroup;\r\n  EquipArr: any = [];\r\n  gruposMaquinaList: any = [];\r\n\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.addEquipamento(),\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private ngZone: NgZone,\r\n    private router: Router,\r\n    public equipamentoService: EquipamentoService, \r\n    public grupoMaquinaService: GrupoMaquinaService,\r\n    private actRoute: ActivatedRoute\r\n  ){ }\r\n\r\n  addEquipamento() {\r\n    this.equipForm = this.fb.group({\r\n      IDGrupoM : [0],\r\n      NumeroSerie : [''],\r\n      Descr: [''],\r\n      Marca: [''],\r\n      Tipo:[''],\r\n      DataCompra: [''],\r\n      CodigoInterno: [''],\r\n      EstadoEqui: [0],\r\n      DataFimAtividade:['']   \r\n    })\r\n  }\r\n\r\n  loadGrupoMaquinas() {\r\n    return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n      this.gruposMaquinaList = data;\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    this.equipamentoService.CreateEquip(this.equipForm.value).subscribe(res => {\r\n      console.log('Equipamento adicionado!')\r\n      this.ngZone.run(() => this.router.navigateByUrl('/equip-list'))\r\n    });\r\n  }\r\n}","<div class=\"container wrapper wrapper2\">\r\n    <div class=\"row\">\r\n\r\n        <!-- Form -->\r\n        <div class=\"col-md-12\">\r\n            <br>\r\n            <h4>Adicionar equipamento</h4>\r\n            <br>\r\n            <div class=\"td\">Grupo de Máquina</div>\r\n            <form [formGroup]=\"equipForm\" (ngSubmit)=\"submitForm()\" novalidate>   \r\n                <select class=\"form-group\" formControlName=\"IDGrupoM\">\r\n                    <label>Grupo de máquina</label> \r\n                    <option value=\"0\">Selecione</option>   \r\n                    <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\" style=\"width:500px\">{{item.Descr}}</option>                  \r\n                </select>\r\n                <div class=\"form-group\">\r\n                    <label>Número série</label>\r\n                    <input type=\"text\" formControlName=\"NumeroSerie\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Descrição</label>\r\n                    <input type=\"text\" formControlName=\"Descr\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Marca</label>\r\n                    <input type=\"text\" formControlName=\"Marca\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Tipo</label>\r\n                    <input type=\"text\" formControlName=\"Tipo\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Data de compra</label>\r\n                    <input type=\"Date\" formControlName=\"DataCompra\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Codigo interno</label>\r\n                    <input type=\"text\" formControlName=\"CodigoInterno\" class=\"form-control\" style=\"width:500px\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Estado do equipamento</label>\r\n                    <input type=\"text\" formControlName=\"EstadoEqui\" class=\"form-control\" style=\"width:50px\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\r\n                <br>\r\n                <br>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { EquipamentoService } from '../../shared/equipamento/equipamento.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-equip',\r\n  templateUrl: './equip-edit.component.html',\r\n  styleUrls: ['./equip-edit.component.css']\r\n})\r\n\r\nexport class EquipEditComponent implements OnInit {\r\n\r\n  \r\n  gruposMaquinaList: any = [];\r\n  updateEquipForm: FormGroup;\r\n  \r\n  ngOnInit() {\r\n    this.updateForm();\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    private actRoute: ActivatedRoute,    \r\n    public equipService: EquipamentoService,\r\n    public fb: FormBuilder,\r\n    private ngZone: NgZone,\r\n    private router: Router, \r\n    public grupoMaquinaService : GrupoMaquinaService\r\n  ) { \r\n    var id = this.actRoute.snapshot.paramMap.get('id');\r\n    this.equipService.GetOneEquip(id).subscribe((data) => {\r\n      this.updateEquipForm = this.fb.group({\r\n        IDEquipamento: [data.IDEquipamento],\r\n        IDGrupoM: [data.IDGrupoM],\r\n        NumeroSerie: [data.NumeroSerie],\r\n        Descr: [data.Descr],\r\n        Marca: [data.Marca],\r\n        Tipo: [data.Tipo],\r\n        DataCompra: [data.DataCompra],\r\n        CodigoInterno: [data.CodigoInterno],\r\n        EstadoEqui: [data.EstadoEqui],\r\n        DataFimAtividade: [data.DataFimAtividade]\r\n      })\r\n    })\r\n  }\r\n\r\n  updateForm(){\r\n    this.updateEquipForm = this.fb.group({\r\n    IDEquipamento: [0],\r\n    IDGrupoM : [0],\r\n    NumeroSerie : [''],\r\n    Descr: [''],\r\n    Marca: [''],\r\n    Tipo: [''],\r\n    DataCompra: [Date],\r\n    CodigoInterno: [''],\r\n    EstadoEqui: [0],\r\n    DataFimAtividade: [Date]\r\n    })    \r\n  }\r\n\r\n  loadGrupoMaquinas() {\r\n    return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n      this.gruposMaquinaList = data;\r\n    })\r\n  }\r\n\r\n  submitForm(){ \r\n    var id = this.actRoute.snapshot.paramMap.get('id');\r\n    this.equipService.UpdateEquipamento(id, this.updateEquipForm.value).subscribe(res => {\r\n      this.ngZone.run(() => this.router.navigateByUrl('/equip-list'))\r\n    })\r\n  }\r\n}","<div class=\"container wrapper wrapper2\">\r\n    <div class=\"row\">\r\n\r\n        <!-- Form -->\r\n        <div class=\"col-md-12\">\r\n            <br>\r\n            <h3>Alterar informação de equipamento</h3>\r\n            <form [formGroup]=\"updateEquipForm\" (ngSubmit)=\"submitForm()\" novalidate>\r\n                <div class=\"form-group\">    \r\n                    <input type=\"hidden\" formControlName=\"IDEquipamento\" class=\"form-control\">\r\n                </div>\r\n                <label>Grupo de máquina</label>\r\n                <br>\r\n                <select class=\"form-group\" formControlName=\"IDGrupoM\">\r\n                   \r\n                    <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{item.Descr}}</option>                  \r\n                </select>\r\n                <div class=\"form-group\">\r\n                    <label>NumeroSerie</label>\r\n                    <input type=\"text\" formControlName=\"NumeroSerie\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Descrição</label>\r\n                    <input type=\"text\" formControlName=\"Descr\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Marca</label>\r\n                    <input type=\"text\" formControlName=\"Marca\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Tipo</label>\r\n                    <input type=\"text\" formControlName=\"Tipo\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Data compra</label>\r\n                    <input type=\"date\" formControlName=\"DataCompra\" class=\"form-control\">\r\n                </div><div class=\"form-group\">\r\n                    <label>Codigo interno</label>\r\n                    <input type=\"text\" formControlName=\"CodigoInterno\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Estado equipamento</label>\r\n                    <input type=\"text\" formControlName=\"EstadoEqui\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Data fim atividade</label>\r\n                    <input type=\"date\" formControlName=\"DataFimAtividade\" class=\"form-control\">\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Update</button>\r\n            </form>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, EventEmitter, Input } from '@angular/core';\r\nimport { EquipamentoService } from '../../shared/equipamento/equipamento.service';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\nimport { Equipamento } from 'src/app/shared/equipamento/equipamentomodel';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n \r\n\r\n\r\n@Component({\r\n  selector: 'app-equip-list',\r\n  templateUrl: './equip-list.component.html',\r\n  styleUrls: ['./equip-list.component.css']\r\n})\r\nexport class EquipListComponent implements OnInit {\r\n\r\n  \r\n  EquipList : Equipamento[] = []; //criar um array de objecto equipamentos.\r\n  //EquipList: any = [];\r\n  gruposMaquinaList: any = [];\r\n\r\n  equipToPedidos(){\r\n    this.EquipList;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadEquip();\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    public equipamentoService: EquipamentoService,\r\n    public grupoMaquinaService: GrupoMaquinaService,\r\n    private actRoute: ActivatedRoute\r\n  ){ }\r\n\r\n   // lista equipamentos \r\n   loadEquip() {\r\n    return this.equipamentoService.GetEquipamentos().subscribe((data: Equipamento[]) => {\r\n      this.EquipList = data;\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  //load dos grupos de máquinas.\r\n  loadGrupoMaquinas() {\r\n       return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n       this.gruposMaquinaList = data;\r\n      \r\n    })\r\n  }\r\n}","\r\n<div class=\"container wrapper\">\r\n    <div class=\"row\">\r\n\r\n        \r\n        <!-- Equipamentos table -->\r\n        <div class=\"col-md-12\">\r\n\r\n            <div class=\"inner\">\r\n                <div id=\"main\">\r\n                    <br>\r\n                    <h3>Equipamentos</h3> <button type=\"button\" class=\"btn btn-success btn-sm move-right\" style=\"position: absolute; right: 0;\"\r\n                    [routerLink]=\"['/add-equip']\">Novo equipamento</button>\r\n                    \r\n                  </div> \r\n                  <br>\r\n                <table class=\"table table-bordered\" style=\"text-align:center;\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">#</th>\r\n                            <th scope=\"col\">Grupo de máquina</th>\r\n                            <th scope=\"col\">Codigo interno</th>\r\n                            <th scope=\"col\">Descrição</th>\r\n                            <th scope=\"col\">Marca</th>\r\n                            <th scope=\"col\">Número de Série</th>\r\n                            \r\n                            <th scope=\"col\">Tipo</th>\r\n                            <th scope=\"col\">Data de compra</th>\r\n                            \r\n                            <th scope=\"col\">Estado do equipamento</th>\r\n                            <th scope=\"col\">Data fim atividade</th>\r\n\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                        <tr *ngFor=\"let equipamentos of EquipList;let i = index\">\r\n                            <th scope=\"row\">{{i+1}}</th>\r\n                            <ng-container *ngFor=\"let gm of gruposMaquinaList\">\r\n                                <td *ngIf=\"gm.IDGrupoMaquinas==equipamentos.IDGrupoM\">{{gm.Descr}}</td>\r\n                            </ng-container>\r\n                            <td>{{equipamentos.CodigoInterno}}</td>  \r\n                            <td>{{equipamentos.Descr}}</td>\r\n                            <td>{{equipamentos.Marca}}</td>\r\n                            <td>{{equipamentos.NumeroSerie}}</td>\r\n                            \r\n                            \r\n                            <td>{{equipamentos.Tipo}}</td>\r\n                            <td>{{equipamentos.DataCompra | date:'yyyy'}}</td>\r\n                            \r\n                            <td *ngIf=\"equipamentos.EstadoEqui==1\" >Ativo</td>\r\n                            <td *ngIf=\"equipamentos.EstadoEqui==0\" >Desativo</td>\r\n                            <td>{{equipamentos.DataFimAtividade | date:'yyyy'}}</td>\r\n                            <td>\r\n                               <button type=\"button\" class=\"btn btn-success btn-sm rounded-0\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"Editar\" [routerLink]=\"['/edit-equip/', equipamentos.IDEquipamento]\"></button>\r\n                            </td>\r\n\r\n                           \r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { GrupoMaquinaService } from '../../shared/gruposmaquina/grupomaquina.service';\r\n\r\n@Component({\r\n  selector: 'app-grupomaquina-list',\r\n  templateUrl: './grupomaquina-list.component.html',\r\n  styleUrls: ['./grupomaquina-list.component.css']\r\n})\r\nexport class GrupoMaquinaListComponent implements OnInit {\r\n\r\n  GrupoMaquinaList: any = [];\r\n\r\n\r\n  ngOnInit() {\r\n    this.loadGrupoMaquinas();\r\n  }\r\n\r\n  constructor(\r\n    public grupoMaquinaService: GrupoMaquinaService\r\n  ){ }\r\n\r\n   // lista grupos de máquinas\r\n   loadGrupoMaquinas() {\r\n    return this.grupoMaquinaService.GetGruposMaquina().subscribe((data: {}) => {\r\n      this.GrupoMaquinaList = data;\r\n    })\r\n    \r\n  }\r\n\r\n\r\n}","<div class=\"container wrapper\">\r\n    <div class=\"row\">\r\n\r\n        <!-- GruposMaquinas table -->\r\n        <div class=\"col-md-12\">\r\n            <div class=\"inner\">\r\n                <br>\r\n                <h3>Grupos de equipamentos</h3>\r\n                <br>\r\n                <table class=\"table table-bordered\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <!--<th scope=\"col\" width=\"40\">#</th>-->\r\n                            <th scope=\"col\" width=\"150\">Código interno</th>\r\n                            <th scope=\"col\" >Descrição</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let grupomaquinas of GrupoMaquinaList\">\r\n                            <!--<th scope=\"row\" width=\"40\">{{grupomaquinas.IDGrupoMaquinas}}</th>-->\r\n                            <td width=\"150\">{{grupomaquinas.CodigoInterno}}</td>\r\n                            <td >{{grupomaquinas.Descr}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <br>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, NgZone, OnDestroy } from \"@angular/core\";\nimport { MatMenuModule } from \"@angular/material/menu\";\nimport { AuthService } from \"../../TokenAuth/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { Subscription } from \"rxjs\";\n\nimport { interval, Observable } from \"rxjs\";\nimport { map, share } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-header\",\n  templateUrl: \"./header.component.html\",\n  styleUrls: [\"./header.component.css\"],\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private ngZone: NgZone\n  ) {}\n\n  user: any = localStorage.getItem(\"username\");\n\n  userIsAuthenticated = false;\n  private authListenerSubs: Subscription;\n  userPermission = 0;\n\n  userNow() {\n    //this.user = this.authService.getUserName();\n    return (this.user = this.authService.getUserName());\n    //console.log(localStorage.getItem('username'));\n  }\n\n  ngOnInit() {\n  \n    this.userPermission = this.authService.getCurrentUserRoleId();\n    this.userIsAuthenticated = this.authService.getIsAuth();\n    this.authListenerSubs = this.authService\n      .getAuthStatusListener()\n      .subscribe((isAuthenticated) => {\n        this.userIsAuthenticated = isAuthenticated;\n      });\n  }\n\n  ngOnDestroy() {\n    this.authListenerSubs.unsubscribe();\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.ngZone.run(() => this.router.navigateByUrl(\"/\"));\n\n    setTimeout(() => {\n      this.refresh();\n    }, 1000);\n  }\n\n  refresh(): void {\n    window.location.reload();\n  }\n}\n","\n<mat-toolbar class=\"col\">\n  <button\n    mat-button\n    [matMenuTriggerFor]=\"menu\"\n    aria-label=\"Example icon button with a menu icon\"\n  >\n    <mat-icon>menu</mat-icon>\n  </button>\n\n  <mat-menu #menu=\"matMenu\">\n  \n    <button mat-menu-item [matMenuTriggerFor]=\"pedidos\">Pedidos</button>\n \n    <button mat-menu-item routerLink=\"/manutencao-prog-home-page\">Tarefas a realizar</button>\n    <button mat-menu-item routerLink=\"/equip-list\">Equipamentos</button>\n    <button mat-menu-item routerLink=\"/grupomaquina-list\">\n      Grupos de máquina\n    </button>\n    <button mat-menu-item routerLink=\"/asp-net-user-list\">Utilizadores</button>\n  </mat-menu>\n\n  <mat-menu #pedidos=\"matMenu\">\n    <button mat-menu-item routerLink=\"/pedido-mcurativa-list-teste\">\n      Pedidos curativos\n    </button>\n    <button mat-menu-item routerLink=\"/pedido-preventiva-list\">\n      Pedidos preventivos\n    </button>\n  </mat-menu>\n\n  <a class=\"tt\"  routerLink=\"/\">Gestão da manutenção</a>\n  \n  <ul>\n    <li *ngIf=\"!userIsAuthenticated\">\n      <a mat-button routerLink=\"/my-login\" routerLinkActive=\"mat-accent\"\n        >Login</a\n      >\n    </li>\n    <li>\n      <a *ngIf=\"userIsAuthenticated\" class=\"formatFontSize\" style=\"font-size:0.9vw\">Em sessão: {{userNow()}}</a>\n    </li>\n    \n    <li *ngIf=\"userIsAuthenticated\">\n      <button mat-button (click)=\"onLogout()\">Logout</button>\n    </li>\n\n  </ul>\n</mat-toolbar>\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@Component({\n  selector: 'app-intervencao-add-user-home-page',\n  templateUrl: './intervencao-add-user-home-page.component.html',\n  styleUrls: ['./intervencao-add-user-home-page.component.css']\n})\nexport class IntervencaoAddUserHomePageComponent implements OnInit {\n\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  form: FormGroup;\n  IDPedido: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n    public pedidoServ: PedidosPreventivosService\n  ) {\n    this.IDPedido = this.data.IDPedido;\n  }\n\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n    this.form = this.fb.group({\n      descricao: [\"\", Validators.required],\n      estado: [0, Validators.required],\n      datainicio: [null],\n      datafim: [null],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      var values = this.form.getRawValue();\n      var body = {\n        Observacoes: values.descricao,\n        PedidoManutPreventivaID: this.IDPedido,\n        IDEstadoIntervencao: values.estado,\n        DataInicioIntervencao: values.datainicio,\n        DataFimIntervencao: values.datafim,\n      };\n\n      //if (body.DataInicioIntervencao.getTime() > body.DataFimIntervencao.getTime())\n\n      this.pedidoServ.postIntervencao(body);\n      //http enviar o body para a api.\n    } else {\n      //show dialog a dizer que falta algo.\n    }\n  }\n\n  loadEstadosIntervencao() {\n    return this.pedidoServ\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n}\n","<h4>Inserir intervenção preventiva</h4>\n\n<mat-dialog-content [formGroup]=\"form\">\n  <mat-form-field>\n    <input\n      formControlName=\"descricao\"\n      matInput\n      placeholder=\"Descrição do processo\"\n    />\n  </mat-form-field>\n  <br />\n\n  <mat-form-field>\n    <mat-label>Estado</mat-label>\n    <mat-select formControlName=\"estado\">\n      <mat-option *ngFor=\"let item of estadoIntervencaoList\" [value]=\"item.ID\">\n        {{ item.Descr }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerinicio\"\n      placeholder=\"Data inicio\"\n      formControlName=\"datainicio\"\n    />\n\n    <br>\n\n    <mat-datepicker-toggle matSuffix [for]=\"pickerinicio\">\n    </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerinicio> </ngx-mat-datetime-picker>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerfim\"\n      placeholder=\"Data fim\"\n      formControlName=\"datafim\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"pickerfim\"> </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerfim> </ngx-mat-datetime-picker>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button class=\"close-icon\" [mat-dialog-close]=\"true\">\n    Fechar\n  </button>\n  <button\n    mat-button\n    class=\"close-icon\"\n    [mat-dialog-close]=\"true\"\n    (click)=\"onSubmit()\"\n  >\n    Guardar\n  </button>\n</mat-dialog-actions>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidosService } from \"../../shared/pedidoMcurativa-teste/pedidoMcurativa.service\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n@Component({\n  selector: \"app-intervencao-curativa-add\",\n  templateUrl: \"./intervencao-curativa-add.component.html\",\n  styleUrls: [\"./intervencao-curativa-add.component.css\"],\n})\nexport class IntervencaoCurativaAddComponent implements OnInit {\n  //constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n  \n  estadoIntervencaoList: EstadoIntervencao[] = [];\n\n  form: FormGroup;\n  //description: string;\n\n  idPedido: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n    public pedidoServ: PedidosService\n  ) {\n    this.idPedido = this.data.idPedido;\n  }\n\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n    this.form = this.fb.group({\n      descricao: [\"\", Validators.required],\n      estado: [0, Validators.required],\n      datainicio: [null],\n      datafim: [null],\n    });\n  }\n\n  onSubmit() {\n    if (this.form.valid) {\n      var values = this.form.getRawValue();\n\n      var body = {\n        Descricao: values.descricao,\n        IDPedido: this.idPedido,\n        IDEstadoIntervencao: values.estado,\n        DataInicioIntervencao: values.datainicio,\n        DataFimIntervencao: values.datafim,\n      };\n\n      //if (body.DataInicioIntervencao.getTime() > body.DataFimIntervencao.getTime())\n\n      this.pedidoServ.postIntervencao(body);\n      //http enviar o body para a api.\n    } else {\n      //show dialog a dizer que falta algo.\n    }\n  }\n\n  loadEstadosIntervencao() {\n    return this.pedidoServ\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n}\n","<h4>Inserir intervenção</h4>\n\n<mat-dialog-content [formGroup]=\"form\">\n  <mat-form-field>\n    <input\n      formControlName=\"descricao\"\n      matInput\n      placeholder=\"Descrição do processo\"\n    />\n  </mat-form-field>\n\n  <br />\n\n  <mat-form-field>\n    <mat-label>Estado</mat-label>\n    <mat-select formControlName=\"estado\">\n      <mat-option *ngFor=\"let item of estadoIntervencaoList\" [value]=\"item.ID\">\n        {{ item.Descr }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerinicio\"\n      placeholder=\"Data inicio\"\n      formControlName=\"datainicio\"\n    />\n\n    <br>\n\n    <mat-datepicker-toggle matSuffix [for]=\"pickerinicio\">\n    </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerinicio> </ngx-mat-datetime-picker>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerfim\"\n      placeholder=\"Data fim\"\n      formControlName=\"datafim\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"pickerfim\"> </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerfim> </ngx-mat-datetime-picker>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button class=\"close-icon\" [mat-dialog-close]=\"true\">\n    Fechar\n  </button>\n  <button\n    mat-button\n    class=\"close-icon\"\n    [mat-dialog-close]=\"true\"\n    (click)=\"onSubmit()\"\n  >\n    Guardar\n  </button>\n</mat-dialog-actions>\n\n","import { Component, OnInit } from \"@angular/core\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { Inject } from \"@angular/core\";\nimport { NgForm, RequiredValidator } from \"@angular/forms\";\nimport { MAT_DIALOG_DATA } from \"@angular/material/dialog\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { MatSelectModule } from \"@angular/material/select\";\n\n\n@Component({\n  selector: \"app-intervencao-preventiva-add\",\n  templateUrl: \"./intervencao-preventiva-add.component.html\",\n  styleUrls: [\"./intervencao-preventiva-add.component.css\"],\n})\nexport class IntervencaoPreventivaAddComponent implements OnInit {\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  form: FormGroup;\n  idPedido: number;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any,\n    public fb: FormBuilder,\n    public pedidoServ: PedidosPreventivosService\n  ) {\n    this.idPedido = this.data.idPedido;\n  }\n\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n    this.form = this.fb.group({\n      descricao: [\"\", Validators.required],\n      estado: [0, Validators.required],\n      datainicio: [null],\n      datafim: [null],\n    });\n  }\n  \n\n  onSubmit() {\n    if (this.form.valid) {\n      var values = this.form.getRawValue();\n      var body = {\n        Observacoes: values.descricao,\n        PedidoManutPreventivaID: this.idPedido,\n        IDEstadoIntervencao: values.estado,\n        DataInicioIntervencao: values.datainicio,\n        DataFimIntervencao: values.datafim,\n      };\n\n      //if (body.DataInicioIntervencao.getTime() > body.DataFimIntervencao.getTime())\n\n      this.pedidoServ.postIntervencao(body);\n      //http enviar o body para a api.\n    } else {\n      //show dialog a dizer que falta algo.\n    }\n  }\n\n  loadEstadosIntervencao() {\n    return this.pedidoServ\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n}\n","<h4>Inserir intervenção preventiva</h4>\n\n<mat-dialog-content [formGroup]=\"form\">\n  <mat-form-field>\n    <input\n      formControlName=\"descricao\"\n      matInput\n      placeholder=\"Descrição do processo\"\n    />\n  </mat-form-field>\n  <br />\n\n  <mat-form-field>\n    <mat-label>Estado</mat-label>\n    <mat-select formControlName=\"estado\">\n      <mat-option *ngFor=\"let item of estadoIntervencaoList\" [value]=\"item.ID\">\n        {{ item.Descr }}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerinicio\"\n      placeholder=\"Data inicio\"\n      formControlName=\"datainicio\"\n    />\n\n    <br>\n\n    <mat-datepicker-toggle matSuffix [for]=\"pickerinicio\">\n    </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerinicio> </ngx-mat-datetime-picker>\n  </mat-form-field>\n  <mat-form-field>\n    <input\n      matInput\n      [ngxMatDatetimePicker]=\"pickerfim\"\n      placeholder=\"Data fim\"\n      formControlName=\"datafim\"\n    />\n    <mat-datepicker-toggle matSuffix [for]=\"pickerfim\"> </mat-datepicker-toggle>\n    <ngx-mat-datetime-picker #pickerfim> </ngx-mat-datetime-picker>\n  </mat-form-field>\n</mat-dialog-content>\n<mat-dialog-actions>\n  <button mat-button class=\"close-icon\" [mat-dialog-close]=\"true\">\n    Fechar\n  </button>\n  <button\n    mat-button\n    class=\"close-icon\"\n    [mat-dialog-close]=\"true\"\n    (click)=\"onSubmit()\"\n  >\n    Guardar\n  </button>\n</mat-dialog-actions>\n\n","import { Component, OnInit } from '@angular/core';\nimport { AspNetRolesService } from '../../shared/aspNetRoles/aspNetRoles.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n  \n\n@Component({\n  selector: 'app-list-permissao',\n  templateUrl: './list-permissao.component.html',\n  styleUrls: ['./list-permissao.component.css']\n})\nexport class ListPermissaoComponent implements OnInit {\n\n  aspNetRolesList: any = [];\n\n  constructor(\n    private aspNetRolesService : AspNetRolesService,\n    private actRoute: ActivatedRoute\n  ) { }\n\n\n  ngOnInit() {\n    this.loadAspNetRoles();\n  }\n\n  //load users e roles da DB \n  loadAspNetRoles() {\n    return this.aspNetRolesService.GetAspNetUsers().subscribe((data: {}) => {\n      this.aspNetRolesList = data;\n    })\n  }\n\n \n\n\n\n}\n","<div class=\"container wrapper\">\n    <div class=\"row\">\n\n        \n        <!-- Roles table -->\n        <div class=\"col-md-12\">\n\n            <div class=\"inner\">\n                <div id=\"main\">\n                    <br>\n                    <h3>Permissão dos utilizadores</h3>\n                    \n                  </div> \n                  <br>\n                <table class=\"table table-bordered\" style=\"text-align:center;\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\">Nome</th>\n                            <th scope=\"col\">Email</th>\n                            <th scope=\"col\">Tipo de permissão</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr></tr>\n                        <tr *ngFor=\"let aspnet of aspNetRolesList;let i = index\">\n                            <th scope=\"row\">{{i+1}}</th>\n                            <td>{{aspnet.Nome}}</td>  \n                            <td>{{aspnet.Email}}</td>\n                            <td>{{aspnet.Name}}</td>\n                            <td>\n                               <button type=\"button\" class=\"btn btn-success btn-sm rounded-0\" [routerLink]=\"['/edit-permissao/', aspnet.Email]\">Editar</button>\n                            </td>\n\n                           \n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n\n    </div>\n</div>","\nimport { Component, OnInit, NgZone, EventEmitter, Output} from '@angular/core';\nimport { PedidosPreventivosService } from '../../shared/pedidoMpreventiva/pedidoMpreventiva.service';\nimport { NgForm, FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport { Equipamento} from '../../shared/equipamento/equipamentomodel';\nimport { PedidoPreventivo } from '../../shared/pedidoMpreventiva/pedidoMpreventiva.model';\nimport { AspNetUsers } from '../../shared/pedidoMpreventiva/aspNetUsers.model';\nimport {TipoUtilizadorService} from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { TipoUtilizador} from '../../shared/tipoUtilizador/tipoUtilizador.model';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-manutencao-preventiva-programada',\n  templateUrl: './manutencao-preventiva-programada.component.html',\n  styleUrls: ['./manutencao-preventiva-programada.component.css']\n})\nexport class ManutencaoPreventivaProgramadaComponent implements OnInit {\n\n  pedidoForm: FormGroup;\n  selectedOption: number; \n  selectedUser: string;\n  gmID : number;\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n  equipamentosList: Equipamento[] = [];\n  \n  aspNetUsersList: any = [];\n  tipoUtilizadorList: any = [];\n\n  constructor(public pedidoService: PedidosPreventivosService, \n    public tipoUtilizadorService: TipoUtilizadorService,\n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private actRoute: ActivatedRoute   ) { }\n\n  ngOnInit(){\n    this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n    this.loadAspNetUsers();\n    this.loadTiposUtilizador();\n  }\n\n  listJustgroupmachine()\n    {\n        this.gmID = this.selectedOption;\n\n        if(this.equipamentosFiltrados.length>0)\n          {\n            this.equipamentosFiltrados.length=0;\n          }   \n\n        for (let j = 0; j < this.equipamentosList.length; j++) \n        {\n          if (this.gmID == this.equipamentosList[j].IDGrupoM) \n          {\n            this.equipamentosFiltrados.push(this.equipamentosList[j]);           \n          }\n        }  \n    } \n\n    converterIDTipoParaDescr(a:number)\n    {\n      for(let i= 0; i<this.tipoUtilizadorList.length;i++)\n      {\n        if(a==this.tipoUtilizadorList[i].IDTipo)\n        return \"(\" + this.tipoUtilizadorList[i].TipoDescr + \" - \" + this.tipoUtilizadorList[i].SeccaoTrabalho +\")\";\n      }\n\n    }\n\n\n  loadEquipamentos() {\n    return this.pedidoService.GetEquipamentosObser().subscribe((data: Equipamento[]) => {\n      this.equipamentosList = data;\n    })\n  }\n\n    //load tipos de utilizador da DB\n    loadTiposUtilizador() {\n      return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n      this.tipoUtilizadorList = data;\n     \n   })\n  }\n  \n \n  loadGrupoMaquinas() {\n    return this.pedidoService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n  \n  addPedido() {\n    this.pedidoForm = this.fb.group({\n      Descricao: [''],\n      DataLimiteManutencaoPrev: [''],\n      UtilizadorIDUser: ['']\n    })\n  }\n\n    //load utilizadores da DB \n    loadAspNetUsers() {\n      return this.pedidoService.GetAspNetUsers().subscribe((data: {}) => {\n        this.aspNetUsersList = data;\n      })\n    }\n    \n    submitFormWithID(selectedOption:number){ \n    console.log(\"Form ID SelectedOption\", selectedOption);\n    //var id = this.actRoute.snapshot.paramMap.get('id');\n    this.pedidoService.postPedidoPerGrupoMaquinas(selectedOption, this.pedidoForm.value);\n      //this.ngZone.run(() => this.router.navigateByUrl('/pedido-preventiva-list'))\n    }\n  \n\n  submitForm() {\n    this.pedidoService.postPedido(this.pedidoForm.value);\n    this.router.navigateByUrl('/pedido-preventiva-list'); \n    }\n}\n","<div class=\"container wrapper wrapper2\">\n  <div class=\"row\">\n    <!-- Form -->\n    <div class=\"col-md-12\">\n      <br />\n      <h3>Pedidos de manutenção preventiva em grupo</h3>\n      <div class=\"td\"></div>\n      <br />\n\n      <label>Grupo de máquina</label>\n      <br />\n      <select [(ngModel)]=\"selectedOption\" (click)=\"listJustgroupmachine()\" style=\"width:300px\">\n        <!-- <select  class=\"form-group\" formControlName=\"IDEquipamento\"> -->\n          <option value=\"0\">Grupo de máquina</option>  \n        <option\n          *ngFor=\"let item of gruposMaquinaList\"\n          [value]=\"item.IDGrupoMaquinas\"\n          >{{ item.CodigoInterno }} - {{ item.Descr }}</option\n        >\n      </select>\n\n      <form [formGroup]=\"pedidoForm\" (ngSubmit)=\"submitFormWithID(selectedOption)\" novalidate>\n        <br />\n        <label>Funcionário a realizar a tarefa</label>\n        <br />\n\n        <select class=\"form-group\" formControlName=\"UtilizadorIDUser\" style=\"width:300px\"> \n          <option *ngFor=\"let item1 of aspNetUsersList\" [value]=\"item1.UserName\"\n            >{{ item1.Nome }} {{ converterIDTipoParaDescr(item1.IDTipo) }}\n          </option>\n        </select>\n\n        <div class=\"form-group\">\n          <label>Descrição</label>\n          <br />\n          <input\n            type=\"text\"\n            formControlName=\"Descricao\"\n            class=\"form-control\"\n            class=\"myText\"\n            maxlength=\"100\"\n            style=\"width:300px\"\n          />\n        </div>\n        <div class=\"form-group\" >\n          <label>Data limite para realização da tarefa</label>\n          <input\n            type=\"Date\"\n            formControlName=\"DataLimiteManutencaoPrev\"\n            class=\"form-control\"\n            style=\"width:300px\"\n          />\n        </div>\n    \n        <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  NgZone,\n  EventEmitter,\n  Output,\n  OnDestroy,\n} from \"@angular/core\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { NgForm, FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { GrupoMaquina } from \"../../shared/gruposmaquina/grupomaquinamodel\";\nimport { Equipamento } from \"../../shared/equipamento/equipamentomodel\";\nimport { PedidoPreventivo } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.model\";\nimport { AspNetUsers } from \"../../shared/pedidoMpreventiva/aspNetUsers.model\";\nimport { TipoUtilizadorService } from \"../../shared/tipoUtilizador/tipoUtilizador.service\";\nimport { TipoUtilizador } from \"../../shared/tipoUtilizador/tipoUtilizador.model\";\nimport { Subscription } from \"rxjs\";\nimport { IntervencaoPreventivo } from \"src/app/shared/pedidoMpreventiva/intervencaoPreventiva.model\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport {IntervencaoAddUserHomePageComponent} from '../intervencao-add-user-home-page/intervencao-add-user-home-page.component';\nimport {IntervencaoPreventivaAddComponent} from '../intervencao-preventiva-add/intervencao-preventiva-add.component';\nimport {  ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: \"app-manutencao-prog-home-page\",\n  templateUrl: \"./manutencao-prog-home-page.component.html\",\n  styleUrls: [\"./manutencao-prog-home-page.component.css\"],\n})\nexport class ManutencaoProgHomePageComponent implements OnInit, OnDestroy {\n  constructor(\n    public pedidoService: PedidosPreventivosService,\n    public tipoUtilizadorService: TipoUtilizadorService,\n    public dialog: MatDialog,\n    private actRoute: ActivatedRoute\n\n  ) {}\n  pedidoForm: FormGroup;\n  selectedOption: number;\n  selectedUser: string;\n  gmID: number;\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosList: Equipamento[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n  aspNetUsersList: any = [];\n  intervencoes: IntervencaoPreventivo[] = [];\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  intervencoesFiltradas: IntervencaoPreventivo[] = [];\n\n  tipoUtilizadorList: any = [];\n  pedidosEsperaUser: PedidoPreventivo[] = [];\n  isLoading = false;\n  private intervencoesSub: Subscription;\n  private pedidosSub: Subscription;\n  private pedidosUserSub: Subscription;\n\n \n\n  ngOnDestroy() {\n    this.pedidosUserSub.unsubscribe();\n  }\n  ngOnInit() {\n    this.loadEstadosIntervencao();\n\n\n    this.pedidoService.getPedidosUser();\n    this.pedidosUserSub = this.pedidoService\n      .getPedidosUserUpdateListener()\n      .subscribe((pedidosuser: PedidoPreventivo[]) => {\n        this.pedidosEsperaUser = pedidosuser;\n      });\n  \n\n    //this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n    this.loadTiposUtilizador();\n   // this.loadPedidosEsperaUser();\n  }\n\n  //Troca no front-end, o ID do equipamento pelo código interno da empresa\n  changeIDtoInternalCode(equip: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.pedidosEsperaUser[equip].IDEquipamento ==\n        this.equipamentosList[j].IDEquipamento\n      ) {\n        return (\n          this.equipamentosList[j].CodigoInterno +\n          \" - \" +\n          this.equipamentosList[j].Marca +\n          \" \" +\n          this.equipamentosList[j].Descr\n        );\n      }\n    }\n  }\n\n  openDialog(IDPedido) {\n    console.log(IDPedido, \"passou na componente\");\n    this.dialog.open(IntervencaoAddUserHomePageComponent, {\n      data: { IDPedido: IDPedido },\n    });\n  }\n\n  loadEquipamentos() {\n    return this.pedidoService\n      .GetEquipamentosObser()\n      .subscribe((data: Equipamento[]) => {\n        this.equipamentosList = data;\n      });\n  }\n\n  //load tipos de utilizador da DB\n  loadTiposUtilizador() {\n    return this.tipoUtilizadorService\n      .GetTiposUtilizador()\n      .subscribe((data: {}) => {\n        this.tipoUtilizadorList = data;\n      });\n  }\n\n/*   loadPedidosEsperaUser() {\n    return this.pedidoService.GetPedidosEmEsperaUser().subscribe((data: {}) => {\n      this.pedidosEsperaUser = data;\n    });\n  } */\n\n\n  loadGrupoMaquinas() {\n    return this.pedidoService\n      .GetGruposMaquina()\n      .subscribe((data: GrupoMaquina[]) => {\n        this.gruposMaquinaList = data;\n        console.log(this.gruposMaquinaList);\n      });\n  }\n\n\n\n      //Troca o ID do estado de intervenção, pela sua descrição correspondente.\n      changeIDtoDescription(estado: number) {\n        for (let j = 0; j < this.equipamentosList.length; j++) {\n          if (\n            this.intervencoes[estado].IDEstadoIntervencao ==\n            this.estadoIntervencaoList[j].ID\n          ) {\n            return this.estadoIntervencaoList[j].Descr;\n          }\n        }\n      }\n\n      \n\n        //lista estados de intervenção.\n  loadEstadosIntervencao() {\n    return this.pedidoService\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n\n \n\n}\n","<mat-spinner\n  style=\"margin: 0 auto;\"\n  mode=\"indeterminate\"\n  color=\"accent\"\n  *ngIf=\"isLoading\"\n>\n</mat-spinner>\n<p style=\"text-align:center\" *ngIf=\"isLoading\">aguarde ...</p>\n<p>\n\n<hr />\n<div class=\"inner\">\n  <div id=\"main\">\n    <div id=\"side_bar\">\n    <h5 class=\"formatH5\" style=\"text-align:left\">Tarefas a aguardar a sua intervenção</h5> \n  </div>\n  </div>\n  <br />\n  <div class=\"table-responsive\">\n    <table class=\"table table-bordered\" style=\"width: 100%;\" [hidden]=\"isLoading\">\n      <thead>\n        <tr>\n         <th scope=\"col\"width=\"80\">ID</th>\n          <th scope=\"col\" width=\"350\">Equipamento</th>\n          <th scope=\"col\" width=\"400\">Descrição</th>\n          <th scope=\"col\" width=\"150\">Data pedido</th>\n          <th scope=\"col\" width=\"150\">Data limite</th>\n          <!--<th scope=\"col\" width=\"80\">Estado</th>-->\n        </tr>\n      </thead>\n    </table>\n  </div>\n\n  <mat-accordion multi=\"false\">\n    <mat-expansion-panel *ngFor=\"let item of pedidosEsperaUser; let i = index\">\n      <mat-expansion-panel-header collapsedHeight=\"*\" expandedHeight=\"*\">\n        <table class=\"table\">\n          <tbody>\n            <tr>\n   \n              <td class=\"tb-td-txt\" width=\"80\">{{ item.IDPedido}}</td>\n              <td class=\"tb-td-txt\" width=\"360\">\n                {{ changeIDtoInternalCode(i) }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"440\">{{ item.Descricao }}</td>\n              <td class=\"tb-td-txt\" width=\"165\">\n                {{ item.DataPedido | date: \"dd/MM/yyyy HH:mm\" }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataLimiteManutencaoPrev | date: \"dd/MM/yyyy\" }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-expansion-panel-header>\n      <div class=\"table-responsive\">\n        <body style=\"text-align: center;\">\n          <table class=\"table\" style=\"width: 100%;\">\n            <thead>\n              <tr>\n                <br>\n                \n                <button\n                type=\"button\"\n                (click)=\"openDialog(item.IDPedido)\"\n                class=\"btn btn-success btn-sm move-right\"\n                style=\"\n                  position: center;\n                  right: 0;\n                  height: 40px;\n                  width: 150px;\n                \"\n              >\n                Fechar pedido\n              </button>\n              <br>\n              <br>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n\n\n            </tbody>\n          </table>\n        </body>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>","import { Component, OnInit, NgZone, EventEmitter, Output} from '@angular/core';\nimport { PedidoManutCurativaTeste } from '../../shared/pedidoMcurativa-teste/pedidoMcurativa.model';\nimport { PedidosService } from '../../shared/pedidoMcurativa-teste/pedidoMcurativa.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport {Equipamento} from '../../shared/equipamento/equipamentomodel';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-pedido-mcurativa-add',\n  templateUrl: './pedido-mcurativa-add.component.html',\n  styleUrls: ['./pedido-mcurativa-add.component.css']\n})\nexport class PedidoMcurativaAddComponent implements OnInit {\n\n  pedidoForm: FormGroup;\n  selectedOption: number; \n  gmID : number\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosList: Equipamento[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n\n  constructor(\n    public pedidoService: PedidosService, \n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private actRoute: ActivatedRoute   ) { }\n\n  ngOnInit(){\n    this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n  }\n\n   listJustgroupmachine()\n    {\n        this.gmID = this.selectedOption;\n\n        if(this.equipamentosFiltrados.length>0)\n          {\n            this.equipamentosFiltrados.length=0;\n          }   \n\n        for (let j = 0; j < this.equipamentosList.length; j++) \n        {\n          if (this.gmID == this.equipamentosList[j].IDGrupoM) \n          {\n            this.equipamentosFiltrados.push(this.equipamentosList[j]);           \n          }\n        }  \n    } \n\n\n  loadEquipamentos() {\n    return this.pedidoService.GetEquipamentosObser().subscribe((data: Equipamento[]) => {\n      this.equipamentosList = data;\n    })\n  }\n\n  // lista equipamentos \n  loadGrupoMaquinas() {\n    return this.pedidoService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n  \n\n  addPedido() {\n    this.pedidoForm = this.fb.group({\n      IDEquipamento : [0],\n      Descricao: [''],\n      //IDEstadoIntervencao: [0],\n      //DataPedido:['']   \n    })\n  }\n\n  submitForm() {\n    this.pedidoService.postPedido(this.pedidoForm.value);\n    this.router.navigateByUrl('/pedido-mcurativa-list-teste'); \n    }\n    \n  \n\n\n\n}\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n\n        <!-- Form -->\n        <div class=\"col-md-12\">\n            <br>\n            <h3>Novo pedido curativo</h3>\n            <div class=\"td\"></div>\n            <br>\n\n            <label>Grupo de máquina</label>\n            <br>\n            <select [(ngModel)]=\"selectedOption\" (click)=\"listJustgroupmachine()\">           \n                <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{item.CodigoInterno }}-{{ item.Descr}}</option>\n            </select>\n            <br>\n            <form [formGroup]=\"pedidoForm\" (ngSubmit)=\"submitForm()\" novalidate>   \n                <br><label>Equipamento</label><br>\n                <select  class=\"form-group\" formControlName=\"IDEquipamento\">\n                    <option value=\"0\">Selecione o equipamento</option>   \n                    <option *ngFor=\"let item of equipamentosFiltrados\" [value]=\"item.IDEquipamento\">{{item.CodigoInterno}}-{{ item.Marca}} {{ item.Descr}}</option>                  \n                </select>\n                <div class=\"form-group\">\n                    <label>Descrição</label>\n                    <br>\n                    <input type=\"text\" formControlName=\"Descricao\" class=\"form-control\" class=\"myText\" maxlength=\"100\">\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\n            </form>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { PedidoManutCurativaTeste } from \"../../shared/pedidoMcurativa-teste/pedidoMcurativa.model\";\nimport { PedidosService } from \"../../shared/pedidoMcurativa-teste/pedidoMcurativa.service\";\nimport { NgForm } from \"@angular/forms\";\nimport * as printJS from 'print-js';\nimport { Equipamento } from \"../../shared/equipamento/equipamentomodel\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { IntervencaoCurativa } from \"src/app/shared/pedidoMcurativa-teste/intervencaoCurativa.model\";\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PageEvent } from \"@angular/material/paginator\";\nimport { IntervencaoCurativaAddComponent } from \"../intervencao-curativa-add/intervencao-curativa-add.component\";\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel'; \nimport { ActivatedRoute } from '@angular/router';\nimport {PedidoManutCurativaPrint} from \"../../shared/pedidoMcurativa-teste/pedidoMCurativaPrint.model\";\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: \"app-pedido-mcurativa-list-teste\",\n  templateUrl: \"./pedido-mcurativa-list-teste.component.html\",\n  styleUrls: [\"./pedido-mcurativa-list-teste.component.css\"],\n})\nexport class PedidoMcurativaListTesteComponent implements OnInit, OnDestroy {\n\n  constructor(\n    public pedidosService: PedidosService,\n    public dialog: MatDialog, \n    private route: ActivatedRoute\n  ) {}\n\n  private pedidosSub: Subscription;\n  private intervencoesSub: Subscription;\n\n  isLoading = false;\n  pedidos: PedidoManutCurativaTeste[] = [];\n  equipamentosList: Equipamento[] = [];\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  intervencoes: IntervencaoCurativa[] = [];\n  intervencoesFiltradas: IntervencaoCurativa[] = [];\n  gruposMaquinaList: GrupoMaquina[] = [];\n\n \n\n  pageSizeOptions = [5, 8, 12];\n  totalPedidos = 0;\n  pedidosPerPage = 2;\n  currentPage = 1;\n  selectedOptionGrupo = 0; \n  selectedOptionDateInicio= \"01-01-1990\";\n  selectedOptionDateFim = \"01-01-1990\";\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, 0, \"01-01-1990\",\"01-01-1990\");\n\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: {\n          pedidos: PedidoManutCurativaTeste[];\n          CountPedidos: number;\n        }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n        }\n      );\n\n\n    this.pedidosService.getIntervencoes();\n    this.intervencoesSub = this.pedidosService\n      .getIntervencaoUpdateListener()\n      .subscribe((intervencoes: IntervencaoCurativa[]) => {\n        this.intervencoes = intervencoes;\n      });\n\n    //Carregamento de outros métodos.\n    this.loadEstadosIntervencao();\n    this.loadEquip();\n    this.loadGrupoMaquinas();\n  }\n\n\n  printPedidos()\n  {   \n     type MyArrayType = Array<{UtilizadorIDUser: string, DataLimiteManutencaoPrev: string}>;\n\n     let myArray= [];\n     \n     console.log(\"Pedidos \", this.pedidos);\n    \n    for(let i = 0; i < this.pedidos.length; i++)\n    { \n      \n      let pedidoPrint = {} as PedidoManutCurativaPrint;\n      const datepipe: DatePipe = new DatePipe('en-US');\n\n      /* IDPedido: number;\n      UtilizadorIDUser: string;\n      IDEquipamento: number;\n      Descricao: string;\n      DataPedido: string; */\n      \n      //let convertedDataLimite = new Date(dataPedidoFormatada);\n      let  dataPedidoFormatada = datepipe.transform(this.pedidos[i].DataPedido, 'dd-MM-yyyy HH:mm'); \n      //let convertedDataPedidoFormatada = new Date(dataPedidoFormatada);\n        pedidoPrint.DataPedido = '';\n        pedidoPrint.Descricao = '';\n        pedidoPrint.UtilizadorIDUser = '';\n        pedidoPrint.IDEquipamento = '';\n        pedidoPrint.DataPedido = dataPedidoFormatada;        \n        pedidoPrint.Descricao = this.pedidos[i].Descricao;\n        pedidoPrint.UtilizadorIDUser = this.pedidos[i].UtilizadorIDUser;\n         for (let j = 0; j < this.equipamentosList.length; j++) \n        { \n          if (this.pedidos[i].IDEquipamento == this.equipamentosList[j].IDEquipamento) \n                {\n                  pedidoPrint.IDEquipamento = this.equipamentosList[j].Marca + \" \"  + this.equipamentosList[j].Descr;           \n                }                \n        }     \n        \n        myArray.push(pedidoPrint);\n        \n        console.log(myArray);\n  }\n  printJS({printable: myArray, properties: [{field: 'UtilizadorIDUser', displayName: '#'}, {field:'IDEquipamento', displayName: 'Equipamento'}, \n  {field:'Descricao', displayName:'Descrição'}, {field :'DataPedido', displayName:'Data pedido'}], type: 'json', header: 'ACATEL - Pedidos curativos'})\n}\n\n  limparFiltros()\n  {\n    this.ngOnInit();\n    this.selectedOptionGrupo = 0;\n    this.selectedOptionDateInicio = \"01-01-1990\";\n    this.selectedOptionDateFim = \"01-01-1990\";\n  }\n\n  procuraAvancada()\n  {\n    console.log(this.selectedOptionGrupo, \"Grupo selecionado\");\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: {\n          pedidos: PedidoManutCurativaTeste[];\n          CountPedidos: number;\n        }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n        }\n      );\n\n  }\n\n\n  getTimeDiff(a: number) {\n    for (let j = 0; j < this.intervencoes.length; j++) {\n      if (this.intervencoes[j].ID == a) {\n        let endDate = new Date();\n        endDate = new Date(this.intervencoes[j].DataFimIntervencao);\n        let beginDate = new Date();\n        beginDate = new Date(this.intervencoes[j].DataInicioIntervencao);\n        let diffMs = endDate.getTime() - beginDate.getTime(); // milliseconds\n        var diffMinutos = Math.round(diffMs / 60000);\n        var hours = diffMinutos / 60;\n        var rhours = Math.floor(hours);\n        var minutes = (hours - rhours) * 60;\n        var rminutes = Math.round(minutes);\n      }\n    }\n    if (rhours == 0) {\n      return rminutes + \"minuto(s)\";\n    }\n    if (rhours >= 1 && rminutes == 0) return rhours + \"h\";\n    if (rhours >= 1 && rminutes > 0) return rhours + \" h:\" + rminutes + \"m\";\n  }\n\n  ngOnDestroy() {\n    this.pedidosSub.unsubscribe();\n    this.intervencoesSub.unsubscribe();\n  }\n\n  onChangedPage(pageData: PageEvent) {\n    this.currentPage = pageData.pageIndex + 1;\n    this.pedidosPerPage = pageData.pageSize;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n  }\n\n  openDialog(idPedido) {\n    this.dialog.open(IntervencaoCurativaAddComponent, {\n      data: { idPedido: idPedido },\n    });\n  }\n\n  deleteIntervencao(ID) {\n    return this.pedidosService.DeleteIntervencao(ID).subscribe((res) => {});\n  }\n\n  loadGrupoMaquinas() {\n    return this.pedidosService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n\n  //## MÉTODOS ## //\n\n  \n  //Troca no front-end, o ID do equipamento pelo código interno da empresa\n  changeIDtoInternalCode(equip: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.pedidos[equip].IDEquipamento ==\n        this.equipamentosList[j].IDEquipamento\n      ) {\n        return (\n          this.equipamentosList[j].CodigoInterno +\n          \" - \" +\n          this.equipamentosList[j].Marca // +\n\n        );\n      }\n    }\n  }\n\n  //Mostra os estados de intervenção ## melhorar esta parte.\n  checkStateOfIntervention(a: number) {\n    if (this.intervencoesFiltradas.length > 0) {\n      this.intervencoesFiltradas.length = 0;\n    }\n\n    for (let j = 0; j < this.intervencoes.length; j++) {\n      if (this.pedidos[a].IDPedido == this.intervencoes[j].IDPedido) {\n        this.intervencoesFiltradas.push(this.intervencoes[j]);\n      }\n    }\n\n    if (this.intervencoesFiltradas.length > 0) {\n      var maxI = this.intervencoesFiltradas.reduce(function (prev, current) {\n        return prev.IDPedido > current.IDPedido ? prev : current;\n      });\n     \n    }\n    if (this.intervencoesFiltradas.length == 0) return \"S/I\";\n      else if (maxI.IDEstadoIntervencao == 2) return \"Aguarda\";\n      else if (maxI.IDEstadoIntervencao == 3) return \"Fechado\";\n  }\n\n  //Troca o ID do estado de intervenção, pela sua descrição correspondente.\n  changeIDtoDescription(estado: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.intervencoes[estado].IDEstadoIntervencao ==\n        this.estadoIntervencaoList[j].ID\n      ) {\n        return this.estadoIntervencaoList[j].Descr;\n      }\n    }\n  }\n\n  //lista estados de intervenção.\n  loadEstadosIntervencao() {\n    return this.pedidosService\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n\n  // lista equipamentos.\n  loadEquip() {\n    return this.pedidosService\n      .GetEquipamentosObser()\n      .subscribe((data: Equipamento[]) => {\n        this.equipamentosList = data;\n      });\n  }\n}\n","<mat-spinner style=\"margin: 0 auto;\" mode=\"indeterminate\" color=\"accent\" *ngIf=\"isLoading\">\n</mat-spinner>\n<p style=\"text-align: center;\" *ngIf=\"isLoading\">aguarde ...</p>\n<p></p>\n\n<hr />\n<div class=\"inner\">\n  <div id=\"main\">\n    <div id=\"side_bar\">\n      <h5 class=\"formatH5\" style=\"text-align: right;\">Pedidos curativos</h5>\n      <button type=\"button\" class=\"btn btn-outline-primary\" style=\"float: right;\"\n        [routerLink]=\"['/pedido-mcurativa-add']\">\n        Novo pedido\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        (click)=\"printPedidos()\"\n      >\n        Imprimir\n      </button>\n      <br />\n\n      <div class=\"rowSelectTags\">\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">Grupo de máquina:</label><br />\n          <select class=\"AlignFilter\" id=\"AlignFilter\" [(ngModel)]=\"selectedOptionGrupo\" style=\"width: 180px;\">\n\n            <option selected>0</option>\n\n            <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{ item.CodigoInterno }} -\n              {{ item.Descr }}</option>\n          </select>\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">de:</label><br />\n          <input type=\"Date\" [(ngModel)]=\"selectedOptionDateInicio\" select class=\"AlignFilter\" id=\"AlignFilter\"\n            style=\"width: 180px;\" />\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">até:</label><br />\n          <input type=\"Date\" [(ngModel)]=\"selectedOptionDateFim\" select class=\"AlignFilter\" id=\"AlignFilter\"\n            style=\"width: 180px;\" />\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button class=\"AlignFilter\" (click)=\"procuraAvancada()\" mat-icon-button>\n            <mat-icon>search</mat-icon>\n          </button>\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button (click)=\"limparFiltros()\" mat-icon-button>\n            <mat-icon>delete_sweep</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <br />\n  <br />\n  <br />\n\n  <ng-container *ngIf=\"totalPedidos == 0\">\n    <br /><br /><br />\n    <p style=\"text-align: center;\"><strong>SEM RESULTADOS</strong></p>\n    <br /><br /><br />\n  </ng-container>\n\n  <div *ngIf=\"totalPedidos > 0\">\n    <div class=\"table-responsive\">\n      <table class=\"table table-bordered\" style=\"width: 100%;\" [hidden]=\"isLoading\">\n        <thead>\n          <tr>\n            <!--<th scope=\"col\" width=\"20\">#</th>-->\n            <th scope=\"col\" width=\"80\">Utilizador</th>\n            <th scope=\"col\" width=\"220\">Equipamento</th>\n            <th scope=\"col\" width=\"320\">Descrição</th>\n            <th scope=\"col\" width=\"150\">Data de avaria</th>\n            <th scope=\"col\" width=\"80\">Estado</th>\n          </tr>\n        </thead>\n      </table>\n    </div>\n  </div>\n\n  <mat-accordion multi=\"false\">\n    <mat-expansion-panel *ngFor=\"let item of pedidos; let i = index\">\n      <mat-expansion-panel-header collapsedHeight=\"*\" expandedHeight=\"*\">\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <!--<td class=\"tb-td-txt\" width=\"20\">{{ item.IDPedido }}</td>-->\n              <td class=\"tb-td-txt\" width=\"80\">{{ item.UtilizadorIDUser }}</td>\n              <td class=\"tb-td-txt\" width=\"250\">\n                {{ changeIDtoInternalCode(i) }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"375\">{{ item.Descricao }}</td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataPedido | date: \"dd/MM/yyyy HH:mm\" }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"80\">\n                {{ checkStateOfIntervention(i) }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-expansion-panel-header>\n      <div class=\"table-responsive\">\n\n        <body style=\"text-align: center;\">\n          <table class=\"table\" style=\"width: 80%;\">\n            <thead>\n              <tr>\n                <th scope=\"col\" width=\"25\">#</th>\n                <th scope=\"col\" width=\"80\">Utilizador</th>\n                <th scope=\"col\" width=\"250\">Descrição</th>\n                <th scope=\"col\" width=\"150\">Estado</th>\n                <th scope=\"col\" width=\"170\">Inicio da intervenção</th>\n                <th scope=\"col\" width=\"170\">Fim da intervenção</th>\n                <th scope=\"col\" width=\"100\">Duração</th>\n                <td>\n                  <button type=\"button\" (click)=\"openDialog(item.IDPedido)\" class=\"btn btn-success btn-sm move-right\"\n                    style=\"\n                      position: absolute;\n                      right: 0;\n                      height: 30px;\n                      width: 30px;\n                    \">\n                    +\n                  </button>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n\n              <tr *ngFor=\"let inter of intervencoes; let j = index\">\n                <ng-container *ngIf=\"inter.IDPedido == item.IDPedido\">\n                  <th scope=\"row\" width=\"25\">{{ inter.ID }}</th>\n                  <td class=\"tb-td-txt\" width=\"80\">\n                    {{ inter.UtilizadorIDUser }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"250\">{{ inter.Descricao }}</td>\n                  <td class=\"tb-td-txt\" width=\"150\">\n                    {{ changeIDtoDescription(j) }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataInicioIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataFimIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"100\">\n                    {{ getTimeDiff(inter.ID) }}\n                  </td>\n                  <td>\n                    <button type=\"button\" color=\"accent\" (click)=\"deleteIntervencao(inter.ID)\">\n                      <mat-icon _ngcontent-oax-c0=\"\" class=\"mat-icon notranslate material-icons mat-icon-no-color\"\n                        role=\"img\" aria-hidden=\"true\">delete</mat-icon>\n                    </button>\n                  </td>\n                </ng-container>\n              </tr>\n            </tbody>\n          </table>\n        </body>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <mat-paginator class=\"col\" [length]=\"totalPedidos\" [pageSize]=\"pedidosPerPage\" [pageSizeOptions]=\"pageSizeOptions\"\n    (page)=\"onChangedPage($event)\" *ngIf=\"pedidos.length > 0\"></mat-paginator>\n</div>","import { Component, OnInit, NgZone, EventEmitter, Output} from '@angular/core';\nimport { PedidoManutCurativaTeste } from '../../shared/pedidoMcurativa-teste/pedidoMcurativa.model';\nimport { PedidosPreventivosService } from '../../shared/pedidoMpreventiva/pedidoMpreventiva.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport {Equipamento} from '../../shared/equipamento/equipamentomodel';\nimport { NgForm } from '@angular/forms';\nimport {  ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-pedido-mpreventiva-add',\n  templateUrl: './pedido-mpreventiva-add.component.html',\n  styleUrls: ['./pedido-mpreventiva-add.component.css']\n})\nexport class PedidoMpreventivaAddComponent implements OnInit {\n\n  pedidoForm: FormGroup;\n  selectedOption: number; \n  gmID : number\n\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosList: Equipamento[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n\n  constructor(public pedidoService: PedidosPreventivosService, \n    public fb: FormBuilder,\n    private ngZone: NgZone,\n    private router: Router,\n    private actRoute: ActivatedRoute   ) { }\n\n  ngOnInit(){\n    this.addPedido();\n    this.loadGrupoMaquinas();\n    this.loadEquipamentos();\n  }\n  listJustgroupmachine()\n    {\n        this.gmID = this.selectedOption;\n\n        if(this.equipamentosFiltrados.length>0)\n          {\n            this.equipamentosFiltrados.length=0;\n          }   \n\n        for (let j = 0; j < this.equipamentosList.length; j++) \n        {\n          if (this.gmID == this.equipamentosList[j].IDGrupoM) \n          {\n            this.equipamentosFiltrados.push(this.equipamentosList[j]);           \n          }\n        }  \n    } \n\n\n  loadEquipamentos() {\n    return this.pedidoService.GetEquipamentosObser().subscribe((data: Equipamento[]) => {\n      this.equipamentosList = data;\n    })\n  }\n \n  loadGrupoMaquinas() {\n    return this.pedidoService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n      console.log(this.gruposMaquinaList);\n    })\n  }\n  \n  addPedido() {\n    this.pedidoForm = this.fb.group({\n      IDEquipamento : [0],\n      Descricao: [''],\n      //IDEstadoIntervencao: [0],\n      //DataPedido:['']   \n    })\n  }\n\n\n  submitForm() {\n    this.pedidoService.postPedido(this.pedidoForm.value);\n    this.router.navigateByUrl('/pedido-preventiva-list'); \n    }\n    \n\n}\n","<div class=\"container wrapper wrapper2\">\n    <div class=\"row\">\n\n        <!-- Form -->\n        <div class=\"col-md-12\">\n            <br>\n            <h3>Novo pedido preventivo</h3>\n            <div class=\"td\"></div>\n            <br>\n\n            <label>Grupo de máquina</label>\n            <br>\n            <select [(ngModel)]=\"selectedOption\" (click)=\"listJustgroupmachine()\">           \n                <option *ngFor=\"let item of gruposMaquinaList\" [value]=\"item.IDGrupoMaquinas\">{{item.CodigoInterno }}-{{ item.Descr}}</option>\n            </select>\n            <br>\n            <form [formGroup]=\"pedidoForm\" (ngSubmit)=\"submitForm()\" novalidate>   \n                <br><label>Equipamento</label><br>\n                <select  class=\"form-group\" formControlName=\"IDEquipamento\">\n                    <option value=\"0\">Selecione o equipamento</option>   \n                    <option *ngFor=\"let item of equipamentosFiltrados\" [value]=\"item.IDEquipamento\">{{item.CodigoInterno}}-{{ item.Marca}} {{ item.Descr}}</option>                  \n                </select>\n                <div class=\"form-group\">\n                    <label>Descrição</label>\n                    <br>\n                    <input type=\"text\" formControlName=\"Descricao\" class=\"form-control\" class=\"myText\" maxlength=\"100\">\n                </div>\n\n                <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\n            </form>\n        </div>\n    </div>\n\n</div>","import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\nimport { DatePipe } from '@angular/common';\n\nimport { NgForm } from \"@angular/forms\";\nimport * as printJS from 'print-js';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { PageEvent } from \"@angular/material/paginator\";\n//import { IntervencaoCurativaAddComponent } from \"../intervencao-curativa-add/intervencao-curativa-add.component\";\n\n/*Load interfaces*/\nimport { Equipamento } from \"../../shared/equipamento/equipamentomodel\";\nimport { EstadoIntervencao } from \"../../shared/estadoIntervencao/estadoIntervencao.model\";\nimport { PedidoPreventivo } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.model\";\nimport {PedidoPreventivoPrint} from \"../../shared/pedidoMpreventiva/pedidoMpreventivaPrint.model\";\nimport { PedidosPreventivosService } from \"../../shared/pedidoMpreventiva/pedidoMpreventiva.service\";\nimport { IntervencaoPreventivo } from \"src/app/shared/pedidoMpreventiva/intervencaoPreventiva.model\";\nimport { IntervencaoPreventivaAddComponent } from \"../intervencao-preventiva-add/intervencao-preventiva-add.component\";\nimport {IntervencaoAddUserHomePageComponent} from '../intervencao-add-user-home-page/intervencao-add-user-home-page.component';\nimport { GrupoMaquina } from '../../shared/gruposmaquina/grupomaquinamodel';\nimport { AspNetUsers } from '../../shared/pedidoMpreventiva/aspNetUsers.model';\nimport {TipoUtilizadorService} from '../../shared/tipoUtilizador/tipoUtilizador.service';\nimport { TipoUtilizador} from '../../shared/tipoUtilizador/tipoUtilizador.model';\nimport {MatIconModule} from '@angular/material/icon'\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: \"app-pedido-preventiva-list\",\n  templateUrl: \"./pedido-preventiva-list.component.html\",\n  styleUrls: [\"./pedido-preventiva-list.component.css\"],\n})\nexport class PedidoPreventivaListComponent implements OnInit, OnDestroy {\n  constructor(\n    public pedidosService: PedidosPreventivosService,\n    public tipoUtilizadorService: TipoUtilizadorService,\n    public dialog: MatDialog,\n    private route: ActivatedRoute\n  ) {}\n \n  \n  isLoading = false;\n  pedidos: PedidoPreventivo[] = [];\n  equipamentosList: Equipamento[] = [];\n  estadoIntervencaoList: EstadoIntervencao[] = [];\n  intervencoesFiltradas: IntervencaoPreventivo[] = [];\n  intervencoes: IntervencaoPreventivo[] = [];\n  gruposMaquinaList: GrupoMaquina[] = [];\n  equipamentosFiltrados: Equipamento[] = [];\n  aspNetUsersList: any = [];\n  tipoUtilizadorList: any = [];\n  gmID : number;\n  pedidosImprimir : PedidoPreventivoPrint[] =[];\n  \n  private pedidosSub: Subscription;\n  private intervencoesSub: Subscription;\n\n  pageSizeOptions = [5, 8, 12, 20, 25];\n  totalPedidos = 0;\n  pedidosPerPage = 2;\n  currentPage = 1;\n  selectedOptionGrupo = 0; \n  selectedOptionDateInicio= \"01-01-1990\";\n  selectedOptionDateFim = \"01-01-1990\";\n  model: any = {};\n  \n\n  \n\n  ngOnInit() {\n\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, 0, \"01-01-1990\", \"01-01-1990\");\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: { pedidos: PedidoPreventivo[]; CountPedidos: number }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n          \n        }\n      );\n\n    this.pedidosService.getIntervencoes();\n    this.intervencoesSub = this.pedidosService\n      .getIntervencaoUpdateListener()\n      .subscribe((intervencoes: IntervencaoPreventivo[]) => {\n        this.intervencoes = intervencoes;\n      });\n\n    //Carregamento de outros métodos.\n    this.loadEstadosIntervencao();\n    this.loadEquip();\n    this.loadGrupoMaquinas();\n    //this.loadAspNetUsers();\n    this.loadTiposUtilizador();\n  }\n\n\n  limparFiltros()\n  {\n    this.ngOnInit();\n    this.selectedOptionGrupo = 0;\n    this.selectedOptionDateInicio = \"01-01-1990\";\n    this.selectedOptionDateFim = \"01-01-1990\";\n  }\n\n  printPedidos()\n  {   \n     type MyArrayType = Array<{UtilizadorIDUser: string, DataLimiteManutencaoPrev: string}>;\n\n     let myArray= [];\n     \n     console.log(\"Pedidos \", this.pedidos);\n    \n    for(let i = 0; i < this.pedidos.length; i++)\n    { \n      \n      let pedidoPrint = {} as PedidoPreventivoPrint;\n      const datepipe: DatePipe = new DatePipe('en-US');\n\n      let dataLimiteFormatada = datepipe.transform(this.pedidos[i].DataLimiteManutencaoPrev, 'dd-MM-yyyy');\n      //let convertedDataLimite = new Date(dataPedidoFormatada);\n      let  dataPedidoFormatada = datepipe.transform(this.pedidos[i].DataPedido, 'dd-MM-yyyy HH:mm'); \n      //let convertedDataPedidoFormatada = new Date(dataPedidoFormatada);\n        pedidoPrint.DataPedido = '';\n        pedidoPrint.DataLimiteManutencaoPrev = '';\n        pedidoPrint.Descricao = '';\n        pedidoPrint.UtilizadorIDUser = '';\n        pedidoPrint.IDEquipamento = '';\n\n        pedidoPrint.DataPedido = dataPedidoFormatada;\n        if(dataLimiteFormatada == null)\n        {dataLimiteFormatada = ''}\n        if(dataLimiteFormatada!=null)\n        { pedidoPrint.DataLimiteManutencaoPrev = dataLimiteFormatada;}\n        \n        pedidoPrint.Descricao = this.pedidos[i].Descricao;\n        pedidoPrint.UtilizadorIDUser = this.pedidos[i].UtilizadorIDUser;\n         for (let j = 0; j < this.equipamentosList.length; j++) \n        { \n          if (this.pedidos[i].IDEquipamento == this.equipamentosList[j].IDEquipamento) \n                {\n                  pedidoPrint.IDEquipamento = this.equipamentosList[j].Marca + \" \"  + this.equipamentosList[j].Descr;           \n                }                \n        }     \n        \n        myArray.push(pedidoPrint);\n        \n        console.log(myArray);\n  }\n  printJS({printable: myArray, properties: [{field: 'UtilizadorIDUser', displayName: '#'}, {field:'IDEquipamento', displayName: 'Equipamento'}, \n  {field:'Descricao', displayName:'Descrição'}, {field:'DataLimiteManutencaoPrev', displayName:'Data limite'}, {field :'DataPedido', displayName:'Data pedido'}], type: 'json', header: 'ACATEL - Pedidos preventivos'})\n}\n\n  procuraAvancada()\n  {\n    console.log(this.selectedOptionGrupo, \"Grupo selecionado\");\n    this.isLoading = true;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n    this.pedidosSub = this.pedidosService\n      .getPedidoUpdateListener()\n      .subscribe(\n        (pedidoData: { pedidos: PedidoPreventivo[]; CountPedidos: number }) => {\n          this.isLoading = false;\n          this.pedidos = pedidoData.pedidos;\n          this.totalPedidos = pedidoData.CountPedidos;\n        }\n      );\n  }\n\n    //load tipos de utilizador da DB\n    loadTiposUtilizador() {\n      return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\n      this.tipoUtilizadorList = data;\n     \n   })\n  }\n\n  ngOnDestroy() {\n    this.pedidosSub.unsubscribe();\n    this.intervencoesSub.unsubscribe();\n  }\n  //MAT paginator\n  onChangedPage(pageData: PageEvent) {\n    this.currentPage = pageData.pageIndex + 1;\n    this.pedidosPerPage = pageData.pageSize;\n    this.pedidosService.getPedidos(this.pedidosPerPage, this.currentPage, this.selectedOptionGrupo, this.selectedOptionDateInicio, this.selectedOptionDateFim);\n  }\n\n  loadGrupoMaquinas() {\n    return this.pedidosService.GetGruposMaquina().subscribe((data: GrupoMaquina[]) => {\n      this.gruposMaquinaList = data;\n    })\n  }\n\n\n  openDialog(idPedido) {\n    console.log(idPedido, \"Passou na componente, ID do Pedido\");\n    this.dialog.open(IntervencaoPreventivaAddComponent, {\n      data: { idPedido: idPedido },\n    });\n  }\n\n  //## MÉTODOS ## //\n  //Delete intervenção, somente se o User registado na intervencao, for o mesmo da sessão em aberto\n  deleteIntervencao(ID) {\n    return this.pedidosService.DeleteIntervencao(ID).subscribe((res) => {});\n  }\n\n  getTimeDiff(a: number) {\n    for (let j = 0; j < this.intervencoes.length; j++)\n    {\n      \n      if (this.intervencoes[j].ID == a) \n      {\n        let endDate = new Date();\n        endDate = new Date(this.intervencoes[j].DataFimIntervencao);\n        let beginDate = new Date();\n        beginDate = new Date(this.intervencoes[j].DataInicioIntervencao);\n        let diffMs = endDate.getTime() - beginDate.getTime(); // milliseconds\n        var diffMinutos = Math.round(diffMs / 60000); \n        var hours = (diffMinutos/60);\n        var rhours = Math.floor(hours);\n        var minutes = (hours-rhours) * 60;\n        var rminutes = Math.round(minutes);    \n      }\n    }\n    if(rhours==0)\n    {\n      return rminutes + \"minuto(s)\";\n    }\n    if(rhours>=1 && rminutes==0)\n      return rhours + \"h\";\n    if(rhours>=1 && rminutes>0)\n      return rhours + \" h:\" + rminutes + \"m\";    \n  }\n\n  //Troca no front-end, o ID do equipamento pelo código interno da empresa\n  changeIDtoInternalCode(equip: number) {\n    for (let j = 0; j < this.equipamentosList.length; j++) {\n      if (\n        this.pedidos[equip].IDEquipamento ==\n        this.equipamentosList[j].IDEquipamento\n      ) {\n        return (\n          this.equipamentosList[j].CodigoInterno +\n          \" - \" +\n          this.equipamentosList[j].Marca +\n          \" \" +\n          this.equipamentosList[j].Descr\n        );\n      }\n    }\n  }\n\n\n  //Mostra os estados de intervenção ## melhorar esta parte.\n  checkStateOfIntervention(a: number) {\n    if (this.intervencoesFiltradas.length > 0) {\n      this.intervencoesFiltradas.length = 0;\n    }\n\n    for (let j = 0; j < this.intervencoes.length; j++) {\n      if (\n        this.pedidos[a].IDPedido == this.intervencoes[j].PedidoManutPreventivaID\n      ) {\n        this.intervencoesFiltradas.push(this.intervencoes[j]);\n      }\n    }\n\n      if (this.intervencoesFiltradas.length > 0) {\n        var maxI = this.intervencoesFiltradas.reduce(function (prev, current) {\n          return prev.PedidoManutPreventivaID > current.PedidoManutPreventivaID ? prev : current;\n        });\n       \n      }\n      if (this.intervencoesFiltradas.length == 0) return \"S/I\";\n        else if (maxI.IDEstadoIntervencao == 2) return \"Aguarda\";\n        else if (maxI.IDEstadoIntervencao == 3) return \"Fechado\";\n  }\n\n  //lista estados de intervenção.\n  loadEstadosIntervencao() {\n    return this.pedidosService\n      .GetEstadosIntervencao()\n      .subscribe((data: EstadoIntervencao[]) => {\n        this.estadoIntervencaoList = data;\n      });\n  }\n\n  // lista equipamentos.\n  loadEquip() {\n    return this.pedidosService\n      .GetEquipamentosObser()\n      .subscribe((data: Equipamento[]) => {\n        this.equipamentosList = data;\n      });\n  }\n\n    //Troca o ID do estado de intervenção, pela sua descrição correspondente.\n    changeIDtoDescription(estado: number) {\n      for (let j = 0; j < this.equipamentosList.length; j++) {\n        if (\n          this.intervencoes[estado].IDEstadoIntervencao ==\n          this.estadoIntervencaoList[j].ID\n        ) {\n          return this.estadoIntervencaoList[j].Descr;\n        }\n      }\n    }\n}\n","<mat-spinner\n  style=\"margin: 0 auto\"\n  mode=\"indeterminate\"\n  color=\"accent\"\n  *ngIf=\"isLoading\"\n>\n</mat-spinner>\n<p style=\"text-align: center\" *ngIf=\"isLoading\">aguarde ...</p>\n<p></p>\n\n<hr />\n\n<div class=\"inner\">\n  <div id=\"main\">\n    <div id=\"side_bar\">\n      <h5 class=\"formatH5\" style=\"text-align: right\">Pedidos preventivos</h5>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        [routerLink]=\"['/pedido-mpreventiva-add']\"\n      >\n        Pedido individual\n      </button>\n\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        [routerLink]=\"['/manutencao-preventiva-programada']\"\n      >\n        Pedido em grupo\n      </button>\n      <button\n        type=\"button\"\n        class=\"btn btn-outline-primary\"\n        style=\"float: right\"\n        (click)=\"printPedidos()\"\n      >\n        Imprimir\n      </button>\n      <br />\n\n      <div class=\"rowSelectTags\">\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">Grupo de máquina:</label\n          ><br />\n          <select\n            class=\"AlignFilter\"\n            id=\"AlignFilter\"\n            [(ngModel)]=\"selectedOptionGrupo\"\n            style=\"width: 180px\"\n          >\n            <option selected>0</option>\n            <option\n              *ngFor=\"let item of gruposMaquinaList\"\n              [value]=\"item.IDGrupoMaquinas\"\n            >\n              {{ item.CodigoInterno }} - {{ item.Descr }}\n            </option>\n          </select>\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">de:</label><br />\n          <input\n            type=\"Date\"\n            [(ngModel)]=\"selectedOptionDateInicio\"\n            select\n            class=\"AlignFilter\"\n            id=\"AlignFilter\"\n            style=\"width: 180px\"\n          />\n        </div>\n        <div class=\"column\">\n          <label class=\"AlignFilter\" for=\"AlignFilter\">até:</label><br />\n          <input\n            type=\"Date\"\n            [(ngModel)]=\"selectedOptionDateFim\"\n            select\n            class=\"AlignFilter\"\n            id=\"AlignFilter\"\n            style=\"width: 180px\"\n          />\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button\n            class=\"AlignFilter\"\n            (click)=\"procuraAvancada()\"\n            mat-icon-button\n          >\n            <mat-icon>search</mat-icon>\n          </button>\n        </div>\n        <div class=\"column2\">\n          <br />\n          <button (click)=\"limparFiltros()\" mat-icon-button>\n            <mat-icon>delete_sweep</mat-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n  <br />\n  <br />\n  <br />\n  <ng-container *ngIf=\"totalPedidos == 0\">\n    <br /><br /><br />\n    <p style=\"text-align: center\"><strong>SEM RESULTADOS</strong></p>\n    <br /><br /><br />\n  </ng-container>\n\n  <div *ngIf=\"totalPedidos > 0\">\n    <div class=\"table-responsive\">\n      <table\n        class=\"table table-bordered\"\n        style=\"width: 100%\"\n        [hidden]=\"isLoading\"\n      >\n        <thead>\n          <tr>\n            <th scope=\"col\" width=\"80\">User</th>\n            <th scope=\"col\" width=\"375\">Equipamento</th>\n            <th scope=\"col\" width=\"400\">Descrição</th>\n            <th scope=\"col\" width=\"150\">Data</th>\n            <th scope=\"col\" width=\"150\">Limite</th>\n            <th scope=\"col\" width=\"80\">Estado</th>\n          </tr>\n        </thead>\n      </table>\n    </div>\n  </div>\n\n  <mat-accordion multi=\"false\">\n    <mat-expansion-panel *ngFor=\"let item of pedidos; let i = index\">\n      <mat-expansion-panel-header collapsedHeight=\"*\" expandedHeight=\"*\">\n        <table class=\"table\">\n          <tbody>\n            <tr>\n              <td class=\"tb-td-txt\" width=\"80\">{{ item.UtilizadorIDUser }}</td>\n              <td class=\"tb-td-txt\" width=\"375\">\n                {{ changeIDtoInternalCode(i) }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"400\">{{ item.Descricao }}</td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataPedido | date: \"dd/MM/yyyy HH:mm\" }}\n              </td>\n              <td class=\"tb-td-txt\" width=\"150\">\n                {{ item.DataLimiteManutencaoPrev | date: \"dd/MM/yyyy\" }}\n              </td>\n\n              <td class=\"tb-td-txt\" width=\"80\">\n                {{ checkStateOfIntervention(i) }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-expansion-panel-header>\n      <div class=\"table-responsive\">\n        <body style=\"text-align: center\">\n          <table class=\"table\" style=\"width: 80%\">\n            <thead>\n              <tr>\n                <th scope=\"col\" width=\"25\">#</th>\n                <th scope=\"col\" width=\"80\">Utilizador</th>\n                <th scope=\"col\" width=\"250\">Descrição</th>\n                <th scope=\"col\" width=\"150\">Estado</th>\n                <th scope=\"col\" width=\"170\">Inicio da intervenção</th>\n                <th scope=\"col\" width=\"170\">Fim da intervenção</th>\n                <th scope=\"col\" width=\"100\">Duração</th>\n\n                <td>\n                  <button\n                    type=\"button\"\n                    (click)=\"openDialog(item.IDPedido)\"\n                    class=\"btn btn-success btn-sm move-right\"\n                    style=\"\n                      position: absolute;\n                      right: 0;\n                      height: 30px;\n                      width: 30px;\n                    \"\n                  >\n                    +\n                  </button>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              <tr></tr>\n\n              <tr *ngFor=\"let inter of intervencoes; let j = index\">\n                <ng-container\n                  *ngIf=\"inter.PedidoManutPreventivaID == item.IDPedido\"\n                >\n                  <th scope=\"row\" width=\"25\">{{ inter.ID }}</th>\n                  <td class=\"tb-td-txt\" width=\"80\">\n                    {{ inter.UtilizadorIDUser }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"250\">{{ inter.Observacoes }}</td>\n                  <td class=\"tb-td-txt\" width=\"150\">\n                    {{ changeIDtoDescription(j) }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataInicioIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"170\">\n                    {{ inter.DataFimIntervencao | date: \"dd/MM/yyyy HH:mm\" }}\n                  </td>\n                  <td class=\"tb-td-txt\" width=\"100\">\n                    {{ getTimeDiff(inter.ID) }}\n                  </td>\n                  <td>\n                    <button\n                      type=\"button\"\n                      color=\"accent\"\n                      (click)=\"deleteIntervencao(inter.ID)\"\n                    >\n                      <mat-icon\n                        _ngcontent-oax-c0=\"\"\n                        class=\"mat-icon notranslate material-icons mat-icon-no-color\"\n                        role=\"img\"\n                        aria-hidden=\"true\"\n                        >delete</mat-icon\n                      >\n                    </button>\n                  </td>\n                </ng-container>\n              </tr>\n            </tbody>\n          </table>\n        </body>\n      </div>\n    </mat-expansion-panel>\n  </mat-accordion>\n  <mat-paginator\n    class=\"col\"\n    [length]=\"totalPedidos\"\n    [pageSize]=\"pedidosPerPage\"\n    [pageSizeOptions]=\"pageSizeOptions\"\n    (page)=\"onChangedPage($event)\"\n    *ngIf=\"pedidos.length > 0\"\n  ></mat-paginator>\n</div>\n","import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { RegisterService } from '../../shared/register/register.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { TipoUtilizadorService } from '../../shared/tipoUtilizador/tipoUtilizador.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n \r\n\r\n\r\n@Component({\r\n  selector: 'app-add-register',\r\n  templateUrl: './register-add.component.html',\r\n  styleUrls: ['./register-add.component.css']\r\n})\r\n\r\nexport class RegisterComponent implements OnInit {\r\n  equipForm: FormGroup;\r\n  tipoUtilizadorList: any = [];\r\n\r\n\r\n  ngOnInit() {\r\n    this.addRegister();\r\n    this.loadTiposUtilizador();\r\n  }\r\n\r\n  constructor(\r\n    public fb: FormBuilder,\r\n    private ngZone: NgZone,\r\n    private router: Router,\r\n    public registerService: RegisterService, \r\n    public tipoUtilizadorService: TipoUtilizadorService,\r\n    private actRoute: ActivatedRoute\r\n  ){ }\r\n\r\n  addRegister() {\r\n    this.equipForm = this.fb.group({\r\n      Email : [''],\r\n      Password : [''],\r\n      ConfirmPassword: [''], \r\n      IDTipo : [0],\r\n      NumeroUtilizador : [0],\r\n      Nome : ['']\r\n    })\r\n  }\r\n\r\n  loadTiposUtilizador() {\r\n    return this.tipoUtilizadorService.GetTiposUtilizador().subscribe((data: {}) => {\r\n      this.tipoUtilizadorList = data;\r\n    })\r\n  }\r\n\r\n  submitForm() {\r\n    this.registerService.CreateRegisto(this.equipForm.value).subscribe(res => {\r\n      console.log('Registo adicionado!')\r\n      this.ngZone.run(() => this.router.navigateByUrl(''))\r\n    });\r\n  }\r\n}","<div class=\"centerScreen\">\r\n<div class=\"container wrapper wrapper2\">\r\n    <div class=\"row\">\r\n\r\n        <!-- Form -->\r\n        <div class=\"col-md-12\">\r\n            <br>\r\n            <h3>Ficha de novo utilizador</h3>\r\n            \r\n            <form [formGroup]=\"equipForm\" (ngSubmit)=\"submitForm()\" novalidate >\r\n                <div class=\"form-group\">\r\n                    <label>Nome</label>\r\n                    <input type=\"text\" formControlName=\"Nome\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Nº de funcionário</label>\r\n                    <input type=\"text\" formControlName=\"NumeroUtilizador\" class=\"form-control\">\r\n                </div>\r\n                <label>Tipo de cargo</label>\r\n                <br>\r\n                <select class=\"form-group\" formControlName=\"IDTipo\">\r\n                    \r\n                    <option value=\"0\">Selecione</option>   \r\n                    <option *ngFor=\"let item of tipoUtilizadorList\" [value]=\"item.IDTipo\">{{item.TipoDescr}}</option>                  \r\n                </select>\r\n                <div class=\"form-group\" >\r\n                    <label>Email</label>\r\n                    <input type=\"text\" formControlName=\"Email\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"text\" formControlName=\"Password\" class=\"form-control\" type=\"password\">\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label>Confirmar password</label>\r\n                    <input type=\"text\" formControlName=\"ConfirmPassword\" class=\"form-control\" type=\"password\">\r\n                </div>\r\n               \r\n                <button type=\"submit\" class=\"btn btn-primary\">Submeter</button>\r\n                <br> <br>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AspNetUsers } from \"./aspNetUsers.model\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AspNetUsersService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  /*httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }*/\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(BACKEND_URL + \"/AspNetUsers\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //GET ONE\r\n  GetOneUser(id): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?UserName=\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //PUT\r\n  UpdateAspNetUser(id, data): Observable<AspNetUsers> {\r\n    return this.http\r\n      .put<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?Username=\" + id,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","export enum UserRoles {\r\n    Admin = 1,\r\n    Utilizador = 2,\r\n    Convidado = 3\r\n  }\r\n\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AspNetRoles } from \"./aspNetRoles.model\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AspNetRolesService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetRoles> {\r\n    return this.http\r\n      .get<AspNetRoles>(BACKEND_URL + \"/AspNetRoles\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n\r\n  //GET ONE\r\n  GetOneUser(email): Observable<AspNetRoles> {\r\n    return this.http\r\n      .get<AspNetRoles>(\r\n        BACKEND_URL + \"/AspNetRoles?email=\" + email,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //PUT\r\n  UpdateAspNetRole(userName, roleName, oldRoleName, data): Observable<AspNetRoles> {\r\n    return this.http\r\n      .put<AspNetRoles>(\r\n        BACKEND_URL + \"/AspNetRoles?userName=\" + userName + \"&roleName=\" + roleName+\"&oldRoleName=\" + oldRoleName,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { AspNetUsers } from \"./aspNetUsers.model\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class AspNetUsersService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  /*httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }*/\r\n\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(BACKEND_URL + \"/AspNetUsers\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //GET ONE\r\n  GetOneUser(id): Observable<AspNetUsers> {\r\n    return this.http\r\n      .get<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?UserName=\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  //PUT\r\n  UpdateAspNetUser(id, data): Observable<AspNetUsers> {\r\n    return this.http\r\n      .put<AspNetUsers>(\r\n        BACKEND_URL + \"/AspNetUsers?Username=\" + id,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  apiUrl: \"http://192.168.0.49:8005/api\",\r\n}; \r\n\r\n/*\r\n export const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:44334/api\",\r\n};\r\n */","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Equipamento } from \"./equipamentomodel\";\nimport { Observable, throwError } from \"rxjs\";\nimport { retry, catchError } from \"rxjs/operators\";\n\nimport { environment } from \"./../environments/environments\";\nconst BACKEND_URL = environment.apiUrl;\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class EquipamentoService {\n  baseurl = \"http://localhost:44334/api\";\n\n  constructor(private http: HttpClient) {}\n\n  // Http Headers\n  httpOptions = {\n    headers: new HttpHeaders({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n    }),\n    withCredentials: true,\n  };\n\n  // POST\n  CreateEquip(data): Observable<Equipamento> {\n    return this.http\n      .post<Equipamento>(\n        BACKEND_URL + \"/Equipamentoes\",\n        JSON.stringify(data),\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  // GET\n  GetOneEquip(id): Observable<Equipamento> {\n    return this.http\n      .get<Equipamento>(BACKEND_URL + \"/Equipamentoes/\" + id, this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  // GET\n  GetEquipamentos(): Observable<Equipamento[]> {\n    return this.http\n      .get<Equipamento[]>(BACKEND_URL + \"/Equipamentoes\", this.httpOptions)\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  // PUT\n  UpdateEquipamento(id, data): Observable<Equipamento> {\n    return this.http\n      .put<Equipamento>(\n        BACKEND_URL + \"/Equipamentoes/\" + id,\n        JSON.stringify(data),\n        this.httpOptions\n      )\n      .pipe(retry(1), catchError(this.errorHandl));\n  }\n\n  errorHandl(error) {\n    let errorMessage = \"\";\n    if (error.error instanceof ErrorEvent) {\n      // Get erro lado cliente\n      errorMessage = error.error.message;\n    } else {\n      // Get erro lado servidor\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    console.log(errorMessage);\n    return throwError(errorMessage);\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { GrupoMaquina } from \"./grupomaquinamodel\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GrupoMaquinaService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  /* httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n*/\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  // GET por IDS\r\n  GetOneGrupoMaquina(id): Observable<GrupoMaquina> {\r\n    return this.http\r\n      .get<GrupoMaquina>(BACKEND_URL + \"/GrupoMaquinas/\" + id, this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // GET all\r\n  GetGruposMaquina(): Observable<GrupoMaquina> {\r\n    return this.http\r\n      .get<GrupoMaquina>(BACKEND_URL + \"/GrupoMaquinas\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // Error handling\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { PedidoManutCurativaTeste } from \"./pedidoMcurativa.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject, Observable, throwError, bindCallback } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { retry, catchError, map } from \"rxjs/operators\";\r\nimport { Equipamento } from \"../equipamento/equipamentomodel\";\r\nimport { EstadoIntervencao } from \"../estadoIntervencao/estadoIntervencao.model\";\r\nimport { GrupoMaquina } from \"../gruposmaquina/grupomaquinamodel\";\r\nimport { IntervencaoCurativa } from \"./intervencaoCurativa.model\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class PedidosService {\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  pedidos: PedidoManutCurativaTeste[] = [];\r\n  //private pedidosUpdated = new Subject<PedidoManutCurativaTeste[]>();\r\n\r\n  private pedidosUpdated = new Subject<{\r\n    pedidos: PedidoManutCurativaTeste[];\r\n    CountPedidos: number;\r\n  }>();\r\n  countPedidos: number;\r\n  intervencoes: IntervencaoCurativa[] = [];\r\n  private intervencoesUpdated = new Subject<IntervencaoCurativa[]>();\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  getPedidos(pedidosPerPage: number, currentPage: number, selectOptionGrupo:number, selectedOptionDateInicio: string, selectedOptionDateFim: string) {\r\n    const queryParms = `?pedidosPerPage=${pedidosPerPage}&currentPage=${currentPage}&grupoMaquina=${selectOptionGrupo}&dataInicio=${selectedOptionDateInicio}&dataFim=${selectedOptionDateFim}`;\r\n    this.httpClient\r\n      .get<{\r\n        PedidoManutCurativaList: PedidoManutCurativaTeste[];\r\n        CountPedidos: number;\r\n      }>(BACKEND_URL + \"/PedidoManutCurativas\" + queryParms, this.httpOptions)\r\n      .pipe(\r\n        map((pedidoCurativaData) => {\r\n          return {\r\n            PedidoManutCurativaList: pedidoCurativaData.PedidoManutCurativaList.map(\r\n              (pedidoCurativo) => {\r\n                return {\r\n                  IDPedido: pedidoCurativo.IDPedido,\r\n                  UtilizadorIDUser: pedidoCurativo.UtilizadorIDUser,\r\n                  IDEquipamento: pedidoCurativo.IDEquipamento,\r\n                  Descricao: pedidoCurativo.Descricao,\r\n                  DataPedido: pedidoCurativo.DataPedido,\r\n                };\r\n              }\r\n            ),\r\n            pedidoCurativoCount: pedidoCurativaData.CountPedidos,\r\n          };\r\n        })\r\n      )\r\n      .subscribe((pedidosCurativa) => {\r\n        this.countPedidos = pedidosCurativa.pedidoCurativoCount;\r\n        console.log(\"numero de pedidos\", pedidosCurativa.pedidoCurativoCount);\r\n        this.pedidos = pedidosCurativa.PedidoManutCurativaList;\r\n        this.pedidosUpdated.next({\r\n          pedidos: [...this.pedidos],\r\n          CountPedidos: this.countPedidos,\r\n        });\r\n      });\r\n  }\r\n\r\n  getIntervencoes() {\r\n    this.httpClient\r\n      .get<any[]>(BACKEND_URL + \"/IntervencaoCurativas\", this.httpOptions)\r\n      .subscribe((intervencoes) => {\r\n        let transformedintervencoes: IntervencaoCurativa[] = [];\r\n        for (let x = 0; x < intervencoes.length; x++) {\r\n          let transformedIntervencao: IntervencaoCurativa = {\r\n            ID: intervencoes[x].ID,\r\n            IDPedido: intervencoes[x].IDPedido,\r\n            UtilizadorIDUser: intervencoes[x].UtilizadorIDUser,\r\n            Descricao: intervencoes[x].Descricao,\r\n            IDEstadoIntervencao: intervencoes[x].IDEstadoIntervencao,\r\n            DataFimIntervencao: intervencoes[x].DataFimIntervencao,\r\n            DataInicioIntervencao: intervencoes[x].DataInicioIntervencao,\r\n          };\r\n          transformedintervencoes.push(transformedIntervencao);\r\n        }\r\n        this.intervencoes = transformedintervencoes;\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      });\r\n  }\r\n\r\n  getPedidoUpdateListener() {\r\n    return this.pedidosUpdated.asObservable();\r\n  }\r\n\r\n  //POST PEDIDO\r\n  postPedido(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/PedidoManutCurativas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise();\r\n    this.pedidos.push(data);\r\n    this.countPedidos = this.countPedidos + 1;\r\n    this.pedidosUpdated.next({\r\n      pedidos: [...this.pedidos],\r\n      CountPedidos: this.countPedidos,\r\n    });\r\n  }\r\n\r\n  postIntervencao(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/IntervencaoCurativas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise()\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.intervencoes.push(res);\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n\r\n  getIntervencaoUpdateListener() {\r\n    return this.intervencoesUpdated.asObservable();\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  // DELETE\r\n  DeleteIntervencao(id) {\r\n    console.log(id, \"cheguei ao metodo\");\r\n    return this.httpClient\r\n      .delete<IntervencaoCurativa>(\r\n        BACKEND_URL + \"/IntervencaoCurativas/\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // GET\r\n  GetEquipamentosObser(): Observable<Equipamento[]> {\r\n    return this.httpClient\r\n      .get<Equipamento[]>(BACKEND_URL + \"/Equipamentoes\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n  // GET\r\n  GetEstadosIntervencao(): Observable<EstadoIntervencao[]> {\r\n    return this.httpClient\r\n      .get<EstadoIntervencao[]>(\r\n        BACKEND_URL + \"/EstadoIntervencaos\",\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  //GET grupos de máquinas\r\n  GetGruposMaquina(): Observable<GrupoMaquina[]> {\r\n    return this.httpClient\r\n      .get<GrupoMaquina[]>(BACKEND_URL + \"/GrupoMaquinas\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n}\r\n\r\n/* LAST GETPEDIDOS\r\n  getPedidos() {\r\n    this.httpClient\r\n      .get<any[]>(\r\n        \"http://localhost:44334/api/PedidoManutCurativas\",\r\n        this.httpOptions\r\n      )\r\n      .subscribe((pedidos) => {\r\n        let transformedpedidos: PedidoManutCurativaTeste[] = [];\r\n        for (let x = 0; x < pedidos.length; x++) {\r\n          let transformedpedido: PedidoManutCurativaTeste = {\r\n            IDPedido: pedidos[x].IDPedido,\r\n            UtilizadorIDUser: pedidos[x].UtilizadorIDUser,\r\n            IDEquipamento: pedidos[x].IDEquipamento,\r\n            Descricao: pedidos[x].Descricao,\r\n            DataPedido: pedidos[x].DataPedido,\r\n          };\r\n          transformedpedidos.push(transformedpedido);\r\n        }\r\n\r\n        this.pedidos = transformedpedidos;\r\n        this.pedidosUpdated.next([...this.pedidos]);\r\n      });\r\n  }*/\r\n\r\n/*  getPedidos() {\r\n      this.httpClient.get<any>('http://localhost:44334/api/PedidoManutCurativas', this.httpOptions)\r\n        .toPromise()\r\n        .then(r => r.map(pedido => ({\r\n          PedidoIDPedido : pedido.IDPedido,\r\n          UtilizadorIDUser : pedido.UtilizadorIDUser,\r\n          IDEquipamento : pedido.IDEquipamento,\r\n          Descricao : pedido.Descricao,\r\n          DataPedido : pedido.DataPedido \r\n        }))\r\n        )\r\n          .then(transformedpedidos => {\r\n          this.pedidos = transformedpedidos;\r\n          this.pedidosUpdated.next([...this.pedidos]);\r\n        });\r\n        \r\n  } */\r\n\r\n/*  getIntervencoes() {\r\n        this.httpClient.get<any>('http://localhost:44334/api/IntervencaoCurativas', this.httpOptions)\r\n          .toPromise()\r\n          .then(r => r.map(intervencao => ({\r\n            ID : intervencao.ID,\r\n            IDPedido : intervencao.IDPedido,\r\n            UtilizadorIDUser : intervencao.UtilizadorIDUser,\r\n            IDEquipamento : intervencao.IDEquipamento,\r\n            Descricao : intervencao.Descricao,\r\n            IDEstadoIntervencao : intervencao.IDEstadoIntervencao,\r\n            DataFimIntervencao: intervencao.DataFimIntervencao,\r\n            DataInicioIntervencao : intervencao.DataInicioIntervencao\r\n          }))\r\n          )\r\n            .then(transformedintervencoes=> {\r\n            this.intervencoes = transformedintervencoes;\r\n            this.intervencoesUpdated.next([...this.intervencoes]);\r\n          });\r\n          console.log(this.intervencoes, 'teste');\r\n    } */\r\n","import { PedidoPreventivo } from \"./pedidoMpreventiva.model\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Subject, Observable, throwError } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { retry, catchError, map } from \"rxjs/operators\";\r\nimport { Equipamento } from \"../equipamento/equipamentomodel\";\r\nimport { EstadoIntervencao } from \"../estadoIntervencao/estadoIntervencao.model\";\r\nimport { GrupoMaquina } from \"../gruposmaquina/grupomaquinamodel\";\r\nimport { IntervencaoPreventivo } from \"./intervencaoPreventiva.model\";\r\nimport { AspNetUsers } from \"./aspNetUsers.model\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\n\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class PedidosPreventivosService {\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    }),\r\n    withCredentials: true,\r\n  };\r\n\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  pedidos: PedidoPreventivo[] = [];\r\n \r\n  countPedidos: number;\r\n\r\n  pedidosUser: PedidoPreventivo[] = [];\r\n\r\n  private pedidosUpdated = new Subject<{\r\n    pedidos: PedidoPreventivo[];\r\n    CountPedidos: number;\r\n  }>();\r\n\r\n  intervencoes: IntervencaoPreventivo[] = [];\r\n  usersList: AspNetUsers[] = [];\r\n  private intervencoesUpdated = new Subject<IntervencaoPreventivo[]>();\r\n\r\n  private pedidosUserUpdated = new Subject<PedidoPreventivo[]>();\r\n\r\n\r\n  getPedidosUserUpdateListener() {\r\n    return this.pedidosUserUpdated.asObservable();\r\n  }\r\n\r\n\r\n\r\n  //POST: manutenção em grupo, através do IdGrupoMaquina via link.\r\n  postPedidoPerGrupoMaquinas(idGrupoMaquina, data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/PedidosPreventivas?grupoMaquina=\" + idGrupoMaquina,\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise();\r\n    this.pedidos.push(data);\r\n    this.countPedidos = this.countPedidos + 1;\r\n    this.pedidosUpdated.next({\r\n      pedidos: [...this.pedidos],\r\n      CountPedidos: this.countPedidos,\r\n    });\r\n  }\r\n\r\n  getPedidoUpdateListener() {\r\n    return this.pedidosUpdated.asObservable();\r\n  }\r\n\r\n  //POST PEDIDO\r\n  postPedido(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/PedidosPreventivas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise();\r\n    this.pedidos.push(data);\r\n    this.countPedidos = this.countPedidos + 1;\r\n    this.pedidosUpdated.next({\r\n      pedidos: [...this.pedidos],\r\n      CountPedidos: this.countPedidos,\r\n    });\r\n  }\r\n\r\n\r\n  getPedidos(pedidosPerPage: number, currentPage: number, selectOptionGrupo:number, selectedOptionDateInicio: string, selectedOptionDateFim: string) {\r\n    const queryParms = `?pedidosPerPage=${pedidosPerPage}&currentPage=${currentPage}&grupoMaquina=${selectOptionGrupo}&dataInicio=${selectedOptionDateInicio}&dataFim=${selectedOptionDateFim}`;\r\n    this.httpClient\r\n      .get<{\r\n        PedidoManutPreventivoList: PedidoPreventivo[];\r\n        CountPedidos: number;\r\n      }>(BACKEND_URL + \"/PedidosPreventivas\" + queryParms, this.httpOptions)\r\n      .pipe(\r\n        map((pedidoPreventivoData) => {\r\n          return {\r\n            PedidoManutPreventivoList: pedidoPreventivoData.PedidoManutPreventivoList.map(\r\n              (pedidoPreventivo) => {\r\n                return {\r\n                  IDPedido: pedidoPreventivo.IDPedido,\r\n                  UtilizadorIDUser: pedidoPreventivo.UtilizadorIDUser,\r\n                  IDEquipamento: pedidoPreventivo.IDEquipamento,\r\n                  Descricao: pedidoPreventivo.Descricao,\r\n                  DataPedido: pedidoPreventivo.DataPedido,\r\n                  FichaManutencaoID: pedidoPreventivo.FichaManutencaoID,\r\n                  DataLimiteManutencaoPrev:\r\n                    pedidoPreventivo.DataLimiteManutencaoPrev,\r\n                };\r\n              }\r\n            ),\r\n            pedidoPreventivoCount: pedidoPreventivoData.CountPedidos,\r\n          };\r\n        })\r\n      )\r\n      .subscribe((pedidosPreventiva) => {\r\n        this.countPedidos = pedidosPreventiva.pedidoPreventivoCount;\r\n        console.log(\r\n          \"numero de pedidos\",\r\n          pedidosPreventiva.pedidoPreventivoCount\r\n        );\r\n        this.pedidos = pedidosPreventiva.PedidoManutPreventivoList;\r\n        this.pedidosUpdated.next({\r\n          pedidos: [...this.pedidos],\r\n          CountPedidos: this.countPedidos,\r\n        });\r\n      });\r\n  }\r\n\r\n  getIntervencoes() {\r\n    this.httpClient\r\n      .get<any[]>(BACKEND_URL + \"/IntervencaoPreventivas\", this.httpOptions)\r\n      .subscribe((intervencoes) => {\r\n        let transformedintervencoes: IntervencaoPreventivo[] = [];\r\n        for (let x = 0; x < intervencoes.length; x++) {\r\n          let transformedIntervencao: IntervencaoPreventivo = {\r\n            ID: intervencoes[x].ID,\r\n            PedidoManutPreventivaID: intervencoes[x].PedidoManutPreventivaID,\r\n            UtilizadorIDUser: intervencoes[x].UtilizadorIDUser,\r\n            Observacoes: intervencoes[x].Observacoes,\r\n            IDEstadoIntervencao: intervencoes[x].IDEstadoIntervencao,\r\n            DataFimIntervencao: intervencoes[x].DataFimIntervencao,\r\n            DataInicioIntervencao: intervencoes[x].DataInicioIntervencao,\r\n          };\r\n          transformedintervencoes.push(transformedIntervencao);\r\n        }\r\n        this.intervencoes = transformedintervencoes;\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      });\r\n  }\r\n\r\n  postIntervencao(data) {\r\n    this.httpClient\r\n      .post<any>(\r\n        BACKEND_URL + \"/IntervencaoPreventivas\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .toPromise()\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.intervencoes.push(res);\r\n        this.intervencoesUpdated.next([...this.intervencoes]);\r\n      })\r\n      .catch((err) => {});\r\n  }\r\n\r\n  getIntervencaoUpdateListener() {\r\n    return this.intervencoesUpdated.asObservable();\r\n  }\r\n\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get erro lado cliente\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get erro lado servidor\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n  // GET\r\n  GetEquipamentosObser(): Observable<Equipamento[]> {\r\n    return this.httpClient\r\n      .get<Equipamento[]>(BACKEND_URL + \"/Equipamentoes\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  // GET\r\n  GetAspNetUsers(): Observable<AspNetUsers> {\r\n    return this.httpClient\r\n      .get<AspNetUsers>(BACKEND_URL + \"/AspNetUsers\", this.httpOptions)\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n\r\n  getPedidosUser() {\r\n    this.httpClient\r\n      .get<any[]>(BACKEND_URL + \"/PedidosPreventivas\", this.httpOptions)\r\n      .subscribe((pedidos) => {\r\n        let transformedpedidos: PedidoPreventivo[] = [];\r\n        for (let x = 0; x < pedidos.length; x++) {\r\n          let transformedPedido: PedidoPreventivo = {\r\n            IDPedido: pedidos[x].ID,\r\n            UtilizadorIDUser: pedidos[x].UtilizadorIDUser,\r\n            IDEquipamento: pedidos[x].IDEquipamento,\r\n            Descricao: pedidos[x].Descricao,\r\n            DataPedido: pedidos[x].DataPedido,\r\n            FichaManutencaoID: pedidos[x].FichaManutencaoID,\r\n            DataLimiteManutencaoPrev: pedidos[x].DataLimiteManutencaoPrev,\r\n          };\r\n          transformedpedidos.push(transformedPedido);\r\n        }\r\n        this.pedidosUser = transformedpedidos;\r\n        this.pedidosUserUpdated.next([...this.pedidosUser]);\r\n      });\r\n  }\r\n\r\n  GetPedidosEmEsperaUser():Observable<PedidoPreventivo>{\r\n    return this.httpClient\r\n      .get<PedidoPreventivo>(\r\n        BACKEND_URL + \"/PedidosPreventivas\",\r\n        this.httpOptions\r\n      )\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.errorHandl));\r\n  }\r\n\r\n  // GET\r\n  GetEstadosIntervencao(): Observable<EstadoIntervencao[]> {\r\n    return this.httpClient\r\n      .get<EstadoIntervencao[]>(\r\n        BACKEND_URL + \"/EstadoIntervencaos\",\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  //GET grupos de máquinas\r\n  GetGruposMaquina(): Observable<GrupoMaquina[]> {\r\n    return this.httpClient\r\n      .get<GrupoMaquina[]>(BACKEND_URL + \"/GrupoMaquinas\", this.httpOptions)\r\n      .pipe(retry(1));\r\n  }\r\n\r\n  // DELETE\r\n  DeleteIntervencao(id) {\r\n    return this.httpClient\r\n      .delete<IntervencaoPreventivo>(\r\n        BACKEND_URL + \"/IntervencaoPreventivas/\" + id,\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Register } from \"./registermodel\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { retry, catchError } from \"rxjs/operators\";\r\n\r\nimport { environment } from \"./../environments/environments\";\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class RegisterService {\r\n  baseurl = \"http://localhost:44334/api\";\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Http Headers\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n  };\r\n\r\n  // POST\r\n  CreateRegisto(data): Observable<Register> {\r\n    return this.http\r\n      .post<Register>(\r\n        BACKEND_URL + \"/Account/Register\",\r\n        JSON.stringify(data),\r\n        this.httpOptions\r\n      )\r\n      .pipe(retry(1), catchError(this.errorHandl));\r\n  }\r\n\r\n  // Error handling\r\n  errorHandl(error) {\r\n    let errorMessage = \"\";\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Get client-side error\r\n      errorMessage = error.error.message;\r\n    } else {\r\n      // Get server-side error\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    console.log(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { TipoUtilizador } from './tipoUtilizador.model';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { environment } from './../environments/environments';\r\nconst BACKEND_URL = environment.apiUrl;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class TipoUtilizadorService {\r\n\r\n  baseurl = 'http://localhost:44334/api';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Http Headers\r\n /* httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n*/\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json', \r\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n   }), \r\n  withCredentials: true\r\n  }\r\n\r\n  // GET por IDS\r\n  GetOneTipoUtilizador(IDTipo): Observable<TipoUtilizador> {\r\n    return this.http.get<TipoUtilizador>(BACKEND_URL+ '/TipoUtilizadors/' + IDTipo, this.httpOptions)\r\n     .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandl)\r\n    )\r\n  }\r\n\r\n  // GET all \r\n  GetTiposUtilizador(): Observable<TipoUtilizador> {\r\n    return this.http.get<TipoUtilizador>(BACKEND_URL + '/TipoUtilizadors', this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.errorHandl)\r\n    )\r\n  }\r\n\r\n  // Error handling\r\n  errorHandl(error) {\r\n     let errorMessage = '';\r\n     if(error.error instanceof ErrorEvent) {\r\n       // Get client-side error\r\n       errorMessage = error.error.message;\r\n     } else {\r\n       // Get server-side error\r\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n     }\r\n     console.log(errorMessage);\r\n     return throwError(errorMessage);\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}